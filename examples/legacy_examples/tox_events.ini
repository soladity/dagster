[tox]
envlist = py{38,37,36}-{unix,windows},pylint

[testenv]
passenv = CI_* COVERALLS_REPO_TOKEN TOXENV AWS_SECRET_ACCESS_KEY AWS_ACCESS_KEY_ID SLUGIFY_USES_TEXT_UNIDECODE
deps =
  -e ../../python_modules/dagster[test]
  -e ../../python_modules/libraries/dagster-aws
  -e ../../python_modules/libraries/dagster-pandas
  -e ../../python_modules/libraries/dagster-gcp
  -e ../../python_modules/libraries/dagster-postgres
  -e ../../python_modules/libraries/dagster-snowflake
  -e ../../python_modules/libraries/dagster-spark
  -e ../../python_modules/libraries/dagster-pyspark
  -e ../../python_modules/libraries/dagster-slack
  -e ../../python_modules/libraries/dagster-cron
  -e ../../python_modules/libraries/dagstermill
  -e ../../python_modules/dagster-graphql
  -e ../../python_modules/dagit
  -e ../../python_modules/libraries/dagster-airflow
  -e ../../python_modules/libraries/dagster-databricks
  -e ../../python_modules/libraries/lakehouse
  -e .[full,test]

usedevelop = true
whitelist_externals =
  /bin/bash
  echo
commands =
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster -e dagit'
  coverage erase
  echo -e "--- \033[0;32m:pytest: Running tox tests\033[0m"
  pytest dagster_examples_tests/event_pipeline_demo_tests/ -vv --junitxml=test_results.xml --cov=dagster_examples --cov=../python_modules --cov-append --cov-report=
  coverage report --omit='.tox/*,**/test_*.py' --skip-covered
  coverage html --omit='.tox/*,**/test_*.py'
  coverage xml --omit='.tox/*,**/test_*.py'

[testenv:pylint]
whitelist_externals =
  pylint
basepython =
  python3.7
commands =
  pylint -j 0 --rcfile=../.pylintrc dagster_examples/event_pipeline_demo dagster_examples_tests/event_pipeline_demo_tests

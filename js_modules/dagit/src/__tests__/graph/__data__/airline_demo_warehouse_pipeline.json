{"data": {"pipelineOrError": {"description": null, "modes": [{"description": null, "loggers": [{"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": null, "isOptional": true, "name": "log_level"}, {"configType": {"key": "String"}, "description": null, "isOptional": true, "name": "name"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.25", "name": null}}, "description": "The default colored console logger.", "name": "console"}], "name": "local", "resources": [{"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "postgres_db_name"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "postgres_hostname"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "postgres_password"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "postgres_username"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.48", "name": null}}, "description": null, "name": "db_info"}, {"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "Bool"}, "description": null, "isOptional": true, "name": "overwrite"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "target_folder"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}, {"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "Bool", "name": "Bool"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.40", "name": null}}, "description": null, "name": "file_cache"}, {"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "Bool"}, "description": "Specifies whether to use an unsigned S3 session", "isOptional": true, "name": "use_unsigned_session"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "Bool", "name": "Bool"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.42", "name": null}}, "description": null, "name": "s3"}, {"configField": null, "description": null, "name": "spark"}, {"configField": null, "description": null, "name": "tempfile"}]}, {"description": null, "loggers": [{"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": null, "isOptional": true, "name": "log_level"}, {"configType": {"key": "String"}, "description": null, "isOptional": true, "name": "name"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.25", "name": null}}, "description": "The default colored console logger.", "name": "console"}], "name": "prod", "resources": [{"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "redshift_db_name"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "redshift_hostname"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "redshift_password"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "redshift_username"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "s3_temp_dir"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.47", "name": null}}, "description": null, "name": "db_info"}, {"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "bucket"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "key"}, {"configType": {"key": "Bool"}, "description": null, "isOptional": true, "name": "overwrite"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "Bool", "name": "Bool"}, {"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.41", "name": null}}, "description": null, "name": "file_cache"}, {"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "Bool"}, "description": "Specifies whether to use an unsigned S3 session", "isOptional": true, "name": "use_unsigned_session"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "Bool", "name": "Bool"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.42", "name": null}}, "description": null, "name": "s3"}, {"configField": null, "description": null, "name": "spark"}, {"configField": null, "description": null, "name": "tempfile"}]}, {"description": null, "loggers": [{"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": null, "isOptional": true, "name": "log_level"}, {"configType": {"key": "String"}, "description": null, "isOptional": true, "name": "name"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.25", "name": null}}, "description": "The default colored console logger.", "name": "console"}], "name": "test", "resources": [{"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "redshift_db_name"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "redshift_hostname"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "redshift_password"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "redshift_username"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "s3_temp_dir"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.47", "name": null}}, "description": null, "name": "db_info"}, {"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "Bool"}, "description": null, "isOptional": true, "name": "overwrite"}, {"configType": {"key": "String"}, "description": null, "isOptional": false, "name": "target_folder"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}, {"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "Bool", "name": "Bool"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.40", "name": null}}, "description": null, "name": "file_cache"}, {"configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "Bool"}, "description": "Specifies whether to use an unsigned S3 session", "isOptional": true, "name": "use_unsigned_session"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "Bool", "name": "Bool"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.42", "name": null}}, "description": null, "name": "s3"}, {"configField": null, "description": null, "name": "spark"}, {"configField": null, "description": null, "name": "tempfile"}]}], "name": "airline_demo_warehouse_pipeline", "solidHandles": [{"handleID": "average_sfo_outbound_avg_delays_by_destination", "parent": null, "solid": {"definition": {"__typename": "SolidDefinition", "configField": null, "description": "This solid executes the following SQL statement:\n    \n    select\n        cast(cast(arrdelay as float) as integer) as arrival_delay,\n        cast(cast(depdelay as float) as integer) as departure_delay,\n        origin,\n        dest as destination\n    from q2_sfo_outbound_flights\n    ", "inputDefinitions": [{"description": null, "name": "q2_sfo_outbound_flights", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "metadata": [{"key": "kind", "value": "sql"}, {"key": "sql", "value": "drop table if exists average_sfo_outbound_avg_delays_by_destination;\ncreate table average_sfo_outbound_avg_delays_by_destination as \n    select\n        cast(cast(arrdelay as float) as integer) as arrival_delay,\n        cast(cast(depdelay as float) as integer) as departure_delay,\n        origin,\n        dest as destination\n    from q2_sfo_outbound_flights\n    ;"}], "name": "average_sfo_outbound_avg_delays_by_destination", "outputDefinitions": [{"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "requiredResources": []}, "inputs": [{"definition": {"description": null, "name": "q2_sfo_outbound_flights", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "q2_sfo_outbound_flights"}}]}], "name": "average_sfo_outbound_avg_delays_by_destination", "outputs": [{"definition": {"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependedBy": [{"definition": {"name": "average_sfo_outbound_avg_delays_by_destination", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "delays_vs_fares"}}, {"definition": {"name": "table_name", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "sfo_delays_by_destination"}}]}]}}, {"handleID": "delays_vs_fares", "parent": null, "solid": {"definition": {"__typename": "SolidDefinition", "configField": null, "description": "This solid executes the following SQL statement:\n    \n    with avg_fares as (\n        select\n            tickets.origin,\n            tickets.dest,\n            avg(cast(tickets.itinfare as float)) as avg_fare,\n            avg(cast(tickets.farepermile as float)) as avg_fare_per_mile\n        from tickets_with_destination as tickets\n        where origin = 'SFO'\n        group by (tickets.origin, tickets.dest)\n    )\n    select\n        avg_fares.*,\n        avg(avg_delays.arrival_delay) as avg_arrival_delay,\n        avg(avg_delays.departure_delay) as avg_departure_delay\n    from\n        avg_fares,\n        average_sfo_outbound_avg_delays_by_destination as avg_delays\n    where\n        avg_fares.origin = avg_delays.origin and\n        avg_fares.dest = avg_delays.destination\n    group by (\n        avg_fares.avg_fare,\n        avg_fares.avg_fare_per_mile,\n        avg_fares.origin,\n        avg_delays.origin,\n        avg_fares.dest,\n        avg_delays.destination\n    )\n    ", "inputDefinitions": [{"description": null, "name": "tickets_with_destination", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, {"description": null, "name": "average_sfo_outbound_avg_delays_by_destination", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "metadata": [{"key": "kind", "value": "sql"}, {"key": "sql", "value": "drop table if exists delays_vs_fares;\ncreate table delays_vs_fares as \n    with avg_fares as (\n        select\n            tickets.origin,\n            tickets.dest,\n            avg(cast(tickets.itinfare as float)) as avg_fare,\n            avg(cast(tickets.farepermile as float)) as avg_fare_per_mile\n        from tickets_with_destination as tickets\n        where origin = 'SFO'\n        group by (tickets.origin, tickets.dest)\n    )\n    select\n        avg_fares.*,\n        avg(avg_delays.arrival_delay) as avg_arrival_delay,\n        avg(avg_delays.departure_delay) as avg_departure_delay\n    from\n        avg_fares,\n        average_sfo_outbound_avg_delays_by_destination as avg_delays\n    where\n        avg_fares.origin = avg_delays.origin and\n        avg_fares.dest = avg_delays.destination\n    group by (\n        avg_fares.avg_fare,\n        avg_fares.avg_fare_per_mile,\n        avg_fares.origin,\n        avg_delays.origin,\n        avg_fares.dest,\n        avg_delays.destination\n    )\n    ;"}], "name": "delays_vs_fares", "outputDefinitions": [{"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "requiredResources": []}, "inputs": [{"definition": {"description": null, "name": "tickets_with_destination", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "tickets_with_destination"}}]}, {"definition": {"description": null, "name": "average_sfo_outbound_avg_delays_by_destination", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "average_sfo_outbound_avg_delays_by_destination"}}]}], "name": "delays_vs_fares", "outputs": [{"definition": {"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependedBy": [{"definition": {"name": "table_name", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "fares_vs_delays"}}]}]}}, {"handleID": "fares_vs_delays", "parent": null, "solid": {"definition": {"__typename": "SolidDefinition", "configField": null, "description": "This solid is backed by the notebook at /Users/schrockn/code/dagster/examples/dagster_examples/airline_demo/notebooks/Fares_vs_Delays.ipynb", "inputDefinitions": [{"description": "The SQL table to use for calcuations.", "name": "table_name", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "metadata": [{"key": "notebook_path", "value": "/Users/schrockn/code/dagster/examples/dagster_examples/airline_demo/notebooks/Fares_vs_Delays.ipynb"}, {"key": "kind", "value": "ipynb"}], "name": "fares_vs_delays", "outputDefinitions": [{"description": "The path to the saved PDF plots.", "name": "result", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}], "requiredResources": []}, "inputs": [{"definition": {"description": "The SQL table to use for calcuations.", "name": "table_name", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "delays_vs_fares"}}]}], "name": "fares_vs_delays", "outputs": [{"definition": {"description": "The path to the saved PDF plots.", "name": "result", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}, "dependedBy": [{"definition": {"name": "file_handle", "type": {"displayName": "FileHandle"}}, "solid": {"name": "upload_delays_vs_fares_pdf_plots"}}]}]}}, {"handleID": "process_delays_by_geo", "parent": null, "solid": {"definition": {"__typename": "CompositeSolidDefinition", "description": null, "inputDefinitions": [], "inputMappings": [], "metadata": [], "name": "process_delays_by_geo", "outputDefinitions": [{"description": null, "name": "result", "type": {"description": null, "displayName": "S3FileHandle", "name": "S3FileHandle"}}], "outputMappings": [{"definition": {"name": "result"}, "mappedOutput": {"definition": {"name": "s3_file_handle"}, "solid": {"name": "upload_delays_by_geography_pdf_plots"}}}], "requiredResources": []}, "inputs": [], "name": "process_delays_by_geo", "outputs": [{"definition": {"description": null, "name": "result", "type": {"description": null, "displayName": "S3FileHandle", "name": "S3FileHandle"}}, "dependedBy": []}]}}, {"handleID": "process_delays_by_geo.delays_by_geography", "parent": {"handleID": "process_delays_by_geo"}, "solid": {"definition": {"__typename": "SolidDefinition", "configField": null, "description": "This solid is backed by the notebook at /Users/schrockn/code/dagster/examples/dagster_examples/airline_demo/notebooks/Delays_by_Geography.ipynb", "inputDefinitions": [{"description": "The SQL table containing westbound delays.", "name": "westbound_delays", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, {"description": "The SQL table containing eastbound delays.", "name": "eastbound_delays", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "metadata": [{"key": "notebook_path", "value": "/Users/schrockn/code/dagster/examples/dagster_examples/airline_demo/notebooks/Delays_by_Geography.ipynb"}, {"key": "kind", "value": "ipynb"}], "name": "delays_by_geography", "outputDefinitions": [{"description": "The saved PDF plots.", "name": "result", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}], "requiredResources": []}, "inputs": [{"definition": {"description": "The SQL table containing westbound delays.", "name": "westbound_delays", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "westbound_delays"}}]}, {"definition": {"description": "The SQL table containing eastbound delays.", "name": "eastbound_delays", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "eastbound_delays"}}]}], "name": "delays_by_geography", "outputs": [{"definition": {"description": "The saved PDF plots.", "name": "result", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}, "dependedBy": [{"definition": {"name": "file_handle", "type": {"displayName": "FileHandle"}}, "solid": {"name": "upload_delays_by_geography_pdf_plots"}}]}]}}, {"handleID": "process_delays_by_geo.eastbound_delays", "parent": {"handleID": "process_delays_by_geo"}, "solid": {"definition": {"__typename": "SolidDefinition", "configField": null, "description": "This solid executes the following SQL statement:\n    \n    select\n        avg(cast(cast(arrdelay as float) as integer)) as avg_arrival_delay,\n        avg(cast(cast(depdelay as float) as integer)) as avg_departure_delay,\n        origin,\n        dest as destination,\n        count(1) as num_flights,\n        avg(cast(dest_latitude as float)) as dest_latitude,\n        avg(cast(dest_longitude as float)) as dest_longitude,\n        avg(cast(origin_latitude as float)) as origin_latitude,\n        avg(cast(origin_longitude as float)) as origin_longitude\n    from q2_on_time_data\n    where\n        cast(origin_longitude as float) < cast(dest_longitude as float) and\n        originstate != 'HI' and\n        deststate != 'HI' and\n        originstate != 'AK' and\n        deststate != 'AK'\n    group by (origin,destination)\n    order by num_flights desc\n    limit 100;\n    ", "inputDefinitions": [], "metadata": [{"key": "kind", "value": "sql"}, {"key": "sql", "value": "drop table if exists eastbound_delays;\ncreate table eastbound_delays as \n    select\n        avg(cast(cast(arrdelay as float) as integer)) as avg_arrival_delay,\n        avg(cast(cast(depdelay as float) as integer)) as avg_departure_delay,\n        origin,\n        dest as destination,\n        count(1) as num_flights,\n        avg(cast(dest_latitude as float)) as dest_latitude,\n        avg(cast(dest_longitude as float)) as dest_longitude,\n        avg(cast(origin_latitude as float)) as origin_latitude,\n        avg(cast(origin_longitude as float)) as origin_longitude\n    from q2_on_time_data\n    where\n        cast(origin_longitude as float) < cast(dest_longitude as float) and\n        originstate != 'HI' and\n        deststate != 'HI' and\n        originstate != 'AK' and\n        deststate != 'AK'\n    group by (origin,destination)\n    order by num_flights desc\n    limit 100;\n    ;"}], "name": "eastbound_delays", "outputDefinitions": [{"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "requiredResources": []}, "inputs": [], "name": "eastbound_delays", "outputs": [{"definition": {"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependedBy": [{"definition": {"name": "eastbound_delays", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "delays_by_geography"}}]}]}}, {"handleID": "process_delays_by_geo.upload_delays_by_geography_pdf_plots", "parent": {"handleID": "process_delays_by_geo"}, "solid": {"definition": {"__typename": "SolidDefinition", "configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": "The name of the bucket to upload to.", "isOptional": false, "name": "Bucket"}, {"configType": {"key": "String"}, "description": "The name of the key to upload to.", "isOptional": false, "name": "Key"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.44", "name": null}}, "description": "Take a file handle and upload it to s3. Returns an S3FileHandle.", "inputDefinitions": [{"description": "The file to upload.", "name": "file_handle", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}], "metadata": [], "name": "file_handle_to_s3", "outputDefinitions": [{"description": null, "name": "s3_file_handle", "type": {"description": null, "displayName": "S3FileHandle", "name": "S3FileHandle"}}], "requiredResources": []}, "inputs": [{"definition": {"description": "The file to upload.", "name": "file_handle", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "FileHandle"}}, "solid": {"name": "delays_by_geography"}}]}], "name": "upload_delays_by_geography_pdf_plots", "outputs": [{"definition": {"description": null, "name": "s3_file_handle", "type": {"description": null, "displayName": "S3FileHandle", "name": "S3FileHandle"}}, "dependedBy": []}]}}, {"handleID": "process_delays_by_geo.westbound_delays", "parent": {"handleID": "process_delays_by_geo"}, "solid": {"definition": {"__typename": "SolidDefinition", "configField": null, "description": "This solid executes the following SQL statement:\n    \n    select\n        avg(cast(cast(arrdelay as float) as integer)) as avg_arrival_delay,\n        avg(cast(cast(depdelay as float) as integer)) as avg_departure_delay,\n        origin,\n        dest as destination,\n        count(1) as num_flights,\n        avg(cast(dest_latitude as float)) as dest_latitude,\n        avg(cast(dest_longitude as float)) as dest_longitude,\n        avg(cast(origin_latitude as float)) as origin_latitude,\n        avg(cast(origin_longitude as float)) as origin_longitude\n    from q2_on_time_data\n    where\n        cast(origin_longitude as float) > cast(dest_longitude as float) and\n        originstate != 'HI' and\n        deststate != 'HI' and\n        originstate != 'AK' and\n        deststate != 'AK'\n    group by (origin,destination)\n    order by num_flights desc\n    limit 100;\n    ", "inputDefinitions": [], "metadata": [{"key": "kind", "value": "sql"}, {"key": "sql", "value": "drop table if exists westbound_delays;\ncreate table westbound_delays as \n    select\n        avg(cast(cast(arrdelay as float) as integer)) as avg_arrival_delay,\n        avg(cast(cast(depdelay as float) as integer)) as avg_departure_delay,\n        origin,\n        dest as destination,\n        count(1) as num_flights,\n        avg(cast(dest_latitude as float)) as dest_latitude,\n        avg(cast(dest_longitude as float)) as dest_longitude,\n        avg(cast(origin_latitude as float)) as origin_latitude,\n        avg(cast(origin_longitude as float)) as origin_longitude\n    from q2_on_time_data\n    where\n        cast(origin_longitude as float) > cast(dest_longitude as float) and\n        originstate != 'HI' and\n        deststate != 'HI' and\n        originstate != 'AK' and\n        deststate != 'AK'\n    group by (origin,destination)\n    order by num_flights desc\n    limit 100;\n    ;"}], "name": "westbound_delays", "outputDefinitions": [{"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "requiredResources": []}, "inputs": [], "name": "westbound_delays", "outputs": [{"definition": {"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependedBy": [{"definition": {"name": "westbound_delays", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "delays_by_geography"}}]}]}}, {"handleID": "q2_sfo_outbound_flights", "parent": null, "solid": {"definition": {"__typename": "SolidDefinition", "configField": null, "description": "This solid executes the following SQL statement:\n    \n    select * from q2_on_time_data\n    where origin = 'SFO'\n    ", "inputDefinitions": [], "metadata": [{"key": "kind", "value": "sql"}, {"key": "sql", "value": "drop table if exists q2_sfo_outbound_flights;\ncreate table q2_sfo_outbound_flights as \n    select * from q2_on_time_data\n    where origin = 'SFO'\n    ;"}], "name": "q2_sfo_outbound_flights", "outputDefinitions": [{"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "requiredResources": []}, "inputs": [], "name": "q2_sfo_outbound_flights", "outputs": [{"definition": {"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependedBy": [{"definition": {"name": "q2_sfo_outbound_flights", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "average_sfo_outbound_avg_delays_by_destination"}}]}]}}, {"handleID": "sfo_delays_by_destination", "parent": null, "solid": {"definition": {"__typename": "SolidDefinition", "configField": null, "description": "This solid is backed by the notebook at /Users/schrockn/code/dagster/examples/dagster_examples/airline_demo/notebooks/SFO_Delays_by_Destination.ipynb", "inputDefinitions": [{"description": "The SQL table to use for calcuations.", "name": "table_name", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "metadata": [{"key": "notebook_path", "value": "/Users/schrockn/code/dagster/examples/dagster_examples/airline_demo/notebooks/SFO_Delays_by_Destination.ipynb"}, {"key": "kind", "value": "ipynb"}], "name": "sfo_delays_by_destination", "outputDefinitions": [{"description": "The path to the saved PDF plots.", "name": "result", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}], "requiredResources": []}, "inputs": [{"definition": {"description": "The SQL table to use for calcuations.", "name": "table_name", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "average_sfo_outbound_avg_delays_by_destination"}}]}], "name": "sfo_delays_by_destination", "outputs": [{"definition": {"description": "The path to the saved PDF plots.", "name": "result", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}, "dependedBy": [{"definition": {"name": "file_handle", "type": {"displayName": "FileHandle"}}, "solid": {"name": "upload_outbound_avg_delay_pdf_plots"}}]}]}}, {"handleID": "tickets_with_destination", "parent": null, "solid": {"definition": {"__typename": "SolidDefinition", "configField": null, "description": "This solid executes the following SQL statement:\n    \n    select\n        tickets.*,\n        coupons.dest,\n        coupons.destairportid,\n        coupons.destairportseqid, coupons.destcitymarketid,\n        coupons.destcountry,\n        coupons.deststatefips,\n        coupons.deststate,\n        coupons.deststatename,\n        coupons.destwac\n    from\n        q2_ticket_data as tickets,\n        q2_coupon_data as coupons\n    where\n        tickets.itinid = coupons.itinid;\n    ", "inputDefinitions": [], "metadata": [{"key": "kind", "value": "sql"}, {"key": "sql", "value": "drop table if exists tickets_with_destination;\ncreate table tickets_with_destination as \n    select\n        tickets.*,\n        coupons.dest,\n        coupons.destairportid,\n        coupons.destairportseqid, coupons.destcitymarketid,\n        coupons.destcountry,\n        coupons.deststatefips,\n        coupons.deststate,\n        coupons.deststatename,\n        coupons.destwac\n    from\n        q2_ticket_data as tickets,\n        q2_coupon_data as coupons\n    where\n        tickets.itinid = coupons.itinid;\n    ;"}], "name": "tickets_with_destination", "outputDefinitions": [{"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}], "requiredResources": []}, "inputs": [], "name": "tickets_with_destination", "outputs": [{"definition": {"description": "The string name of the new table created by the solid", "name": "result", "type": {"description": "The name of a database table", "displayName": "SqlTableName", "name": "SqlTableName"}}, "dependedBy": [{"definition": {"name": "tickets_with_destination", "type": {"displayName": "SqlTableName"}}, "solid": {"name": "delays_vs_fares"}}]}]}}, {"handleID": "upload_delays_vs_fares_pdf_plots", "parent": null, "solid": {"definition": {"__typename": "SolidDefinition", "configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": "The name of the bucket to upload to.", "isOptional": false, "name": "Bucket"}, {"configType": {"key": "String"}, "description": "The name of the key to upload to.", "isOptional": false, "name": "Key"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.44", "name": null}}, "description": "Take a file handle and upload it to s3. Returns an S3FileHandle.", "inputDefinitions": [{"description": "The file to upload.", "name": "file_handle", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}], "metadata": [], "name": "file_handle_to_s3", "outputDefinitions": [{"description": null, "name": "s3_file_handle", "type": {"description": null, "displayName": "S3FileHandle", "name": "S3FileHandle"}}], "requiredResources": []}, "inputs": [{"definition": {"description": "The file to upload.", "name": "file_handle", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "FileHandle"}}, "solid": {"name": "fares_vs_delays"}}]}], "name": "upload_delays_vs_fares_pdf_plots", "outputs": [{"definition": {"description": null, "name": "s3_file_handle", "type": {"description": null, "displayName": "S3FileHandle", "name": "S3FileHandle"}}, "dependedBy": []}]}}, {"handleID": "upload_outbound_avg_delay_pdf_plots", "parent": null, "solid": {"definition": {"__typename": "SolidDefinition", "configField": {"configType": {"description": "A configuration dictionary with typed fields", "fields": [{"configType": {"key": "String"}, "description": "The name of the bucket to upload to.", "isOptional": false, "name": "Bucket"}, {"configType": {"key": "String"}, "description": "The name of the key to upload to.", "isOptional": false, "name": "Key"}], "innerTypes": [{"description": "", "innerTypes": [], "isList": false, "isNullable": false, "isSelector": false, "key": "String", "name": "String"}], "isList": false, "isNullable": false, "isSelector": false, "key": "Dict.44", "name": null}}, "description": "Take a file handle and upload it to s3. Returns an S3FileHandle.", "inputDefinitions": [{"description": "The file to upload.", "name": "file_handle", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}], "metadata": [], "name": "file_handle_to_s3", "outputDefinitions": [{"description": null, "name": "s3_file_handle", "type": {"description": null, "displayName": "S3FileHandle", "name": "S3FileHandle"}}], "requiredResources": []}, "inputs": [{"definition": {"description": "The file to upload.", "name": "file_handle", "type": {"description": null, "displayName": "FileHandle", "name": "FileHandle"}}, "dependsOn": [{"definition": {"name": "result", "type": {"displayName": "FileHandle"}}, "solid": {"name": "sfo_delays_by_destination"}}]}], "name": "upload_outbound_avg_delay_pdf_plots", "outputs": [{"definition": {"description": null, "name": "s3_file_handle", "type": {"description": null, "displayName": "S3FileHandle", "name": "S3FileHandle"}}, "dependedBy": []}]}}], "solids": [{"name": "average_sfo_outbound_avg_delays_by_destination"}, {"name": "delays_vs_fares"}, {"name": "fares_vs_delays"}, {"name": "process_delays_by_geo"}, {"name": "q2_sfo_outbound_flights"}, {"name": "sfo_delays_by_destination"}, {"name": "tickets_with_destination"}, {"name": "upload_delays_vs_fares_pdf_plots"}, {"name": "upload_outbound_avg_delay_pdf_plots"}]}}}

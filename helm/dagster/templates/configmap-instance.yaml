apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "dagster.fullname" . }}-instance
  labels:
    app: {{ template "dagster.name" . }}
    chart: {{ template "dagster.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  dagster.yaml: |
    scheduler:
      {{- $schedulerType := .Values.scheduler.type }}

      {{- if eq $schedulerType "DagsterDaemonScheduler" }}
        {{- include "dagsterYaml.scheduler.daemon" . | indent 6 -}}
      {{- else if eq $schedulerType "K8sScheduler" }}
        {{- include "dagsterYaml.scheduler.k8s" . | indent 6 -}}
      {{- else if eq $schedulerType "CustomScheduler" }}
        {{- include "dagsterYaml.scheduler.custom" . | indent 6 -}}
      {{- end }}

    schedule_storage:
      module: dagster_postgres.schedule_storage
      class: PostgresScheduleStorage
      config:
        postgres_db:
          username: {{ .Values.postgresql.postgresqlUsername }}
          password:
            env: DAGSTER_PG_PASSWORD
          hostname: {{ include "dagster.postgresql.host" . }}
          db_name:  {{ .Values.postgresql.postgresqlDatabase	}}
          port: {{ .Values.postgresql.service.port }}

    run_launcher:
      {{- $runLauncherType := .Values.runLauncher.type }}

      {{- if eq $runLauncherType "CeleryK8sRunLauncher" }}
        {{- include "dagsterYaml.runLauncher.celery" . | indent 6 -}}
      {{- else if eq $runLauncherType "K8sRunLauncher" }}
        {{- include "dagsterYaml.runLauncher.k8s" . | indent 6 -}}
      {{- else if eq $runLauncherType "CustomRunLauncher" }}
        {{- include "dagsterYaml.runLauncher.custom" . | indent 6 -}}
      {{- end }}

    run_storage:
      module: dagster_postgres.run_storage
      class: PostgresRunStorage
      config:
        postgres_db:
          username: {{ .Values.postgresql.postgresqlUsername }}
          password:
            env: DAGSTER_PG_PASSWORD
          hostname: {{ include "dagster.postgresql.host" . }}
          db_name:  {{ .Values.postgresql.postgresqlDatabase	}}
          port: {{ .Values.postgresql.service.port }}

    event_log_storage:
      module: dagster_postgres.event_log
      class: PostgresEventLogStorage
      config:
        postgres_db:
          username: {{ .Values.postgresql.postgresqlUsername }}
          password:
            env: DAGSTER_PG_PASSWORD
          hostname: {{ include "dagster.postgresql.host" . }}
          db_name:  {{ .Values.postgresql.postgresqlDatabase	}}
          port: {{ .Values.postgresql.service.port }}

    {{- if and (.Values.dagsterDaemon.enabled) (.Values.dagsterDaemon.queuedRunCoordinator.enabled) }}
    run_coordinator:
      module: dagster.core.run_coordinator
      class: QueuedRunCoordinator
      config:
      {{- toYaml .Values.dagsterDaemon.queuedRunCoordinator.config | nindent 8 }}
    {{- end }}

    {{- $computeLogManagerType := .Values.computeLogManager.type }}
    {{- if not (eq $computeLogManagerType "LocalComputeLogManager") }}
    compute_logs:
      {{- if eq $computeLogManagerType "AzureBlobComputeLogManager" }}
        {{- include "dagsterYaml.computeLogManager.azure" . | indent 6 -}}
      {{- else if eq $computeLogManagerType "GCSComputeLogManager" }}
        {{- include "dagsterYaml.computeLogManager.gcs" . | indent 6 -}}
      {{- else if eq $computeLogManagerType "S3ComputeLogManager" }}
        {{- include "dagsterYaml.computeLogManager.s3" . | indent 6 -}}
      {{- else if eq $computeLogManagerType "CustomComputeLogManager" }}
        {{- include "dagsterYaml.computeLogManager.custom" . | indent 6 -}}
      {{- end }}
    {{- end }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "dagster.fullname" . }}-instance
  labels:
    app: {{ template "dagster.name" . }}
    chart: {{ template "dagster.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  dagster.yaml: |
    scheduler:
      {{- if .Values.scheduler.k8sEnabled }}
      module: dagster_k8s.scheduler
      class: K8sScheduler
      config:
        load_incluster_config: {{ .Values.scheduler.loadInclusterConfig }}
        scheduler_namespace: {{ .Values.scheduler.schedulerNamespace | default .Release.Namespace }}
        kubeconfig_file: {{ .Values.scheduler.kubeconfigFile }}
        {{- with $.Values.imagePullSecrets }}
        image_pull_secrets:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        service_account_name: {{ include "dagster.serviceAccountName" . }}
        job_image: "{{- .Values.scheduler.image.repository -}}:{{- .Values.scheduler.image.tag -}}"
        dagster_home:
          env: DAGSTER_HOME
        postgres_password_secret:
          env: DAGSTER_K8S_PG_PASSWORD_SECRET
        image_pull_policy: {{ .Values.scheduler.image.pullPolicy }}
        instance_config_map:
          env: DAGSTER_K8S_INSTANCE_CONFIG_MAP
        env_config_maps:
          - env: DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP
        env_secrets:
          {{- if $.Values.scheduler.envSecrets -}}
          {{- range $name := $.Values.scheduler.envSecrets }}
          {{- if $name }}
          - {{ $name }}
          {{- end }}
          {{- end }}
          {{- end }}
    {{- else }}
      module: dagster.core.scheduler
      class: DagsterDaemonScheduler
    {{- end }}

    schedule_storage:
      module: dagster_postgres.schedule_storage
      class: PostgresScheduleStorage
      config:
        postgres_db:
          username: {{ .Values.postgresql.postgresqlUsername }}
          password:
            env: DAGSTER_PG_PASSWORD
          hostname: {{ include "dagster.postgresql.host" . }}
          db_name:  {{ .Values.postgresql.postgresqlDatabase	}}
          port: {{ .Values.postgresql.service.port }}

    run_launcher:
      {{- if eq (include "dagster.celery_k8s_run_launcher_enabled" .) "true" }}
      module: dagster_celery_k8s
      class: CeleryK8sRunLauncher
      config:
        dagster_home:
          env: DAGSTER_HOME
        instance_config_map:
          env: DAGSTER_K8S_INSTANCE_CONFIG_MAP
        postgres_password_secret:
          env: DAGSTER_K8S_PG_PASSWORD_SECRET
        broker:  "{{ template "dagster.celery.broker_url" . }}"
        backend: "{{ template "dagster.celery.backend_url" . }}"
        config_source:
        {{- if .Values.celery.configSource }}
        {{- toYaml .Values.celery.configSource | nindent 10 }}
        {{- end }}
      {{- else if eq (include "dagster.k8s_run_launcher_enabled" .) "true" }}
      module: dagster_k8s
      class: K8sRunLauncher
      config:
        load_incluster_config: {{ .Values.k8sRunLauncher.loadInclusterConfig }}
        kubeconfig_file: {{ .Values.k8sRunLauncher.kubeconfigFile }}
        job_namespace: {{ .Values.k8sRunLauncher.jobNamespace | default .Release.Namespace }}
        image_pull_secrets: {{- toYaml $.Values.imagePullSecrets | nindent 10 }}
        service_account_name: {{ include "dagster.serviceAccountName" . }}
        {{- if .Values.k8sRunLauncher.image }}
        job_image: "{{- .Values.k8sRunLauncher.image.repository -}}:{{- .Values.k8sRunLauncher.image.tag -}}"
        image_pull_policy: {{ .Values.k8sRunLauncher.image.pullPolicy }}
        {{- end }}
        dagster_home:
          env: DAGSTER_HOME
        instance_config_map:
          env: DAGSTER_K8S_INSTANCE_CONFIG_MAP
        postgres_password_secret:
          env: DAGSTER_K8S_PG_PASSWORD_SECRET
        env_config_maps:
          - env: DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP
          {{- range $name := $.Values.k8sRunLauncher.envConfigMaps }}
          {{- if $name }}
          - {{ $name }}
          {{- end }}
          {{- end }}
        env_secrets:
          {{- range $name := $.Values.k8sRunLauncher.envSecrets }}
          {{- if $name }}
          - {{ $name }}
          {{- end }}
          {{- end }}
      {{- end }}

    run_storage:
      module: dagster_postgres.run_storage
      class: PostgresRunStorage
      config:
        postgres_db:
          username: {{ .Values.postgresql.postgresqlUsername }}
          password:
            env: DAGSTER_PG_PASSWORD
          hostname: {{ include "dagster.postgresql.host" . }}
          db_name:  {{ .Values.postgresql.postgresqlDatabase	}}
          port: {{ .Values.postgresql.service.port }}

    event_log_storage:
      module: dagster_postgres.event_log
      class: PostgresEventLogStorage
      config:
        postgres_db:
          username: {{ .Values.postgresql.postgresqlUsername }}
          password:
            env: DAGSTER_PG_PASSWORD
          hostname: {{ include "dagster.postgresql.host" . }}
          db_name:  {{ .Values.postgresql.postgresqlDatabase	}}
          port: {{ .Values.postgresql.service.port }}

    {{- if and (.Values.dagsterDaemon.enabled) (.Values.dagsterDaemon.queuedRunCoordinator.enabled) }}
    run_coordinator:
      module: dagster.core.run_coordinator
      class: QueuedRunCoordinator
      config:
      {{- toYaml .Values.dagsterDaemon.queuedRunCoordinator.config | nindent 8 }}
    {{- end }}

{{- if .Values.dagsterDaemon.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dagster.fullname" $ -}}-daemon
  labels:
    {{- include "dagster.labels" $ | nindent 4 }}
    component: dagster-daemon
    deployment: daemon
  annotations:
    {{- range $key, $value := .Values.dagsterDaemon.annotations }}
    {{ $key }}: {{ $value | squote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "dagster.selectorLabels" $ | nindent 6 }}
      component: dagster-daemon
      deployment: daemon
  template:
    metadata:
      labels:
        {{- include "dagster.selectorLabels" $ | nindent 8 }}
        component: dagster-daemon
        deployment: daemon
      annotations:
        checksum/dagster-instance: {{ include (print $.Template.BasePath "/configmap-instance.yaml") . | sha256sum }}
        {{- range $key, $value := .Values.dagsterDaemon.annotations }}
        {{ $key }}: {{ $value | squote }}
        {{- end }}
    spec:
      imagePullSecrets:
        {{- toYaml $.Values.imagePullSecrets | nindent 8 }}
      serviceAccountName: {{ include "dagster.serviceAccountName" $ }}
      securityContext:
        {{- toYaml .Values.dagsterDaemon.podSecurityContext | nindent 8 }}
      initContainers:
        - name: check-db-ready
          image: {{ include "dagster.externalImage.name" $.Values.postgresql.image | quote }}
          imagePullPolicy: "{{- $.Values.postgresql.image.pullPolicy -}}"
          command: ['sh', '-c', {{ include "dagster.postgresql.pgisready" . | squote }}]
          securityContext:
            {{- toYaml .Values.dagsterDaemon.securityContext | nindent 12 }}
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml .Values.dagsterDaemon.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.dagsterDaemon.image.pullPolicy }}
          image: {{ include "dagster.dagsterImage.name" (list $ .Values.dagsterDaemon.image) | quote }}
          command: ["dagster-daemon"]
          args: ["run"]
          env:
            - name: DAGSTER_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "dagster.postgresql.secretName" $ | quote }}
                  key: postgresql-password
            - name: DAGSTER_DAEMON_HEARTBEAT_TOLERANCE
              value: "{{ .Values.dagsterDaemon.heartbeatTolerance }}"
          envFrom:
            - configMapRef:
                name: {{ template "dagster.fullname" $ }}-daemon-env
            {{- range $envConfigMap := .Values.dagsterDaemon.envConfigMaps }}
            - configMapRef: {{- $envConfigMap | toYaml | nindent 16 }}
            {{- end }}
            {{- range $envSecret := .Values.dagsterDaemon.envSecrets }}
            - secretRef: {{- $envSecret | toYaml | nindent 16 }}
            {{- end }}
          volumeMounts:
            - name: dagster-instance
              mountPath: "{{ $.Values.global.dagsterHome }}/dagster.yaml"
              subPath: dagster.yaml
          resources:
            {{- toYaml .Values.dagsterDaemon.resources | nindent 12 }}
          {{- if .Values.dagsterDaemon.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.dagsterDaemon.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.dagsterDaemon.startupProbe.enabled}}
          {{- $startupProbe := omit .Values.dagsterDaemon.startupProbe "enabled" }}
          startupProbe:
            {{- toYaml $startupProbe | nindent 12 }}
          {{- end }}
      nodeSelector:
        {{- toYaml .Values.dagsterDaemon.nodeSelector | nindent 8 }}
      volumes:
        - name: dagster-instance
          configMap:
            name: {{ template "dagster.fullname" $ }}-instance
      affinity:
        {{- toYaml .Values.dagsterDaemon.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.dagsterDaemon.tolerations | nindent 8 }}
---
{{ end }}

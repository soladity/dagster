{{- if .Values.userDeployments.enabled }}
{{ range $deployment := .Values.userDeployments.deployments }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dagster.fullname" $ -}}-{{- $deployment.name }}
  labels:
    {{- include "dagster.labels" $ | nindent 4 }}
    component: user-deployments
    deployment: {{ $deployment.name }}
  annotations:
    {{- if hasKey $deployment "annotations" }}
    {{- range $key, $value := $deployment.annotations }}
    {{ $key }}: {{ $value | squote }}
    {{- end }}
    {{- end }}
spec:
  replicas: {{ $deployment.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "dagster.selectorLabels" $ | nindent 6 }}
      component: user-deployments
      deployment: {{ $deployment.name }}
  template:
    metadata:
      labels:
        {{- include "dagster.selectorLabels" $ | nindent 8 }}
        component: user-deployments
        deployment: {{ $deployment.name }}
      annotations:
        checksum/dagster-workspace: {{ include (print $.Template.BasePath "/configmap-workspace.yaml") $ | sha256sum }}
        checksum/dagster-instance: {{ include (print $.Template.BasePath "/configmap-instance.yaml") $ | sha256sum }}
        {{- if hasKey $deployment "annotations" }}
        {{- range $key, $value := $deployment.annotations }}
        {{ $key }}: {{ $value | squote }}
        {{- end }}
        {{- end }}
    spec:
    {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "dagster.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $deployment.podSecurityContext | nindent 8 }}
      initContainers:
        - name: check-db-ready
          image: "{{- $.Values.postgresql.image.repository -}}:{{- $.Values.postgresql.image.tag -}}"
          imagePullPolicy: "{{- $.Values.postgresql.image.pullPolicy -}}"
          command: ['sh', '-c',
            'until pg_isready -h {{ include "dagster.postgresql.host" $ }} -p {{ $.Values.postgresql.service.port }}; do echo waiting for database; sleep 2; done;',
            ]
          securityContext:
            {{- toYaml $deployment.securityContext | nindent 12 }}
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml $deployment.securityContext | nindent 12 }}
          imagePullPolicy: {{ $deployment.image.pullPolicy }}
          image: "{{ $deployment.image.repository }}:{{ $deployment.image.tag }}"
          command: ["dagster"]
          args: ["api", "grpc", "-h", "0.0.0.0", "-p", "{{ $deployment.port }}", "{{- join "\",\"" $deployment.dagsterApiGrpcArgs }}"]
          env:
            - name: DAGSTER_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ template "dagster.fullname" $ }}-postgresql-secret"
                  key: postgresql-password
            - name: DAGSTER_CURRENT_IMAGE
              value: "{{ $deployment.image.repository }}:{{ $deployment.image.tag }}"
          envFrom:
            - configMapRef:
                name: {{ template "dagster.fullname" $ }}-{{ $deployment.name }}-user-env
            {{- range $envConfigMap := $deployment.envConfigMaps }}
            - configMapRef: {{- $envConfigMap | toYaml | nindent 16 }}
            {{- end }}
            {{- range $envSecret := $deployment.envSecrets }}
            - secretRef: {{- $envSecret | toYaml | nindent 16 }}
            {{- end }}
          resources:
            {{- toYaml $deployment.resources | nindent 12 }}
        {{- if $deployment.livenessProbe }}
          {{- if not $deployment.livenessProbe.exec }}
          livenessProbe:
            exec:
              command: ["dagster", "api", "grpc-health-check", "-p", "{{ $deployment.port }}"]
            {{- if hasKey $deployment.livenessProbe "initialDelaySeconds" }}
            initialDelaySeconds:
              {{- toYaml $deployment.livenessProbe.initialDelaySeconds | nindent 14 }}
            {{- end }}
            {{- if hasKey $deployment.livenessProbe "periodSeconds" }}
            periodSeconds:
              {{- toYaml $deployment.livenessProbe.periodSeconds | nindent 14 }}
            {{- end }}
            {{- if hasKey $deployment.livenessProbe "timeoutSeconds" }}
            timeoutSeconds:
              {{- toYaml $deployment.livenessProbe.timeoutSeconds | nindent 14 }}
            {{- end }}
            {{- if hasKey $deployment.livenessProbe "successThreshold" }}
            successThreshold:
              {{- toYaml $deployment.livenessProbe.successThreshold | nindent 14 }}
            {{- end }}
            {{- if hasKey $deployment.livenessProbe "failureThreshold" }}
            failureThreshold:
              {{- toYaml $deployment.livenessProbe.failureThreshold | nindent 14 }}
            {{- end }}
          {{- else}}
          livenessProbe:
            {{- toYaml $deployment.livenessProbe | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if $deployment.startupProbe }}
          {{- if not $deployment.startupProbe.exec }}
          startupProbe:
            exec:
              command: ["dagster", "api", "grpc-health-check", "-p", "{{ $deployment.port }}"]
            {{- if hasKey $deployment.startupProbe "initialDelaySeconds" }}
            initialDelaySeconds:
              {{- toYaml $deployment.startupProbe.initialDelaySeconds | nindent 14 }}
            {{- end }}
            {{- if hasKey $deployment.startupProbe "periodSeconds" }}
            periodSeconds:
              {{- toYaml $deployment.startupProbe.periodSeconds | nindent 14 }}
            {{- end }}
            {{- if hasKey $deployment.startupProbe "timeoutSeconds" }}
            timeoutSeconds:
              {{- toYaml $deployment.startupProbe.timeoutSeconds | nindent 14 }}
            {{- end }}
            {{- if hasKey $deployment.startupProbe "successThreshold" }}
            successThreshold:
              {{- toYaml $deployment.startupProbe.successThreshold | nindent 14 }}
            {{- end }}
            {{- if hasKey $deployment.startupProbe "failureThreshold" }}
            failureThreshold:
              {{- toYaml $deployment.startupProbe.failureThreshold | nindent 14 }}
            {{- end }}
          {{- else}}
          startupProbe:
            {{- toYaml $deployment.startupProbe | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- with $deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with $deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
{{ end }}
{{ end }}

version: 2

workflows:
  version: 2
  test:
    jobs:
      # Required for merge


      - dagster-py37:
          context: coveralls
      - dagster-py36:
          context: coveralls
      - dagster-py35:
          context: coveralls
      - dagster-py27:
          context: coveralls

      - dagit-py37:
          context: coveralls
      - dagit-py36:
          context: coveralls
      - dagit-py35:
          context: coveralls
      - dagit-py27:
          context: coveralls

      - dagit-webapp:
          context: coveralls

      - dagster-graphql-py37:
          context: coveralls
      - dagster-graphql-py36:
          context: coveralls
      - dagster-graphql-py35:
          context: coveralls
      - dagster-graphql-py27:
          context: coveralls


      - format

      - lint

      - dagstermill-py37:
          context: coveralls
      - dagstermill-py36:
          context: coveralls
      - dagstermill-py35:
          context: coveralls
      - dagstermill-py27:
          context: coveralls

      - dagster-pandas-py37:
          context: coveralls
      - dagster-pandas-py36:
          context: coveralls
      - dagster-pandas-py35:
          context: coveralls
      - dagster-pandas-py27:
          context: coveralls

      - dagster-sqlalchemy-py37:
          context: coveralls
      - dagster-sqlalchemy-py36:
          context: coveralls
      - dagster-sqlalchemy-py35:
          context: coveralls
      - dagster-sqlalchemy-py27:
          context: coveralls

      - dagster-ge-py37:
          context: coveralls
      - dagster-ge-py36:
          context: coveralls
      - dagster-ge-py35:
          context: coveralls
      - dagster-ge-py27:
          context: coveralls

      # see: https://github.com/apache/airflow/pull/3723
      # - dagster-airflow-py37:
      #     context: coveralls
      - dagster-airflow-py36:
          context: coveralls
      - dagster-airflow-py35:
          context: coveralls
      - dagster-airflow-py27:
          context: coveralls

      - airline-demo-py37:
          context: coveralls
      - airline-demo-py36:
          context: coveralls
      - airline-demo-py35:
          context: coveralls
      - airline-demo-py27:
          context: coveralls

      - event-pipeline-demo-py37:
          context: coveralls
      - event-pipeline-demo-py36:
          context: coveralls
      - event-pipeline-demo-py35:
          context: coveralls
      - event-pipeline-demo-py27:
          context: coveralls

      - dagster-framework-aws-py37:
          context: coveralls
      - dagster-framework-aws-py36:
          context: coveralls
      - dagster-framework-aws-py35:
          context: coveralls
      - dagster-framework-aws-py27:
          context: coveralls

      - dagster-framework-snowflake-py37:
          context: coveralls
      - dagster-framework-snowflake-py36:
          context: coveralls
      - dagster-framework-snowflake-py35:
          context: coveralls
      - dagster-framework-snowflake-py27:
          context: coveralls

      - dagster-framework-spark-py37:
          context: coveralls
      - dagster-framework-spark-py36:
          context: coveralls
      - dagster-framework-spark-py35:
          context: coveralls
      - dagster-framework-spark-py27:
          context: coveralls

      - coverage:
          requires:
            - dagster-py37
            - dagster-py36
            - dagster-py35
            - dagster-py27

            - dagit-py37
            - dagit-py36
            - dagit-py35
            - dagit-py27


            - dagster-graphql-py37
            - dagster-graphql-py36
            - dagster-graphql-py35
            - dagster-graphql-py27

            - dagstermill-py37
            - dagstermill-py36
            - dagstermill-py35
            - dagstermill-py27

            - dagster-pandas-py37
            - dagster-pandas-py36
            - dagster-pandas-py35
            - dagster-pandas-py27

            - dagster-sqlalchemy-py37
            - dagster-sqlalchemy-py36
            - dagster-sqlalchemy-py35
            - dagster-sqlalchemy-py27

            - dagster-ge-py37
            - dagster-ge-py36
            - dagster-ge-py35
            - dagster-ge-py27

            # https://github.com/apache/airflow/pull/3723
            # - dagster-airflow-py37
            - dagster-airflow-py36
            - dagster-airflow-py35
            - dagster-airflow-py27

            # https://github.com/dagster-io/dagster/issues/1124
            - airline-demo-py37
            - airline-demo-py36
            - airline-demo-py35
            - airline-demo-py27

            - event-pipeline-demo-py37
            - event-pipeline-demo-py36
            - event-pipeline-demo-py35
            - event-pipeline-demo-py27

            - dagster-framework-aws-py37
            - dagster-framework-aws-py36
            - dagster-framework-aws-py35
            - dagster-framework-aws-py27

            - dagster-framework-snowflake-py37
            - dagster-framework-snowflake-py36
            - dagster-framework-snowflake-py35
            - dagster-framework-snowflake-py27

            - dagster-framework-spark-py37
            - dagster-framework-spark-py36
            - dagster-framework-spark-py35
            - dagster-framework-spark-py27
          context: coveralls
  nightly:
    triggers:
      - schedule:
          cron: "0 8 * * *"
          filters:
            branches:
              only:
                - nightly
    jobs:
      - nightly

jobs:
  format:
    docker:
      - image: dagster/cci-test:3.7.3

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install Black
          command: sudo pip install black==18.9b0

      - run:
          name: Format
          command: black python_modules --line-length 100 -S --fast --check --exclude "build/|buck-out/|dist/|_build/|\.eggs/|\.git/|\.hg/|\.mypy_cache/|\.nox/|\.tox/|\.venv/|python_modules/dagster/dagster/tutorials/|snapshots/|__scaffold\.py" -N

      - run:
          name: Format
          command: black python_modules/dagster/dagster/tutorials --line-length 79 -S --fast --check -N

  lint:
    docker:
      - image: dagster/cci-test:3.7.3

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo pip install -r python_modules/dagster/dev-requirements.txt -qqq
            sudo pip install -e python_modules/dagster -qqq
            sudo pip install -e python_modules/dagster-graphql -qqq
            sudo pip install -e python_modules/dagit -qqq
            sudo pip install -r python_modules/dagit/dev-requirements.txt -qqq
            sudo pip install -e python_modules/dagstermill -qqq
            sudo pip install -e python_modules/dagster-pandas -qqq
            sudo pip install -e python_modules/dagster-sqlalchemy -qqq

      - attach_workspace:
          at: /tmp/workspace

      # only block warnings for now
      - run: pylint -j 0 python_modules/dagster/dagster python_modules/dagster/dagster_tests python_modules/dagit/dagit python_modules/dagit/dagit_tests python_modules/dagstermill/dagstermill python_modules/dagster-pandas/dagster_pandas python_modules/dagster-sqlalchemy/dagster_sqlalchemy python_modules/dagster-graphql/dagster_graphql --rcfile=.pylintrc --disable=R,C

  dagit-py36: &dagit-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagit
            tox -e $TOXENV
            popd

      - run:
          command: |
            mv python_modules/dagit/.coverage python_modules/.coverage.dagit.${CIRCLE_BUILD_NUM}

      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-py36: &dagster-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster
            tox -e $TOXENV
            popd

      - run:
          command: |
            mv python_modules/dagster/.coverage python_modules/.coverage.dagster.${CIRCLE_BUILD_NUM}

      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagstermill-py36: &dagstermill-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagstermill
            tox -e $TOXENV
            popd
      - run:
          command: |
            mv python_modules/dagstermill/.coverage python_modules/.coverage.dagstermill.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-graphql-py36: &dagster-graphql-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-graphql
            tox -e $TOXENV
            popd
      - run:
          command: |
            mv python_modules/dagster-graphql/.coverage python_modules/.coverage.dagster-graphql.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-pandas-py36: &dagster-pandas-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-pandas
            tox -e $TOXENV
            popd
      - run:
          command: |
            mv python_modules/dagster-pandas/.coverage python_modules/.coverage.dagster-pandas.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-sqlalchemy-py36: &dagster-sqlalchemy-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-sqlalchemy
            tox -e $TOXENV
            popd
      - run:
          command: |
            mv python_modules/dagster-sqlalchemy/.coverage python_modules/.coverage.dagster-sqlalchemy.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-ge-py36: &dagster-ge-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-ge
            tox -e $TOXENV
            popd
      - run:
          command: |
            mv python_modules/dagster-ge/.coverage python_modules/.coverage.dagster-ge.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-airflow-py36:
    machine:
      docker_layer_caching: true
    environment:
      TOXENV: py36
      PYTHON_VERSION: "3.6.3"
      AIRFLOW_HOME: "/home/circleci/airflow"
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install py36
          command: |
            pyenv install 3.6.3
            sudo pip install -U 'pip<19.0' # see: https://github.com/pypa/pip/issues/6163
            sudo pip install tox
      - run:
          name: Build Dockerfile
          command: |
            pushd python_modules/dagster-airflow/dagster_airflow_tests/test_project
            . build.sh
            popd
      - run:
          name: Setup AIRFLOW_HOME
          command: |
            mkdir -p /home/circleci/airflow
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-airflow
            pyenv local $PYTHON_VERSION
            tox -e $TOXENV
            popd
      - run:
          command: |
            mv python_modules/dagster-airflow/.coverage python_modules/.coverage.dagster-airflow.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagit-py37:
    <<: *dagit-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagit-py35:
    <<: *dagit-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagit-py27:
    <<: *dagit-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  dagster-py37:
    <<: *dagster-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagster-py35:
    <<: *dagster-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagster-py27:
    <<: *dagster-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  dagstermill-py37:
    <<: *dagstermill-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagstermill-py35:
    <<: *dagstermill-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagstermill-py27:
    <<: *dagstermill-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  dagster-graphql-py37:
    <<: *dagster-graphql-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagster-graphql-py35:
    <<: *dagster-graphql-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagster-graphql-py27:
    <<: *dagster-graphql-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  dagster-pandas-py37:
    <<: *dagster-pandas-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagster-pandas-py35:
    <<: *dagster-pandas-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagster-pandas-py27:
    <<: *dagster-pandas-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  dagster-sqlalchemy-py37:
    <<: *dagster-sqlalchemy-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagster-sqlalchemy-py35:
    <<: *dagster-sqlalchemy-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagster-sqlalchemy-py27:
    <<: *dagster-sqlalchemy-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  dagster-ge-py37:
    <<: *dagster-ge-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagster-ge-py35:
    <<: *dagster-ge-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagster-ge-py27:
    <<: *dagster-ge-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  # https://github.com/apache/airflow/pull/3723
  # dagster-airflow-py37:
  #   <<: *dagster-airflow-template
  #   environment:
  #     TOXENV: py37
  #     AIRFLOW_HOME: "/home/circleci/airflow"

  dagster-airflow-py35:
    machine:
      docker_layer_caching: true
    environment:
      TOXENV: py35
      PYTHON_VERSION: "3.5.2"
      AIRFLOW_HOME: "/home/circleci/airflow"
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            sudo pip install -U 'pip<19.0' # see: https://github.com/pypa/pip/issues/6163
            sudo pip install tox
      - run:
          name: Build Dockerfile
          command: |
            pushd python_modules/dagster-airflow/dagster_airflow_tests/test_project
            . build.sh
            popd
      - run:
          name: Setup AIRFLOW_HOME
          command: |
            mkdir -p /home/circleci/airflow
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-airflow
            pyenv local $PYTHON_VERSION
            tox -e $TOXENV
            popd
      - run:
          command: |
            mv python_modules/dagster-airflow/.coverage python_modules/.coverage.dagster-airflow.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-airflow-py27:
    machine:
      docker_layer_caching: true
    environment:
      TOXENV: py27
      PYTHON_VERSION: "2.7.12"
      AIRFLOW_HOME: "/home/circleci/airflow"
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install py27-dev
          command: |
            sudo apt-get install python2.7-dev
      - run:
          name: Install dependencies
          command: |
            sudo pip install -U 'pip<19.0' # see: https://github.com/pypa/pip/issues/6163
            sudo pip install tox

      - run:
          name: Build Dockerfile
          command: |
            pushd python_modules/dagster-airflow/dagster_airflow_tests/test_project
            . build.sh
            popd
      - run:
          name: Setup AIRFLOW_HOME
          command: |
            mkdir -p /home/circleci/airflow
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-airflow
            pyenv local $PYTHON_VERSION
            tox -e $TOXENV
            popd
      - run:
          command: |
            mv python_modules/dagster-airflow/.coverage python_modules/.coverage.dagster-airflow.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagit-webapp:
    docker:
      - image: circleci/python:3.7.2-node
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo pip install -r python_modules/dagster/dev-requirements.txt -qqq
            sudo pip install -e python_modules/dagster -qqq
            sudo pip install -e python_modules/dagster-graphql -qqq
            sudo pip install -e python_modules/dagit -qqq
            sudo pip install -r python_modules/dagit/dev-requirements.txt -qqq
            cd js_modules/dagit
            yarn install --offline

      - run:
          name: Run Typescript
          command: |
            cd js_modules/dagit
            yarn run ts

      - run:
          name: Run Tests
          command: |
            cd js_modules/dagit
            yarn run jest

      - run:
          name: Check coding style
          command: |
            cd js_modules/dagit
            yarn run check-prettier

      - run:
          name: Check GraphQL artifacts in sync
          command: |
            cd js_modules/dagit
            yarn download-schema
            yarn generate-types
            git diff --exit-code

  # We are using the machine executor in order to avoid the pitfalls catalogued at
  # https://circleci.com/docs/2.0/building-docker-images/#separation-of-environments.
  # Specifically, we want to be able to network the Docker containers created by the
  # Airflow DagsterOperator with the Postgres database we spin up using docker-compose (which
  # persists after individual DagsterOperators complete), and we want to be able to mount host
  # directories into the DagsterOperator containers.
  airline-demo-py36:
    machine:
      docker_layer_caching: true
    environment:
      TOXENV: py36
      SLUGIFY_USES_TEXT_UNIDECODE: "yes"
      PYTHON_VERSION: "3.6.3"
      AIRFLOW_HOME: "/home/circleci/airflow"
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install py36
          command: |
            pyenv install 3.6.3
            sudo pip install -U 'pip<19.0' # see: https://github.com/pypa/pip/issues/6163
            sudo pip install tox
      - run:
          name: Build Dockerfile
          command: |
            pushd python_modules/airline-demo/
            . build.sh
            popd
      - run:
          name: Setup AIRFLOW_HOME
          command: |
            mkdir -p /home/circleci/airflow
      - run:
          name: Install Dependencies
          command: |
            pyenv local 3.6.3
            sudo apt-get update
            sudo apt-get install libpq-dev
      - run:
          name: Setup AIRFLOW_HOME
          command: |
            mkdir -p /home/circleci/airflow
      - run:
          name: Docker-compose for db
          command: |
            pushd python_modules/airline-demo
            docker-compose up -d
      - run:
          name: Run airline-demo Tests
          command: |
            cd python_modules/airline-demo
            tox -e $TOXENV
            # docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
            # docker push dagster/airline-demo-airflow
      - run:
          command: mv python_modules/airline-demo/.coverage python_modules/airline-demo/.coverage.airline-demo.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/airline-demo/
          paths:
            - .coverage*

  airline-demo-py37:
    docker:
      # FIXME: https://github.com/dagster-io/dagster/issues/521
      - image: dagster/cci-test:3.7.3
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          SLUGIFY_USES_TEXT_UNIDECODE: "yes"
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    environment:
      TOXENV: py37
    steps:
      - checkout
      - run:
          name: Run airline-demo Tests
          command: |
            cd python_modules/airline-demo
            tox -e $TOXENV
      - run:
          command: mv python_modules/airline-demo/.coverage python_modules/airline-demo/.coverage.airline-demo.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/airline-demo/
          paths:
            - .coverage*

  airline-demo-py35:
    machine:
      docker_layer_caching: true
    environment:
      TOXENV: py35
      SLUGIFY_USES_TEXT_UNIDECODE: "yes"
      PYTHON_VERSION: "3.5.2"
      AIRFLOW_HOME: "/home/circleci/airflow"
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Build Dockerfile
          command: |
            pushd python_modules/airline-demo/
            . build.sh
            popd
      - run:
          name: Setup AIRFLOW_HOME
          command: |
            mkdir -p /home/circleci/airflow
      - run:
          name: Setup AIRFLOW_HOME
          command: |
            mkdir -p /home/circleci/airflow
      - run:
          name: Docker-compose for db
          command: |
            pushd python_modules/airline-demo
            docker-compose up -d
      - run:
          name: Set up py35 (!?)
          command: |
            pyenv global 3.5.2
            sudo pip install -U 'pip<19.0' # see: https://github.com/pypa/pip/issues/6163
            sudo pip install tox
            sudo apt-get update
            sudo apt-get install libpq-dev
      - run:
          name: Run airline-demo Tests
          command: |
            cd python_modules/airline-demo
            tox -e $TOXENV
      - run:
          command: mv python_modules/airline-demo/.coverage python_modules/airline-demo/.coverage.airline-demo.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/airline-demo/
          paths:
            - .coverage*

  airline-demo-py27:
    machine:
      docker_layer_caching: true
    environment:
      TOXENV: py27
      SLUGIFY_USES_TEXT_UNIDECODE: "yes"
      PYTHON_VERSION: "2.7.12"
      AIRFLOW_HOME: "/home/circleci/airflow"
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install py27-dev
          command: |
            pyenv install 2.7.14
      - run:
          name: Build Dockerfile
          command: |
            pushd python_modules/airline-demo/
            . build.sh
            popd
      - run:
          name: Setup AIRFLOW_HOME
          command: |
            mkdir -p /home/circleci/airflow
      - run:
          name: Install Dependencies
          command: |
            pyenv local 2.7.14  # avoiding an annoying circle-specific upgrade step
            sudo pip install -U 'pip<19.0' # see: https://github.com/pypa/pip/issues/6163
            sudo pip install tox tox-pyenv
            sudo apt-get update
            sudo apt-get install libpq-dev
      - run:
          name: Setup AIRFLOW_HOME
          command: |
            mkdir -p /home/circleci/airflow
      - run:
          name: Docker-compose for db
          command: |
            pushd python_modules/airline-demo
            docker-compose up -d
      - run:
          name: Run airline-demo Tests
          command: |
            cd python_modules/airline-demo
            tox -e $TOXENV
      - run:
          command: mv python_modules/airline-demo/.coverage python_modules/airline-demo/.coverage.airline-demo.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/airline-demo/
          paths:
            - .coverage*

  event-pipeline-demo-py36: &event-pipeline-demo-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
      SLUGIFY_USES_TEXT_UNIDECODE: "yes"
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Create working directory for build
          command: |
            mkdir -p /tmp/dagster/events/
      - run:
          name: Build Scala jar
          command: |
            pushd scala_modules
            /opt/sbt/bin/sbt events/assembly
            cp ./events/target/scala-2.11/events-assembly-0.1.0-SNAPSHOT.jar /tmp/dagster/events/
            popd
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/event-pipeline-demo
            tox -e $TOXENV
            popd
      - run:
          command: |
            mv python_modules/event-pipeline-demo/.coverage python_modules/.coverage.event-pipeline-demo.${CIRCLE_BUILD_NUM}
      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  event-pipeline-demo-py37:
    <<: *event-pipeline-demo-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37
      SLUGIFY_USES_TEXT_UNIDECODE: "yes"

  event-pipeline-demo-py35:
    <<: *event-pipeline-demo-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35
      SLUGIFY_USES_TEXT_UNIDECODE: "yes"

  event-pipeline-demo-py27:
    <<: *event-pipeline-demo-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27
      SLUGIFY_USES_TEXT_UNIDECODE: "yes"

  dagster-framework-aws-py36: &dagster-framework-aws-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-framework/aws
            tox -e $TOXENV
            popd

      - run:
          command: |
            mv python_modules/dagster-framework/aws/.coverage python_modules/.coverage.dagster-framework-aws.${CIRCLE_BUILD_NUM}

      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-framework-aws-py37:
    <<: *dagster-framework-aws-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagster-framework-aws-py35:
    <<: *dagster-framework-aws-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagster-framework-aws-py27:
    <<: *dagster-framework-aws-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  dagster-framework-snowflake-py36: &dagster-framework-snowflake-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-framework/snowflake
            tox -e $TOXENV
            popd

      - run:
          command: |
            mv python_modules/dagster-framework/snowflake/.coverage python_modules/.coverage.dagster-framework-snowflake.${CIRCLE_BUILD_NUM}

      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-framework-snowflake-py37:
    <<: *dagster-framework-snowflake-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagster-framework-snowflake-py35:
    <<: *dagster-framework-snowflake-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagster-framework-snowflake-py27:
    <<: *dagster-framework-snowflake-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  dagster-framework-spark-py36: &dagster-framework-spark-template
    docker:
      - image: dagster/cci-test:3.6.8
    environment:
      TOXENV: py36
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster-framework/spark
            tox -e $TOXENV
            popd

      - run:
          command: |
            mv python_modules/dagster-framework/spark/.coverage python_modules/.coverage.dagster-framework-spark.${CIRCLE_BUILD_NUM}

      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-framework-spark-py37:
    <<: *dagster-framework-spark-template
    docker:
      - image: dagster/cci-test:3.7.3
    environment:
      TOXENV: py37

  dagster-framework-spark-py35:
    <<: *dagster-framework-spark-template
    docker:
      - image: dagster/cci-test:3.5.7
    environment:
      TOXENV: py35

  dagster-framework-spark-py27:
    <<: *dagster-framework-spark-template
    docker:
      - image: dagster/cci-test:2.7.16
    environment:
      TOXENV: py27

  coverage:
    docker:
      - image: dagster/cci-test:3.6.8
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo pip install coverage coveralls

      - attach_workspace:
          at: /tmp/workspace

      - run: |
          cp /tmp/workspace/.coverage* .
          coverage combine
          coveralls

  nightly:
    docker:
      - image: dagster/cci-test:3.6.8

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure git
          command: |
            git config --global user.email "$GITHUB_EMAIL"
            git config --global user.name "$GITHUB_NAME"

      - run:
          name: Merge master
          command: |
            git fetch --all
            git checkout master
            git reset --hard origin/master
            git checkout nightly
            GIT_MERGE_AUTOEDIT=no git merge master -s theirs

      - run:
          name: Install requirements
          command: sudo pip install -r bin/requirements.txt

      # Gruesome, see https://circleci.com/blog/continuously-deploying-python-packages-to-pypi-with-circleci/
      # https://github.com/pypa/setuptools/issues/954 and linked issues https://github.com/pypa/setuptools/issues/941,
      # https://github.com/pypa/setuptools/pull/961
      - run:
          name: Create ~/.pypirc
          command: |
            echo -e "[distutils]" >> ~/.pypirc
            echo -e "index-servers =" >> ~/.pypirc
            echo -e "  pypi" >> ~/.pypirc
            echo -e "" >> ~/.pypirc
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "repository: https://upload.pypi.org/legacy/" >> ~/.pypirc
            echo -e "username: $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Publish nightlies
          command: python bin/publish.py publish --nightly

      - run:
          name: Test dev setup script
          command: |
            python -m venv .
            source bin/activate
            . dev_env_setup.sh

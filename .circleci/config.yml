version: 2

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 8 * * *"
          filters:
            branches:
              only:
                - nightly
    jobs:
      - nightly

jobs:
  nightly:
    docker:
      - image: dagster/cci-test:3.6.8

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure git
          command: |
            git config --global user.email "$GITHUB_EMAIL"
            git config --global user.name "$GITHUB_NAME"

      - run:
          name: Merge master
          command: |
            git fetch --all
            git branch -D master
            git checkout --track origin/master
            git reset --hard origin/master
            git branch -D nightly
            git checkout --track origin/nightly
            git checkout nightly
            git reset --hard origin/nightly
            GIT_MERGE_AUTOEDIT=no git merge --strategy recursive --strategy-option theirs master
            git push
      - run:
          name: Install requirements
          command: sudo pip install -r bin/requirements.txt

      # Gruesome, see https://circleci.com/blog/continuously-deploying-python-packages-to-pypi-with-circleci/
      # https://github.com/pypa/setuptools/issues/954 and linked issues https://github.com/pypa/setuptools/issues/941,
      # https://github.com/pypa/setuptools/pull/961
      - run:
          name: Create ~/.pypirc
          command: |
            echo -e "[distutils]" >> ~/.pypirc
            echo -e "index-servers =" >> ~/.pypirc
            echo -e "  pypi" >> ~/.pypirc
            echo -e "" >> ~/.pypirc
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "repository: https://upload.pypi.org/legacy/" >> ~/.pypirc
            echo -e "username: $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Publish nightlies
          command: python bin/publish.py publish --nightly

      - run:
          name: Test dev setup script
          command: |
            python -m venv .
            source bin/activate
            . dev_env_setup.sh

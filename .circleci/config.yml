version: 2

workflows:
  version: 2
  test:
    jobs:

      # Required for merge

      - dagit-webapp:
          context: coveralls
      - dagster-py37:
          context: coveralls
      - dagster-py36:
          context: coveralls
      - dagster-py35:
          context: coveralls
      - dagster-py27:
          context: coveralls
      - dagit-py37:
          context: coveralls
      - dagit-py36:
          context: coveralls
      - dagit-py35:
          context: coveralls

      # Optional steps below

      - format
      - lint
      - dagit-py27:
          context: coveralls
      - dagster-aux-modules-py37:
          context: coveralls
      - dagster-aux-modules-py36:
          context: coveralls
      - dagster-aux-modules-py35:
          context: coveralls
      - dagster-aux-modules-py27:
          context: coveralls
      - airline-demo-py37:
          context: coveralls
      - airline-demo-py36:
          context: coveralls
      - airline-demo-py35:
          context: coveralls
      - airline-demo-py27:
          context: coveralls
      - coverage:
          requires:
            - dagster-py37
            - dagster-py36
            - dagster-py35
            - dagster-py27
            - dagit-py37
            - dagit-py36
            - dagit-py35
            - dagit-py27
            - dagster-aux-modules-py37
            - dagster-aux-modules-py36
            - dagster-aux-modules-py35
            - dagster-aux-modules-py27
            - airline-demo-py37
            - airline-demo-py36
            - airline-demo-py35
            - airline-demo-py27
          context: coveralls
  nightly:
    triggers:
      - schedule:
          cron: "0 8 * * *"
          filters:
            branches:
              only:
                - nightly
    jobs:
      - nightly

jobs:
  format:
    docker:
      - image: circleci/python:3.7.2

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install Black
          command: sudo pip install black==18.9b0

      - run:
          name: Format
          command: black python_modules --line-length 100 -S --fast --check --exclude "build/|buck-out/|dist/|_build/|\.eggs/|\.git/|\.hg/|\.mypy_cache/|\.nox/|\.tox/|\.venv/|python_modules/dagster/dagster/tutorials/|python_modules/dagster/docs/snapshots/"

      - run:
          name: Format
          command: black python_modules/dagster/dagster/tutorials --line-length 79 -S --fast --check

  lint:
    docker:
      - image: circleci/python:3.7.2

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo pip install -r python_modules/dagster/dev-requirements.txt -qqq
            sudo pip install -e python_modules/dagster -qqq
            sudo pip install -e python_modules/dagit -qqq
            sudo pip install -r python_modules/dagit/dev-requirements.txt -qqq
            sudo pip install -e python_modules/dagstermill -qqq
            sudo pip install -e python_modules/dagster-pandas -qqq
            sudo pip install -e python_modules/dagster-sqlalchemy -qqq

      - attach_workspace:
          at: /tmp/workspace

      # only block warnings for now
      - run: pylint python_modules/dagster/dagster python_modules/dagit/dagit python_modules/dagstermill/dagstermill python_modules/dagster-pandas/dagster_pandas python_modules/dagster-sqlalchemy/dagster_sqlalchemy --rcfile=python_modules/.pylintrc --disable=R,C

  dagit-py36: &dagit-template
    docker:
      - image: circleci/python:3.6.6
    environment:
      TOXENV: py36
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo pip install tox

      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagit
            tox -e $TOXENV
            popd

      - run:
          command: |
            mv python_modules/dagit/.coverage python_modules/.coverage.dagit.${CIRCLE_BUILD_NUM}

      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-py36: &dagster-template
    docker:
      - image: circleci/python:3.6.6
    environment:
      TOXENV: py36
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo pip install tox

      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagster
            tox -e $TOXENV
            popd

      - run:
          command: |
            mv python_modules/dagster/.coverage python_modules/.coverage.dagster.${CIRCLE_BUILD_NUM}

      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagster-aux-modules-py36: &dagster-aux-modules-template
    docker:
      - image: circleci/python:3.6.6
    environment:
      TOXENV: py36
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo pip install tox

      - run:
          name: Run Dagster Tests
          command: |
            pushd python_modules/dagstermill
            tox -e $TOXENV
            popd
            pushd python_modules/dagster-pandas
            tox -e $TOXENV
            popd
            pushd python_modules/dagster-sqlalchemy
            tox -e $TOXENV
            popd
            pushd python_modules/dagster-ge
            tox -e $TOXENV
            popd
            pushd python_modules/dagma
            tox -e $TOXENV
            popd

      - run:
          command: |
            mv python_modules/dagstermill/.coverage python_modules/.coverage.dagstermill.${CIRCLE_BUILD_NUM}
            mv python_modules/dagster-pandas/.coverage python_modules/.coverage.dagster-pandas.${CIRCLE_BUILD_NUM}
            mv python_modules/dagster-sqlalchemy/.coverage python_modules/.coverage.dagster-sqlalchemy.${CIRCLE_BUILD_NUM}
            mv python_modules/dagster-ge/.coverage python_modules/.coverage.dagster-ge.${CIRCLE_BUILD_NUM}
            mv python_modules/dagma/.coverage python_modules/.coverage.dagma.${CIRCLE_BUILD_NUM}

      - persist_to_workspace:
          root: python_modules/
          paths:
            - .coverage*

  dagit-py37:
    <<: *dagit-template
    docker:
      - image: circleci/python:3.7.2
    environment:
      TOXENV: py37

  dagit-py35:
    <<: *dagit-template
    docker:
      - image: circleci/python:3.5.6
    environment:
      TOXENV: py35

  dagit-py27:
    <<: *dagit-template
    docker:
      - image: circleci/python:2.7.15
    environment:
      TOXENV: py27

  dagster-py37:
    <<: *dagster-template
    docker:
      - image: circleci/python:3.7.2
    environment:
      TOXENV: py37

  dagster-py35:
    <<: *dagster-template
    docker:
      - image: circleci/python:3.5.6
    environment:
      TOXENV: py35

  dagster-py27:
    <<: *dagster-template
    docker:
      - image: circleci/python:2.7.15
    environment:
      TOXENV: py27

  dagster-aux-modules-py37:
    <<: *dagster-aux-modules-template
    docker:
      - image: circleci/python:3.7.2
    environment:
      TOXENV: py37

  dagster-aux-modules-py35:
    <<: *dagster-aux-modules-template
    docker:
      - image: circleci/python:3.5.6
    environment:
      TOXENV: py35

  dagster-aux-modules-py27:
    <<: *dagster-aux-modules-template
    docker:
      - image: circleci/python:2.7.15
    environment:
      TOXENV: py27

  dagit-webapp:
    docker:
      - image: circleci/node:10.6
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            cd js_modules/dagit
            yarn

      - run:
          name: Run Typescript
          command: |
            cd js_modules/dagit
            yarn run ts

      - run:
          name: Run Tests
          command: |
            cd js_modules/dagit
            yarn run jest

      - run:
          name: Check coding style
          command: |
            cd js_modules/dagit
            yarn run check-prettier

  airline-demo-py36: &airline-demo-template
    <<: *dagster-template
    docker:
      - image: dagster/cci-test:3.6
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    environment:
      TOXENV: py36

    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo pip install tox

      - run:
          name: Run airline-demo Tests
          command: |
            cd python_modules/airline-demo
            tox -e $TOXENV

      - run:
          command: mv python_modules/airline-demo/.coverage python_modules/airline-demo/.coverage.airline-demo.${CIRCLE_BUILD_NUM}

      - persist_to_workspace:
          root: python_modules/airline-demo/
          paths:
            - .coverage*

  airline-demo-py37:
    <<: *airline-demo-template
    docker:
      # FIXME: https://github.com/dagster-io/dagster/issues/521 
      - image: schrockn/cci-test:3.7.2
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    environment:
      TOXENV: py37

  airline-demo-py35:
    <<: *airline-demo-template
    docker:
      - image: dagster/cci-test:3.5
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    environment:
      TOXENV: py35

  airline-demo-py27:
    <<: *airline-demo-template
    docker:
      - image: dagster/cci-test:2.7
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    environment:
      TOXENV: py27

  coverage:
    docker:
      - image: circleci/python:3.6.6
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo pip install coverage coveralls

      - attach_workspace:
          at: /tmp/workspace

      - run: |
          cp /tmp/workspace/.coverage* .
          coverage combine
          coveralls

  nightly:
    docker:
      - image: circleci/python:3.7.2

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure git
          command: |
            git config --global user.email "$GITHUB_EMAIL"
            git config --global user.name "$GITHUB_NAME"

      - run:
          name: Merge master
          command: |
            git fetch --all
            git checkout master
            git reset --hard origin/master
            git checkout nightly
            GIT_MERGE_AUTOEDIT=no git merge master

      - run:
          name: Install requirements
          command: sudo pip install -r bin/requirements.txt

      # Gruesome, see https://circleci.com/blog/continuously-deploying-python-packages-to-pypi-with-circleci/
      # https://github.com/pypa/setuptools/issues/954 and linked issues https://github.com/pypa/setuptools/issues/941,
      # https://github.com/pypa/setuptools/pull/961
      - run:
          name: Create ~/.pypirc
          command: |
            echo -e "[distutils]" >> ~/.pypirc
            echo -e "index-servers =" >> ~/.pypirc
            echo -e "  pypi" >> ~/.pypirc
            echo -e "" >> ~/.pypirc
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "repository: https://upload.pypi.org/legacy/" >> ~/.pypirc
            echo -e "username: $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Publish nightlies
          command: python bin/publish.py publish --nightly

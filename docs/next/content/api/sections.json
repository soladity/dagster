{"api": {"apidocs": {"cli": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dagster-cli\">\n<h1>Dagster CLI<a class=\"headerlink\" href=\"#dagster-cli\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"dagster-asset\">\n<h2>dagster asset<a class=\"headerlink\" href=\"#dagster-asset\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster asset <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<div class=\"section\" id=\"dagster-asset-wipe\">\n<h3>wipe<a class=\"headerlink\" href=\"#dagster-asset-wipe\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Eliminate asset key indexes from event logs. Warning: Cannot be undone</p>\n<p>Usage:</p>\n<blockquote>\n<div><p>dagster asset wipe \u2013all</p>\n<p>dagster asset wipe &lt;unstructured_asset_key_name&gt;</p>\n<p>dagster asset wipe &lt;json_string_of_structured_asset_key&gt;</p>\n</div></blockquote>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster asset wipe <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>KEY<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-asset-wipe-all\">\n<code class=\"sig-name descname\">--all</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-asset-wipe-all\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Eliminate all asset key indexes</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-asset-wipe-arg-key\">\n<code class=\"sig-name descname\">KEY</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-asset-wipe-arg-key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"dagster-debug\">\n<h2>dagster debug<a class=\"headerlink\" href=\"#dagster-debug\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster debug <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<div class=\"section\" id=\"dagster-debug-export\">\n<h3>export<a class=\"headerlink\" href=\"#dagster-debug-export\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Export the relevant artifacts for a pipeline run to a file.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster debug <span class=\"nb\">export</span> <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> RUN_ID OUTPUT_FILE\n</pre></div>\n</div>\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-debug-export-arg-run-id\">\n<code class=\"sig-name descname\">RUN_ID</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-debug-export-arg-run-id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required argument</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-debug-export-arg-output-file\">\n<code class=\"sig-name descname\">OUTPUT_FILE</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-debug-export-arg-output-file\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required argument</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"dagster-instance\">\n<h2>dagster instance<a class=\"headerlink\" href=\"#dagster-instance\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster instance <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<div class=\"section\" id=\"dagster-instance-info\">\n<h3>info<a class=\"headerlink\" href=\"#dagster-instance-info\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>List the information about the current instance.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster instance info <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"dagster-instance-migrate\">\n<h3>migrate<a class=\"headerlink\" href=\"#dagster-instance-migrate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Automatically migrate an out of date instance.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster instance migrate <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"dagster-instance-reindex\">\n<h3>reindex<a class=\"headerlink\" href=\"#dagster-instance-reindex\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Rebuild index over historical runs for performance.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster instance reindex <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"dagster-new-repo\">\n<h2>dagster new-repo<a class=\"headerlink\" href=\"#dagster-new-repo\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Creates a new Dagster repository and generates boilerplate code. <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster</span> <span class=\"pre\">new-repo</span></code> is an\nexperimental command and it may generate different files in future versions, even between dot\nreleases.</p>\n<p>PATH: Location of the new Dagster repository in your filesystem.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster new-repo <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> PATH\n</pre></div>\n</div>\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-new-repo-arg-path\">\n<code class=\"sig-name descname\">PATH</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-new-repo-arg-path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required argument</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-pipeline\">\n<h2>dagster pipeline<a class=\"headerlink\" href=\"#dagster-pipeline\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster pipeline <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<div class=\"section\" id=\"dagster-pipeline-backfill\">\n<h3>backfill<a class=\"headerlink\" href=\"#dagster-pipeline-backfill\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Backfill a partitioned pipeline.</p>\n<p>This commands targets a partitioned pipeline. The pipeline and partition set must be defined in a repository, which can be specified in a number of ways:</p>\n<ol class=\"arabic simple\">\n<li><p>dagster pipeline backfill -p &lt;&lt;pipeline_name&gt;&gt; (works if .workspace.yaml exists)</p></li>\n<li><p>dagster pipeline backfill -p &lt;&lt;pipeline_name&gt;&gt; -w path/to/workspace.yaml</p></li>\n<li><p>dagster pipeline backfill -f /path/to/file.py -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n<li><p>dagster pipeline backfill -m a_module.submodule -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n</ol>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster pipeline backfill <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-p\">\n<code class=\"sig-name descname\">-p</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--pipeline</code><code class=\"sig-prename descclassname\"> &lt;pipeline&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pipeline within the repository, necessary if more than one pipeline is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-partitions\">\n<code class=\"sig-name descname\">--partitions</code><code class=\"sig-prename descclassname\"> &lt;partitions&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-partitions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Comma-separated list of partition names that we want to backfill</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-partition-set\">\n<code class=\"sig-name descname\">--partition-set</code><code class=\"sig-prename descclassname\"> &lt;partition_set&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-partition-set\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the partition set over which we want to backfill.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-all\">\n<code class=\"sig-name descname\">--all</code><code class=\"sig-prename descclassname\"> &lt;all&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-all\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify to select all partitions to backfill.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-from\">\n<code class=\"sig-name descname\">--from</code><code class=\"sig-prename descclassname\"> &lt;from&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-from\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify a start partition for this backfill job</p>\n<p>Example: dagster pipeline backfill log_daily_stats \u2013from 20191101</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-to\">\n<code class=\"sig-name descname\">--to</code><code class=\"sig-prename descclassname\"> &lt;to&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-to\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify an end partition for this backfill job</p>\n<p>Example: dagster pipeline backfill log_daily_stats \u2013to 20191201</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-tags\">\n<code class=\"sig-name descname\">--tags</code><code class=\"sig-prename descclassname\"> &lt;tags&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>JSON string of tags to use for this pipeline run</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-backfill-noprompt\">\n<code class=\"sig-name descname\">--noprompt</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-backfill-noprompt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-pipeline-execute\">\n<h3>execute<a class=\"headerlink\" href=\"#dagster-pipeline-execute\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Execute a pipeline.</p>\n<p>This commands targets a pipeline. The pipeline can be specified in a number of ways:</p>\n<ol class=\"arabic simple\">\n<li><p>dagster pipeline execute -f /path/to/file.py -a define_some_pipeline</p></li>\n<li><p>dagster pipeline execute -m a_module.submodule -a define_some_pipeline</p></li>\n<li><p>dagster pipeline execute -f /path/to/file.py -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n<li><p>dagster pipeline execute -m a_module.submodule -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n</ol>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster pipeline execute <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-p\">\n<code class=\"sig-name descname\">-p</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--pipeline</code><code class=\"sig-prename descclassname\"> &lt;pipeline&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pipeline within the repository, necessary if more than one pipeline is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository name, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-c\">\n<code class=\"sig-name descname\">-c</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--config</code><code class=\"sig-prename descclassname\"> &lt;config&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-c\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify one or more run config files. These can also be file patterns. If more than one run config file is captured then those files are merged. Files listed first take precedence. They will smash the values of subsequent files at the key-level granularity. If the file is a pattern then you must enclose it in double quotes</p>\n<p>Example: dagster pipeline execute -f hello_world.py -p pandas_hello_world -c \u201cpandas_hello_world/<a href=\"#id1\"><span class=\"problematic\" id=\"id2\">*</span></a>.yaml\u201d</p>\n<p>You can also specify multiple files:</p>\n<p>Example: dagster pipeline execute -f hello_world.py -p pandas_hello_world -c pandas_hello_world/solids.yaml -e pandas_hello_world/env.yaml</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-preset\">\n<code class=\"sig-name descname\">--preset</code><code class=\"sig-prename descclassname\"> &lt;preset&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-preset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify a preset to use for this pipeline. Presets are defined on pipelines under preset_defs.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-mode\">\n<code class=\"sig-name descname\">--mode</code><code class=\"sig-prename descclassname\"> &lt;mode&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-mode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the mode in which to execute the pipeline.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-tags\">\n<code class=\"sig-name descname\">--tags</code><code class=\"sig-prename descclassname\"> &lt;tags&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>JSON string of tags to use for this pipeline run</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-execute-s\">\n<code class=\"sig-name descname\">-s</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--solid-selection</code><code class=\"sig-prename descclassname\"> &lt;solid_selection&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-execute-s\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify the solid subselection to execute. It can be multiple clauses separated by commas.Examples:\n- \u201csome_solid\u201d will execute \u201csome_solid\u201d itself\n- \u201c<a href=\"#id3\"><span class=\"problematic\" id=\"id4\">*</span></a>some_solid\u201d will execute \u201csome_solid\u201d and all its ancestors (upstream dependencies)\n- \u201c<a href=\"#id5\"><span class=\"problematic\" id=\"id6\">*</span></a>some_solid+++\u201d will execute \u201csome_solid\u201d, all its ancestors, and its descendants   (downstream dependencies) within 3 levels down\n- \u201c<a href=\"#id7\"><span class=\"problematic\" id=\"id8\">*</span></a>some_solid,other_solid_a,other_solid_b+\u201d will execute \u201csome_solid\u201d and all its   ancestors, \u201cother_solid_a\u201d itself, and \u201cother_solid_b\u201d and its direct child solids</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-pipeline-launch\">\n<h3>launch<a class=\"headerlink\" href=\"#dagster-pipeline-launch\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Launch a pipeline using the run launcher configured on the Dagster instance.</p>\n<p>This commands targets a pipeline. The pipeline can be specified in a number of ways:</p>\n<ol class=\"arabic simple\">\n<li><p>dagster pipeline launch -p &lt;&lt;pipeline_name&gt;&gt; (works if .workspace.yaml exists)</p></li>\n<li><p>dagster pipeline launch -p &lt;&lt;pipeline_name&gt;&gt; -w path/to/workspace.yaml</p></li>\n<li><p>dagster pipeline launch -f /path/to/file.py -a define_some_pipeline</p></li>\n<li><p>dagster pipeline launch -m a_module.submodule -a define_some_pipeline</p></li>\n<li><p>dagster pipeline launch -f /path/to/file.py -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n<li><p>dagster pipeline launch -m a_module.submodule -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n</ol>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster pipeline launch <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-p\">\n<code class=\"sig-name descname\">-p</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--pipeline</code><code class=\"sig-prename descclassname\"> &lt;pipeline&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pipeline within the repository, necessary if more than one pipeline is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-c\">\n<code class=\"sig-name descname\">-c</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--config</code><code class=\"sig-prename descclassname\"> &lt;config&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-c\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify one or more run config files. These can also be file patterns. If more than one run config file is captured then those files are merged. Files listed first take precedence. They will smash the values of subsequent files at the key-level granularity. If the file is a pattern then you must enclose it in double quotes</p>\n<p>Example: dagster pipeline launch -f hello_world.py -p pandas_hello_world -c \u201cpandas_hello_world/<a href=\"#id9\"><span class=\"problematic\" id=\"id10\">*</span></a>.yaml\u201d</p>\n<p>You can also specify multiple files:</p>\n<p>Example: dagster pipeline launch -f hello_world.py -p pandas_hello_world -c pandas_hello_world/solids.yaml -e pandas_hello_world/env.yaml</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-config-json\">\n<code class=\"sig-name descname\">--config-json</code><code class=\"sig-prename descclassname\"> &lt;config_json&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-config-json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>JSON string of run config to use for this pipeline run. Cannot be used with -c / \u2013config.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-preset\">\n<code class=\"sig-name descname\">--preset</code><code class=\"sig-prename descclassname\"> &lt;preset&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-preset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify a preset to use for this pipeline. Presets are defined on pipelines under preset_defs.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-mode\">\n<code class=\"sig-name descname\">--mode</code><code class=\"sig-prename descclassname\"> &lt;mode&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-mode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the mode in which to execute the pipeline.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-tags\">\n<code class=\"sig-name descname\">--tags</code><code class=\"sig-prename descclassname\"> &lt;tags&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>JSON string of tags to use for this pipeline run</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-s\">\n<code class=\"sig-name descname\">-s</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--solid-selection</code><code class=\"sig-prename descclassname\"> &lt;solid_selection&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-s\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify the solid subselection to launch. It can be multiple clauses separated by commas.Examples:\n- \u201csome_solid\u201d will launch \u201csome_solid\u201d itself\n- \u201c<a href=\"#id11\"><span class=\"problematic\" id=\"id12\">*</span></a>some_solid\u201d will launch \u201csome_solid\u201d and all its ancestors (upstream dependencies)\n- \u201c<a href=\"#id13\"><span class=\"problematic\" id=\"id14\">*</span></a>some_solid+++\u201d will launch \u201csome_solid\u201d, all its ancestors, and its descendants   (downstream dependencies) within 3 levels down\n- \u201c<a href=\"#id15\"><span class=\"problematic\" id=\"id16\">*</span></a>some_solid,other_solid_a,other_solid_b+\u201d will launch \u201csome_solid\u201d and all its   ancestors, \u201cother_solid_a\u201d itself, and \u201cother_solid_b\u201d and its direct child solids</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-launch-run-id\">\n<code class=\"sig-name descname\">--run-id</code><code class=\"sig-prename descclassname\"> &lt;run_id&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-launch-run-id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The ID to give to the launched pipeline run</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-pipeline-list\">\n<h3>list<a class=\"headerlink\" href=\"#dagster-pipeline-list\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>List the pipelines in a repository. Can only use ONE of \u2013workspace/-w, \u2013python-file/-f, \u2013module-name/-m, \u2013grpc-port, \u2013grpc-socket.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster pipeline list <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-pipeline-list-versions\">\n<h3>list_versions<a class=\"headerlink\" href=\"#dagster-pipeline-list-versions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Display the freshness of memoized results for the given pipeline.</p>\n<p>This commands targets a pipeline. The pipeline can be specified in a number of ways:</p>\n<ol class=\"arabic simple\">\n<li><p>dagster pipeline list_versions -f /path/to/file.py -a define_some_pipeline</p></li>\n<li><p>dagster pipeline list_versions -m a_module.submodule -a define_some_pipeline</p></li>\n<li><p>dagster pipeline list_versions -f /path/to/file.py -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n<li><p>dagster pipeline list_versions -m a_module.submodule -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n</ol>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster pipeline list_versions <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-p\">\n<code class=\"sig-name descname\">-p</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--pipeline</code><code class=\"sig-prename descclassname\"> &lt;pipeline&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pipeline within the repository, necessary if more than one pipeline is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository name, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-c\">\n<code class=\"sig-name descname\">-c</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--config</code><code class=\"sig-prename descclassname\"> &lt;config&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-c\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify one or more run config files. These can also be file patterns. If more than one run config file is captured then those files are merged. Files listed first take precedence. They will smash the values of subsequent files at the key-level granularity. If the file is a pattern then you must enclose it in double quotes</p>\n<p>Example: dagster pipeline list_versions -f hello_world.py -p pandas_hello_world -c \u201cpandas_hello_world/<a href=\"#id17\"><span class=\"problematic\" id=\"id18\">*</span></a>.yaml\u201d</p>\n<p>You can also specify multiple files:</p>\n<p>Example: dagster pipeline list_versions -f hello_world.py -p pandas_hello_world -c pandas_hello_world/solids.yaml -e pandas_hello_world/env.yaml</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-preset\">\n<code class=\"sig-name descname\">--preset</code><code class=\"sig-prename descclassname\"> &lt;preset&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-preset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify a preset to use for this pipeline. Presets are defined on pipelines under preset_defs.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-list-versions-mode\">\n<code class=\"sig-name descname\">--mode</code><code class=\"sig-prename descclassname\"> &lt;mode&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-list-versions-mode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the mode in which to execute the pipeline.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-pipeline-print\">\n<h3>print<a class=\"headerlink\" href=\"#dagster-pipeline-print\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Print a pipeline.</p>\n<p>This commands targets a pipeline. The pipeline can be specified in a number of ways:</p>\n<ol class=\"arabic simple\">\n<li><p>dagster pipeline print -p &lt;&lt;pipeline_name&gt;&gt; (works if .workspace.yaml exists)</p></li>\n<li><p>dagster pipeline print -p &lt;&lt;pipeline_name&gt;&gt; -w path/to/workspace.yaml</p></li>\n<li><p>dagster pipeline print -f /path/to/file.py -a define_some_pipeline</p></li>\n<li><p>dagster pipeline print -m a_module.submodule -a define_some_pipeline</p></li>\n<li><p>dagster pipeline print -f /path/to/file.py -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n<li><p>dagster pipeline print -m a_module.submodule -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n</ol>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster pipeline print <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-verbose\">\n<code class=\"sig-name descname\">--verbose</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-verbose\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-p\">\n<code class=\"sig-name descname\">-p</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--pipeline</code><code class=\"sig-prename descclassname\"> &lt;pipeline&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pipeline within the repository, necessary if more than one pipeline is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-print-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-print-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-pipeline-scaffold-config\">\n<h3>scaffold_config<a class=\"headerlink\" href=\"#dagster-pipeline-scaffold-config\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Scaffold the config for a pipeline.</p>\n<p>This commands targets a pipeline. The pipeline can be specified in a number of ways:</p>\n<ol class=\"arabic simple\">\n<li><p>dagster pipeline scaffold_config -f /path/to/file.py -a define_some_pipeline</p></li>\n<li><p>dagster pipeline scaffold_config -m a_module.submodule -a define_some_pipeline</p></li>\n<li><p>dagster pipeline scaffold_config -f /path/to/file.py -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n<li><p>dagster pipeline scaffold_config -m a_module.submodule -a define_some_repo -p &lt;&lt;pipeline_name&gt;&gt;</p></li>\n</ol>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster pipeline scaffold_config <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-scaffold-config-p\">\n<code class=\"sig-name descname\">-p</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--pipeline</code><code class=\"sig-prename descclassname\"> &lt;pipeline&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-scaffold-config-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pipeline within the repository, necessary if more than one pipeline is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-scaffold-config-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-scaffold-config-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository name, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-scaffold-config-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-scaffold-config-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-scaffold-config-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-scaffold-config-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-scaffold-config-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-scaffold-config-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-scaffold-config-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-scaffold-config-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-scaffold-config-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-scaffold-config-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-scaffold-config-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-scaffold-config-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-pipeline-scaffold-config-print-only-required\">\n<code class=\"sig-name descname\">--print-only-required</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-pipeline-scaffold-config-print-only-required\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"dagster-run\">\n<h2>dagster run<a class=\"headerlink\" href=\"#dagster-run\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster run <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<div class=\"section\" id=\"dagster-run-delete\">\n<h3>delete<a class=\"headerlink\" href=\"#dagster-run-delete\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Delete a run by id and its associated event logs. Warning: Cannot be undone</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster run delete <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> RUN_ID\n</pre></div>\n</div>\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-run-delete-arg-run-id\">\n<code class=\"sig-name descname\">RUN_ID</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-run-delete-arg-run-id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required argument</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-run-list\">\n<h3>list<a class=\"headerlink\" href=\"#dagster-run-list\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>List the runs in this dagster installation.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster run list <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-run-list-limit\">\n<code class=\"sig-name descname\">--limit</code><code class=\"sig-prename descclassname\"> &lt;limit&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-run-list-limit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Only list a specified number of runs</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-run-wipe\">\n<h3>wipe<a class=\"headerlink\" href=\"#dagster-run-wipe\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Eliminate all run history and event logs. Warning: Cannot be undone</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster run wipe <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"dagster-schedule\">\n<h2>dagster schedule<a class=\"headerlink\" href=\"#dagster-schedule\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<div class=\"section\" id=\"dagster-schedule-debug\">\n<h3>debug<a class=\"headerlink\" href=\"#dagster-schedule-debug\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Debug information about the scheduler</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule debug <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"dagster-schedule-list\">\n<h3>list<a class=\"headerlink\" href=\"#dagster-schedule-list\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>List all schedules that correspond to a repository.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule list <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-running\">\n<code class=\"sig-name descname\">--running</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-running\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Filter for running schedules</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-stopped\">\n<code class=\"sig-name descname\">--stopped</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-stopped\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Filter for stopped schedules</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-list-name\">\n<code class=\"sig-name descname\">--name</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-list-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Only display schedule schedule names</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-schedule-logs\">\n<h3>logs<a class=\"headerlink\" href=\"#dagster-schedule-logs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Get logs for a schedule</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule logs <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>SCHEDULE_NAME<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-logs-arg-schedule-name\">\n<code class=\"sig-name descname\">SCHEDULE_NAME</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-logs-arg-schedule-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-schedule-preview\">\n<h3>preview<a class=\"headerlink\" href=\"#dagster-schedule-preview\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Preview changes that will be performed by <a href=\"#id19\"><span class=\"problematic\" id=\"id20\">`</span></a>dagster schedule up</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule preview <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-preview-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-preview-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-schedule-restart\">\n<h3>restart<a class=\"headerlink\" href=\"#dagster-schedule-restart\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Restart a running schedule</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule restart <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>SCHEDULE_NAME<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-restart-all-running\">\n<code class=\"sig-name descname\">--restart-all-running</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-restart-all-running\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>restart previously running schedules</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-restart-arg-schedule-name\">\n<code class=\"sig-name descname\">SCHEDULE_NAME</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-restart-arg-schedule-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-schedule-start\">\n<h3>start<a class=\"headerlink\" href=\"#dagster-schedule-start\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Start an existing schedule</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule start <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>SCHEDULE_NAME<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-start-all\">\n<code class=\"sig-name descname\">--start-all</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-start-all\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>start all schedules</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-start-arg-schedule-name\">\n<code class=\"sig-name descname\">SCHEDULE_NAME</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-start-arg-schedule-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-schedule-stop\">\n<h3>stop<a class=\"headerlink\" href=\"#dagster-schedule-stop\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Stop an existing schedule</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule stop <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>SCHEDULE_NAME<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-stop-arg-schedule-name\">\n<code class=\"sig-name descname\">SCHEDULE_NAME</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-stop-arg-schedule-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-schedule-up\">\n<h3>up<a class=\"headerlink\" href=\"#dagster-schedule-up\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Updates the internal dagster representation of schedules to match the list of ScheduleDefinitions defined in the repository. Use <cite>dagster schedule up \u2013preview</cite> or <cite>dagster schedule preview</cite> to preview what changes will be applied. New ScheduleDefinitions will not start running by default when <cite>up</cite> is called. Use <cite>dagster schedule start</cite> and <cite>dagster schedule stop</cite> to start and stop a schedule. If a ScheduleDefinition is deleted, the corresponding running schedule will be stopped and deleted.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule up <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-preview\">\n<code class=\"sig-name descname\">--preview</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-preview\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Preview changes</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-up-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-up-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-schedule-wipe\">\n<h3>wipe<a class=\"headerlink\" href=\"#dagster-schedule-wipe\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Deletes schedule history and turns off all schedules.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule wipe <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-schedule-wipe-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-schedule-wipe-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"dagster-sensor\">\n<h2>dagster sensor<a class=\"headerlink\" href=\"#dagster-sensor\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster sensor <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<div class=\"section\" id=\"dagster-sensor-list\">\n<h3>list<a class=\"headerlink\" href=\"#dagster-sensor-list\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>List all sensors that correspond to a repository.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster sensor list <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-running\">\n<code class=\"sig-name descname\">--running</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-running\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Filter for running sensors</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-stopped\">\n<code class=\"sig-name descname\">--stopped</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-stopped\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Filter for stopped sensors</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-list-name\">\n<code class=\"sig-name descname\">--name</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-list-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Only display sensor sensor names</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-sensor-preview\">\n<h3>preview<a class=\"headerlink\" href=\"#dagster-sensor-preview\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Preview an existing sensor execution</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster sensor preview <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>SENSOR_NAME<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-since\">\n<code class=\"sig-name descname\">--since</code><code class=\"sig-prename descclassname\"> &lt;since&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-since\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set the last_completion_time value as a timestamp float for the sensor context</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-last-run-key\">\n<code class=\"sig-name descname\">--last_run_key</code><code class=\"sig-prename descclassname\"> &lt;last_run_key&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-last-run-key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set the last_run_key value for the sensor context</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-preview-arg-sensor-name\">\n<code class=\"sig-name descname\">SENSOR_NAME</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-preview-arg-sensor-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-sensor-start\">\n<h3>start<a class=\"headerlink\" href=\"#dagster-sensor-start\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Start an existing sensor</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster sensor start <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>SENSOR_NAME<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-start-all\">\n<code class=\"sig-name descname\">--start-all</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-start-all\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>start all sensors</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-start-arg-sensor-name\">\n<code class=\"sig-name descname\">SENSOR_NAME</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-start-arg-sensor-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-sensor-stop\">\n<h3>stop<a class=\"headerlink\" href=\"#dagster-sensor-stop\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Stop an existing sensor</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster sensor stop <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>SENSOR_NAME<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--location</code><code class=\"sig-prename descclassname\"> &lt;location&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RepositoryLocation within the workspace, necessary if more than one location is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--repository</code><code class=\"sig-prename descclassname\"> &lt;repository&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Repository within the workspace, necessary if more than one repository is present.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-sensor-stop-arg-sensor-name\">\n<code class=\"sig-name descname\">SENSOR_NAME</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-sensor-stop-arg-sensor-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"dagster-graphql\">\n<h2>dagster-graphql<a class=\"headerlink\" href=\"#dagster-graphql\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Run a GraphQL query against the dagster interface to a specified repository or pipeline.</p>\n<p>Can only use ONE of \u2013workspace/-w, \u2013python-file/-f, \u2013module-name/-m, \u2013grpc-port, \u2013grpc-socket.</p>\n<p>Examples:</p>\n<ol class=\"arabic simple\">\n<li><p>dagster-graphql</p></li>\n<li><p>dagster-graphql -y path/to/workspace.yaml</p></li>\n<li><p>dagster-graphql -f path/to/file.py -a define_repo</p></li>\n<li><p>dagster-graphql -m some_module -a define_repo</p></li>\n<li><p>dagster-graphql -f path/to/file.py -a define_pipeline</p></li>\n<li><p>dagster-graphql -m some_module -a define_pipeline</p></li>\n</ol>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-graphql <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-version\">\n<code class=\"sig-name descname\">--version</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Show the version and exit.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-t\">\n<code class=\"sig-name descname\">-t</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--text</code><code class=\"sig-prename descclassname\"> &lt;text&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-t\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>GraphQL document to execute passed as a string</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--file</code><code class=\"sig-prename descclassname\"> &lt;file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>GraphQL document to execute passed as a file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-p\">\n<code class=\"sig-name descname\">-p</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--predefined</code><code class=\"sig-prename descclassname\"> &lt;predefined&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>GraphQL document to execute, from a predefined set provided by dagster-graphql.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Options</dt>\n<dd class=\"field-odd\"><p>launchPipelineExecution</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-v\">\n<code class=\"sig-name descname\">-v</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--variables</code><code class=\"sig-prename descclassname\"> &lt;variables&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-v\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A JSON encoded string containing the variables for GraphQL execution.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-r\">\n<code class=\"sig-name descname\">-r</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--remote</code><code class=\"sig-prename descclassname\"> &lt;remote&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A URL for a remote instance running dagit server to send the GraphQL request to.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-o\">\n<code class=\"sig-name descname\">-o</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--output</code><code class=\"sig-prename descclassname\"> &lt;output&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-o\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A file path to store the GraphQL response to. This flag is useful when making pipeline execution queries, since pipeline execution causes logs to print to stdout and stderr.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-python-file\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-python-file\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-graphql-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagit\">\n<h2>dagit<a class=\"headerlink\" href=\"#dagit\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Run dagit. Loads a repository or pipeline.</p>\n<p>Can only use ONE of \u2013workspace/-w, \u2013python-file/-f, \u2013module-name/-m, \u2013grpc-port, \u2013grpc-socket.</p>\n<p>Examples:</p>\n<ol class=\"arabic simple\">\n<li><p>dagit (works if .workspace.yaml exists)</p></li>\n<li><p>dagit -w path/to/workspace.yaml</p></li>\n<li><p>dagit -f path/to/file.py</p></li>\n<li><p>dagit -f path/to/file.py -d path/to/working_directory</p></li>\n<li><p>dagit -m some_module</p></li>\n<li><p>dagit -f path/to/file.py -a define_repo</p></li>\n<li><p>dagit -m some_module -a define_repo</p></li>\n<li><p>dagit -p 3333</p></li>\n</ol>\n<p>Options can also provide arguments via environment variables prefixed with DAGIT</p>\n<p>For example, DAGIT_PORT=3333 dagit</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagit <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-grpc-host\">\n<code class=\"sig-name descname\">--grpc-host</code><code class=\"sig-prename descclassname\"> &lt;grpc_host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-grpc-socket\">\n<code class=\"sig-name descname\">--grpc-socket</code><code class=\"sig-prename descclassname\"> &lt;grpc_socket&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-grpc-port\">\n<code class=\"sig-name descname\">--grpc-port</code><code class=\"sig-prename descclassname\"> &lt;grpc_port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--attribute</code><code class=\"sig-prename descclassname\"> &lt;attribute&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline or 2) a function that returns a repository or pipeline</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-m\">\n<code class=\"sig-name descname\">-m</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--module-name</code><code class=\"sig-prename descclassname\"> &lt;module_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-package-name\">\n<code class=\"sig-name descname\">--package-name</code><code class=\"sig-prename descclassname\"> &lt;package_name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify installed Python package where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-f\">\n<code class=\"sig-name descname\">-f</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--python-file</code><code class=\"sig-prename descclassname\"> &lt;python_file&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline function lives</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--working-directory</code><code class=\"sig-prename descclassname\"> &lt;working_directory&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline. Can only be used along with -f/\u2013python-file</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-empty-working-directory\">\n<code class=\"sig-name descname\">--empty-working-directory</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagit-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-w\">\n<code class=\"sig-name descname\">-w</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--workspace</code><code class=\"sig-prename descclassname\"> &lt;workspace&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-empty-workspace\">\n<code class=\"sig-name descname\">--empty-workspace</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagit-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-h\">\n<code class=\"sig-name descname\">-h</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--host</code><code class=\"sig-prename descclassname\"> &lt;host&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-h\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to run server on  [default: 127.0.0.1]</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-p\">\n<code class=\"sig-name descname\">-p</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--port</code><code class=\"sig-prename descclassname\"> &lt;port&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to run server on, default is 3000</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--path-prefix</code><code class=\"sig-prename descclassname\"> &lt;path_prefix&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The path prefix where Dagit will be hosted (eg: /dagit)  [default: ]</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-storage-fallback\">\n<code class=\"sig-name descname\">--storage-fallback</code><code class=\"sig-prename descclassname\"> &lt;storage_fallback&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-storage-fallback\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base directory for dagster storage if $DAGSTER_HOME is not set</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-db-statement-timeout\">\n<code class=\"sig-name descname\">--db-statement-timeout</code><code class=\"sig-prename descclassname\"> &lt;db_statement_timeout&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagit-db-statement-timeout\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The timeout in milliseconds to set on database statements sent to the DagsterInstance. Not respected in all configurations.  [default: 5000]</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagit-version\">\n<code class=\"sig-name descname\">--version</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagit-version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Show the version and exit.</p>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/cli", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../config/", "title": "Config"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../../../../", "title": "&lt;no title&gt;"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/config", "Config", "N", "next"], ["index", "&lt;no title&gt;", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/cli.rst.txt", "title": "Dagster CLI", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Dagster CLI</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-asset\">dagster asset</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-asset-wipe\">wipe</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dagster-debug\">dagster debug</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-debug-export\">export</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dagster-instance\">dagster instance</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-instance-info\">info</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-instance-migrate\">migrate</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-instance-reindex\">reindex</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dagster-new-repo\">dagster new-repo</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-pipeline\">dagster pipeline</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-pipeline-backfill\">backfill</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-pipeline-execute\">execute</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-pipeline-launch\">launch</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-pipeline-list\">list</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-pipeline-list-versions\">list_versions</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-pipeline-print\">print</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-pipeline-scaffold-config\">scaffold_config</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dagster-run\">dagster run</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-run-delete\">delete</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-run-list\">list</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-run-wipe\">wipe</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule\">dagster schedule</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-schedule-debug\">debug</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule-list\">list</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule-logs\">logs</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule-preview\">preview</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule-restart\">restart</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule-start\">start</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule-stop\">stop</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule-up\">up</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule-wipe\">wipe</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dagster-sensor\">dagster sensor</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-sensor-list\">list</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-sensor-preview\">preview</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-sensor-start\">start</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-sensor-stop\">stop</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#dagster-graphql\">dagster-graphql</a></li>\n<li><a class=\"reference internal\" href=\"#dagit\">dagit</a></li>\n</ul>\n</li>\n</ul>\n"}, "config": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"config\">\n<h1>Config<a class=\"headerlink\" href=\"#config\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"config-types\">\n<h2>Config Types<a class=\"headerlink\" href=\"#config-types\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The following types are used to describe the schema of configuration\ndata via <code class=\"docutils literal notranslate\"><span class=\"pre\">config</span></code>. They are used in conjunction with the\nbuiltin types above.</p>\n<dl class=\"class\">\n<dt id=\"dagster.ConfigSchema\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ConfigSchema</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_schema#ConfigSchema\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ConfigSchema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is a placeholder type. Any time that it appears in documentation, it means that any of\nthe following types are acceptable:</p>\n<ol class=\"arabic simple\">\n<li><p>A Python scalar type that resolves to a Dagster config type\n(<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>,\nor <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>). For example:</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;solid(config_schema=int)</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;solid(config_schema=str)</span></code></p></li>\n</ul>\n</li>\n<li><p>A built-in python collection (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>, or <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code></a>).\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a> is exactly equivalent to <a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a> [\n<a class=\"reference internal\" href=\"types#dagster.Any\" title=\"dagster.Any\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Any</span></code></a> ] and <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code></a> is equivalent to\n<a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a>. For example:</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;solid(config_schema=list)</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;solid(config_schema=dict)</span></code></p></li>\n</ul>\n</li>\n<li><p>A Dagster config type:</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"types#dagster.Any\" title=\"dagster.Any\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Any</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"types#dagster.Bool\" title=\"dagster.Bool\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Bool</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Enum\" title=\"dagster.Enum\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"types#dagster.Float\" title=\"dagster.Float\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Float</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"types#dagster.Int\" title=\"dagster.Int\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Int</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Noneable\" title=\"dagster.Noneable\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Noneable</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.ScalarUnion\" title=\"dagster.ScalarUnion\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScalarUnion</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"types#dagster.String\" title=\"dagster.String\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">String</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a></p></li>\n</ul>\n</li>\n<li><p>A bare python dictionary, which will be automatically wrapped in\n<a class=\"reference internal\" href=\"#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a>. Values of the dictionary are resolved recursively\naccording to the same rules. For example:</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">{'some_config':</span> <span class=\"pre\">str}</span></code> is equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Shape({'some_config:</span> <span class=\"pre\">str})</span></code>.</p></li>\n<li><dl class=\"simple\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">{'some_config1':</span> <span class=\"pre\">{'some_config2':</span> <span class=\"pre\">str}}</span></code> is equivalent to</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">Shape({'some_config1:</span> <span class=\"pre\">Shape({'some_config2:</span> <span class=\"pre\">str})})</span></code>.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</li>\n<li><p>A bare python list of length one, whose single element will be wrapped in a\n<a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a> is resolved recursively according to the same\nrules. For example:</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">[str]</span></code> is equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Array[str]</span></code>.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">[[str]]</span></code> is equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Array[Array[str]]</span></code>.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">[{'some_config':</span> <span class=\"pre\">str}]</span></code> is equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Array(Shape({'some_config:</span> <span class=\"pre\">str}))</span></code>.</p></li>\n</ul>\n</li>\n<li><p>An instance of <a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Field</span></code></a>.</p></li>\n</ol>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.Field\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Field</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config</em>, <em class=\"sig-param\">default_value=&lt;class 'dagster.config.field_utils.__FieldValueSentinel'&gt;</em>, <em class=\"sig-param\">is_required=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/field#Field\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Field\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines the schema for a configuration field.</p>\n<p>Fields are used in config schema instead of bare types when one wants to add a description,\na default value, or to mark it as not required.</p>\n<p>Config fields are parsed according to their schemas in order to yield values available at\npipeline execution time through the config system. Config fields can be set on solids, on\nloaders and materializers for custom, and on other pluggable components of the system, such as\nresources, loggers, and executors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config</strong> (<em>Any</em>) \u2013 <p>The schema for the config. This value can be any of:</p>\n<ol class=\"arabic simple\">\n<li><p>A Python primitive type that resolves to a Dagster config type\n(<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, or <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>).</p></li>\n<li><p>A Dagster config type:</p>\n<ul>\n<li><p><a class=\"reference internal\" href=\"types#dagster.Any\" title=\"dagster.Any\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Any</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"types#dagster.Bool\" title=\"dagster.Bool\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Bool</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Enum\" title=\"dagster.Enum\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"types#dagster.Float\" title=\"dagster.Float\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Float</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"types#dagster.Int\" title=\"dagster.Int\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Int</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Noneable\" title=\"dagster.Noneable\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Noneable</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.ScalarUnion\" title=\"dagster.ScalarUnion\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScalarUnion</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"types#dagster.String\" title=\"dagster.String\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">String</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a></p></li>\n</ul>\n</li>\n<li><p>A bare python dictionary, which will be automatically wrapped in\n<a class=\"reference internal\" href=\"#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a>. Values of the dictionary are resolved recursively\naccording to the same rules.</p></li>\n<li><p>A bare python list of length one which itself is config type.\nBecomes <a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a> with list element as an argument.</p></li>\n</ol>\n</p></li>\n<li><p><strong>default_value</strong> (<em>Any</em>) \u2013 <p>A default value for this field, conformant to the schema set by the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster_type</span></code>\nargument. If a default value is provided, <code class=\"docutils literal notranslate\"><span class=\"pre\">is_required</span></code> should be <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<p>Note: for config types that do post processing such as Enum, this value must be\nthe pre processed version, ie use <code class=\"docutils literal notranslate\"><span class=\"pre\">ExampleEnum.VALUE.name</span></code> instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ExampleEnum.VALUE</span></code></p>\n</p></li>\n<li><p><strong>is_required</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether the presence of this field is required. Defaults to true. If <code class=\"docutils literal notranslate\"><span class=\"pre\">is_required</span></code>\nis <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, no default value should be provided.</p></li>\n<li><p><strong>description</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 A human-readable description of this config field.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;word&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;I am a word.&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;repeats&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">repeat_word</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;word&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;repeats&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.Selector\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Selector</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">fields</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/field_utils#Selector\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Selector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a config field requiring the user to select one option.</p>\n<p>Selectors are used when you want to be able to present several different options in config but\nallow only one to be selected. For example, a single input might be read in from either a csv\nfile or a parquet file, but not both at once.</p>\n<p>Note that in some other type systems this might be called an \u2018input union\u2019.</p>\n<p>Functionally, a selector is like a <a class=\"reference internal\" href=\"types#dagster.Dict\" title=\"dagster.Dict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dict</span></code></a>, except that only one key from the dict can\nbe specified in valid config.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>fields</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><em>Field</em></a><em>]</em>) \u2013 The fields from which the user must select.</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"n\">Selector</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;haw&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"s1\">&#39;honua&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)},</span>\n                <span class=\"s1\">&#39;cn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"s1\">&#39;\u4e16\u754c&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)},</span>\n                <span class=\"s1\">&#39;en&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"s1\">&#39;world&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)},</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;en&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;world&#39;</span><span class=\"p\">}},</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world_with_default</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"s1\">&#39;haw&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;Aloha </span><span class=\"si\">{whom}</span><span class=\"s1\">!&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">whom</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;haw&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"s1\">&#39;cn&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;\u4f60\u597d\uff0c</span><span class=\"si\">{whom}</span><span class=\"s1\">!&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">whom</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;cn&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"s1\">&#39;en&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;Hello, </span><span class=\"si\">{whom}</span><span class=\"s1\">!&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">whom</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;en&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.Permissive\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Permissive</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">fields=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/field_utils#Permissive\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Permissive\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a config dict with a partially specified schema.</p>\n<p>A permissive dict allows partial specification of the config schema. Any fields with a\nspecified schema will be type checked. Other fields will be allowed, but will be ignored by\nthe type checker.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>fields</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><em>Field</em></a><em>]</em>) \u2013 The partial specification of the config dict.</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Permissive</span><span class=\"p\">({</span><span class=\"s1\">&#39;required&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">)})))</span>\n<span class=\"k\">def</span> <span class=\"nf\">partially_specified_config</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.Shape\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Shape</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">fields</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/field_utils#Shape\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Schema for configuration data with string keys and typed values via <a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Field</span></code></a>.</p>\n<p>Unlike <a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a>, unspecified fields are not allowed and will throw a\n<a class=\"reference internal\" href=\"errors#dagster.DagsterInvalidConfigError\" title=\"dagster.DagsterInvalidConfigError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInvalidConfigError</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>fields</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><em>Field</em></a><em>]</em>) \u2013 The specification of the config dict.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.Array\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Array</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">inner_type</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#Array\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Array\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an array (list) configuration type that contains values of type <code class=\"docutils literal notranslate\"><span class=\"pre\">inner_type</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>inner_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#type\" title=\"(in Python v3.8)\"><em>type</em></a>) \u2013 The type of the values that this configuration type can contain.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.Noneable\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Noneable</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">inner_type</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#Noneable\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Noneable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a configuration type that is the union of <code class=\"docutils literal notranslate\"><span class=\"pre\">NoneType</span></code> and the type <code class=\"docutils literal notranslate\"><span class=\"pre\">inner_type</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>inner_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#type\" title=\"(in Python v3.8)\"><em>type</em></a>) \u2013 The type of the values that this configuration type can contain.</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"n\">Noneable</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)}</span>\n\n<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Hello&quot;</span><span class=\"p\">}</span>  <span class=\"c1\"># Ok</span>\n<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">}</span>     <span class=\"c1\"># Ok</span>\n<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{}</span>                 <span class=\"c1\"># Error</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.Enum\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Enum</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">enum_values</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#Enum\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Enum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a enum configuration type that allows one of a defined set of possible values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the enum configuration type.</p></li>\n<li><p><strong>enum_values</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.EnumValue\" title=\"dagster.EnumValue\"><em>EnumValue</em></a><em>]</em>) \u2013 The set of possible values for the enum configuration type.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"n\">Enum</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;CowboyType&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"n\">EnumValue</span><span class=\"p\">(</span><span class=\"s1\">&#39;good&#39;</span><span class=\"p\">),</span>\n                <span class=\"n\">EnumValue</span><span class=\"p\">(</span><span class=\"s1\">&#39;bad&#39;</span><span class=\"p\">),</span>\n                <span class=\"n\">EnumValue</span><span class=\"p\">(</span><span class=\"s1\">&#39;ugly&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">resolve_standoff</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"c1\"># ...</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"dagster.Enum.from_python_enum\">\n<em class=\"property\">classmethod </em><code class=\"sig-name descname\">from_python_enum</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">enum</em>, <em class=\"sig-param\">name=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#Enum.from_python_enum\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Enum.from_python_enum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a Dagster enum corresponding to an existing Python enum.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>enum</strong> (<em>enum.EnumMeta</em>) \u2013 The class representing the enum.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name for the enum. If not present, <cite>enum.__name__</cite> will be used.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;color&quot;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"o\">.</span><span class=\"n\">from_python_enum</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">))}</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">select_color</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"c1\"># ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.EnumValue\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">EnumValue</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_value</em>, <em class=\"sig-param\">python_value=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#EnumValue\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EnumValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define an entry in a <a class=\"reference internal\" href=\"#dagster.Enum\" title=\"dagster.Enum\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The string representation of the config to accept when passed.</p></li>\n<li><p><strong>python_value</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The python value to convert the enum entry in to. Defaults to the <code class=\"docutils literal notranslate\"><span class=\"pre\">config_value</span></code>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the enum entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.ScalarUnion\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ScalarUnion</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">scalar_type</em>, <em class=\"sig-param\">non_scalar_schema</em>, <em class=\"sig-param\">_key=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#ScalarUnion\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ScalarUnion\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a configuration type that accepts a scalar value OR a non-scalar value like a\n<a class=\"reference internal\" href=\"types#dagster.List\" title=\"dagster.List\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">List</span></code></a>, <a class=\"reference internal\" href=\"types#dagster.Dict\" title=\"dagster.Dict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dict</span></code></a>, or <a class=\"reference internal\" href=\"#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a>.</p>\n<p>This allows runtime scalars to be configured without a dictionary with the key <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> and\ninstead just use the scalar value directly. However this still leaves the option to\nload scalars from a json or pickle file.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>scalar_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#type\" title=\"(in Python v3.8)\"><em>type</em></a>) \u2013 The scalar type of values that this configuration type can hold. For example,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>,\nor <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>.</p></li>\n<li><p><strong>non_scalar_schema</strong> (<a class=\"reference internal\" href=\"#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema of a non-scalar Dagster configuration type. For example, <a class=\"reference internal\" href=\"types#dagster.List\" title=\"dagster.List\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">List</span></code></a>,\n<a class=\"reference internal\" href=\"types#dagster.Dict\" title=\"dagster.Dict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dict</span></code></a>, or <a class=\"reference internal\" href=\"#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a>.</p></li>\n<li><p><strong>key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The configuation type\u2019s unique key. If not set, then the key will be set to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ScalarUnion.{scalar_type}-{non_scalar_schema}</span></code>.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">solids</span><span class=\"p\">:</span>\n  <span class=\"nt\">transform_word</span><span class=\"p\">:</span>\n    <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n      <span class=\"nt\">word</span><span class=\"p\">:</span>\n        <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">foobar</span>\n</pre></div>\n</div>\n<p>becomes, optionally,</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">solids</span><span class=\"p\">:</span>\n  <span class=\"nt\">transform_word</span><span class=\"p\">:</span>\n    <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n      <span class=\"nt\">word</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">foobar</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.StringSource\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">StringSource</code><a class=\"headerlink\" href=\"#dagster.StringSource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type when you want to read a string config value from an environment variable. The value\npassed to a config field of this type may either be a string literal, or a selector describing\nhow to look up the value from the executing process\u2019s environment variables.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">StringSource</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">secret_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span>\n\n<span class=\"n\">execute_solid</span><span class=\"p\">(</span>\n    <span class=\"n\">secret_solid</span><span class=\"p\">,</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;solids&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_solid&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;test_value&#39;</span><span class=\"p\">}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">execute_solid</span><span class=\"p\">(</span>\n    <span class=\"n\">secret_solid</span><span class=\"p\">,</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;solids&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_solid&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;VERY_SECRET_ENV_VARIABLE&#39;</span><span class=\"p\">}}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.IntSource\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">IntSource</code><a class=\"headerlink\" href=\"#dagster.IntSource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type when you want to read an integer config value from an environment variable. The\nvalue passed to a config field of this type may either be a integer literal, or a selector\ndescribing how to look up the value from the executing process\u2019s environment variables.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">IntSource</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">secret_int_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span>\n\n<span class=\"n\">execute_solid</span><span class=\"p\">(</span>\n    <span class=\"n\">secret_int_solid</span><span class=\"p\">,</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;solids&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_int_solid&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">execute_solid</span><span class=\"p\">(</span>\n    <span class=\"n\">secret_int_solid</span><span class=\"p\">,</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;solids&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_int_solid&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;VERY_SECRET_ENV_VARIABLE_INT&#39;</span><span class=\"p\">}}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"config-utilities\">\n<h2>Config Utilities<a class=\"headerlink\" href=\"#config-utilities\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.configured\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">configured</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">configurable: dagster.core.definitions.configurable.ConfigurableDefinition</em>, <em class=\"sig-param\">config_schema: Optional[Dict[str</em>, <em class=\"sig-param\">Any]] = None</em>, <em class=\"sig-param\">**kwargs: Any</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/configurable#configured\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A decorator that makes it easy to create a function-configured version of an object.\nThe following definition types can be configured using this function:</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"solids#dagster.CompositeSolidDefinition\" title=\"dagster.CompositeSolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CompositeSolidDefinition</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"internals#dagster.ExecutorDefinition\" title=\"dagster.ExecutorDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExecutorDefinition</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"internals#dagster.IntermediateStorageDefinition\" title=\"dagster.IntermediateStorageDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntermediateStorageDefinition</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"loggers#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoggerDefinition</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"modes-resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SolidDefinition</span></code></a></p></li>\n</ul>\n<p>If the config that will be supplied to the object is constant, you may alternatively invoke this\nand call the result with a dict of config values to be curried. Examples of both strategies\nbelow.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>configurable</strong> (<em>ConfigurableDefinition</em>) \u2013 An object that can be configured.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The config schema that the inputs to the decorated function\nmust satisfy.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Arbitrary keyword arguments that will be passed to the initializer of the returned\nobject.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>(Callable[[Union[Any, Callable[[Any], Any]]], ConfigurableDefinition])</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dev_s3</span> <span class=\"o\">=</span> <span class=\"n\">configured</span><span class=\"p\">(</span><span class=\"n\">s3_resource</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;dev_s3&quot;</span><span class=\"p\">)({</span><span class=\"s1\">&#39;bucket&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dev&#39;</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@configured</span><span class=\"p\">(</span><span class=\"n\">s3_resource</span><span class=\"p\">):</span>\n<span class=\"k\">def</span> <span class=\"nf\">dev_s3</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;bucket&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dev&#39;</span><span class=\"p\">}</span>\n\n<span class=\"nd\">@configured</span><span class=\"p\">(</span><span class=\"n\">s3_resource</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;bucket_prefix&#39;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">}):</span>\n<span class=\"k\">def</span> <span class=\"nf\">dev_s3</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;bucket&#39;</span><span class=\"p\">:</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">&#39;bucket_prefix&#39;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;dev&#39;</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/config", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../errors/", "title": "Errors"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../cli/", "title": "Dagster CLI"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/errors", "Errors", "N", "next"], ["sections/api/apidocs/cli", "Dagster CLI", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/config.rst.txt", "title": "Config", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Config</a><ul>\n<li><a class=\"reference internal\" href=\"#config-types\">Config Types</a></li>\n<li><a class=\"reference internal\" href=\"#config-utilities\">Config Utilities</a></li>\n</ul>\n</li>\n</ul>\n"}, "dynamic": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dynamic-graphs-experimental\">\n<h1>Dynamic Graphs (Experimental)<a class=\"headerlink\" href=\"#dynamic-graphs-experimental\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster.experimental.DynamicOutputDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.experimental.</code><code class=\"sig-name descname\">DynamicOutputDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">dagster_type=None</em>, <em class=\"sig-param\">name=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">is_required=None</em>, <em class=\"sig-param\">io_manager_key=None</em>, <em class=\"sig-param\">metadata=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/output#DynamicOutputDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.experimental.DynamicOutputDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>(EXPERIMENTAL) Variant of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputDefinition</span></code> for an output that will dynamically\nalter the graph at runtime. Each copy of <a class=\"reference internal\" href=\"#dagster.experimental.DynamicOutput\" title=\"dagster.experimental.DynamicOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DynamicOutput</span></code></a> corresponding to this\ndefinition that is yielded from the solid will create a copy of the downstream graph.</p>\n<blockquote>\n<div></div></blockquote>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.experimental.DynamicOutput\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.experimental.</code><code class=\"sig-name descname\">DynamicOutput</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#DynamicOutput\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.experimental.DynamicOutput\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>(Experimental) Variant of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code> used to support mapping. Each DynamicOutput\nproduced by a solid will result in the downstream dag being cloned to run on that individual\nvalue. Each DynamicOutput must have a unique mapping_key to distinguish it.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The value returned by the compute function.</p></li>\n<li><p><strong>mapping_key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The key that uniquely identifies this dynamic value relative to its peers.</p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the corresponding output definition. (default: \u201cresult\u201d)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/dynamic", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../types/", "title": "Types"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../solids/", "title": "Solids"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/types", "Types", "N", "next"], ["sections/api/apidocs/solids", "Solids", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/dynamic.rst.txt", "title": "Dynamic Graphs (Experimental)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Dynamic Graphs (Experimental)</a></li>\n</ul>\n"}, "errors": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"module-dagster.core.errors\">\n<span id=\"errors\"></span><h1>Errors<a class=\"headerlink\" href=\"#module-dagster.core.errors\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Core Dagster error classes.</p>\n<p>All errors thrown by the Dagster framework inherit from <a class=\"reference internal\" href=\"#dagster.DagsterError\" title=\"dagster.DagsterError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterError</span></code></a>. Users\nshould not subclass this base class for their own exceptions.</p>\n<p>There is another exception base class, <a class=\"reference internal\" href=\"#dagster.DagsterUserCodeExecutionError\" title=\"dagster.DagsterUserCodeExecutionError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterUserCodeExecutionError</span></code></a>, which is\nused by the framework in concert with the <a class=\"reference internal\" href=\"internals#dagster.core.errors.user_code_error_boundary\" title=\"dagster.core.errors.user_code_error_boundary\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">user_code_error_boundary()</span></code></a>.</p>\n<p>Dagster uses this construct to wrap user code into which it calls. User code can perform arbitrary\ncomputations and may itself throw exceptions. The error boundary catches these user code-generated\nexceptions, and then reraises them wrapped in a subclass of\n<a class=\"reference internal\" href=\"#dagster.DagsterUserCodeExecutionError\" title=\"dagster.DagsterUserCodeExecutionError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterUserCodeExecutionError</span></code></a>.</p>\n<p>The wrapped exceptions include additional context for the original exceptions, injected by the\nDagster runtime.</p>\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for all errors thrown by the Dagster framework.</p>\n<p>Users should not subclass this base class for their own exceptions.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterConfigMappingFunctionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterConfigMappingFunctionError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterConfigMappingFunctionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterConfigMappingFunctionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that an unexpected error occurred while executing the body of a config mapping\nfunction defined in a <a class=\"reference internal\" href=\"solids#dagster.CompositeSolidDefinition\" title=\"dagster.CompositeSolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CompositeSolidDefinition</span></code></a> during config parsing.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterEventLogInvalidForRun\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterEventLogInvalidForRun</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">run_id</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterEventLogInvalidForRun\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterEventLogInvalidForRun\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raised when the event logs for a historical run are malformed or invalid.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterExecutionStepExecutionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterExecutionStepExecutionError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterExecutionStepExecutionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterExecutionStepExecutionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates an error occurred while executing the body of an execution step.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterExecutionStepNotFoundError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterExecutionStepNotFoundError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterExecutionStepNotFoundError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterExecutionStepNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Thrown when the user specifies execution step keys that do not exist.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterInvalidConfigError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterInvalidConfigError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">preamble</em>, <em class=\"sig-param\">errors</em>, <em class=\"sig-param\">config_value</em>, <em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterInvalidConfigError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvalidConfigError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Thrown when provided config is invalid (does not type check against the relevant config\nschema).</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterInvalidConfigDefinitionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterInvalidConfigDefinitionError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">original_root</em>, <em class=\"sig-param\">current_value</em>, <em class=\"sig-param\">stack</em>, <em class=\"sig-param\">reason=None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterInvalidConfigDefinitionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvalidConfigDefinitionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that you have attempted to construct a config with an invalid value</p>\n<dl class=\"simple\">\n<dt>Acceptable values for config types are any of:</dt><dd><ol class=\"arabic simple\">\n<li><dl class=\"simple\">\n<dt>A Python primitive type that resolves to a Dagster config type</dt><dd><p>(<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, or <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>).</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>A Dagster config type: <a class=\"reference internal\" href=\"types#dagster.Int\" title=\"dagster.Int\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Int</span></code></a>, <a class=\"reference internal\" href=\"types#dagster.Float\" title=\"dagster.Float\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Float</span></code></a>,</dt><dd><p><a class=\"reference internal\" href=\"types#dagster.Bool\" title=\"dagster.Bool\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Bool</span></code></a>, <a class=\"reference internal\" href=\"types#dagster.String\" title=\"dagster.String\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">String</span></code></a>,\n<a class=\"reference internal\" href=\"config#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a>, <a class=\"reference internal\" href=\"types#dagster.Any\" title=\"dagster.Any\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Any</span></code></a>,\n<a class=\"reference internal\" href=\"config#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a>, <a class=\"reference internal\" href=\"config#dagster.Noneable\" title=\"dagster.Noneable\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Noneable</span></code></a>, <a class=\"reference internal\" href=\"config#dagster.Enum\" title=\"dagster.Enum\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a>,\n<a class=\"reference internal\" href=\"config#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a>, <a class=\"reference internal\" href=\"config#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a>, or\n<a class=\"reference internal\" href=\"config#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a>.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>A bare python dictionary, which will be automatically wrapped in</dt><dd><p><a class=\"reference internal\" href=\"config#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a>. Values of the dictionary are resolved recursively\naccording to the same rules.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>A bare python list of length one which itself is config type.</dt><dd><p>Becomes <a class=\"reference internal\" href=\"config#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a> with list element as an argument.</p>\n</dd>\n</dl>\n</li>\n<li><p>An instance of <a class=\"reference internal\" href=\"config#dagster.Field\" title=\"dagster.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Field</span></code></a>.</p></li>\n</ol>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterInvalidDefinitionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterInvalidDefinitionError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterInvalidDefinitionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvalidDefinitionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the rules for a definition have been violated by the user.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterInvariantViolationError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterInvariantViolationError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterInvariantViolationError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvariantViolationError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates the user has violated a well-defined invariant that can only be enforced\nat runtime.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterResourceFunctionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterResourceFunctionError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterResourceFunctionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterResourceFunctionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates an error occurred while executing the body of the <code class=\"docutils literal notranslate\"><span class=\"pre\">resource_fn</span></code> in a\n<a class=\"reference internal\" href=\"modes-resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a> during resource initialization.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterRunNotFoundError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterRunNotFoundError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterRunNotFoundError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterRunNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Thrown when a run cannot be found in run storage.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterStepOutputNotFoundError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterStepOutputNotFoundError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterStepOutputNotFoundError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterStepOutputNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that previous step outputs required for an execution step to proceed are not\navailable.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterSubprocessError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterSubprocessError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterSubprocessError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterSubprocessError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An exception has occurred in one or more of the child processes dagster manages.\nThis error forwards the message and stack trace for all of the collected errors.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterTypeCheckDidNotPass\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterTypeCheckDidNotPass</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">metadata_entries=None</em>, <em class=\"sig-param\">dagster_type=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterTypeCheckDidNotPass\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterTypeCheckDidNotPass\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that a type check failed.</p>\n<p>This is raised when <code class=\"docutils literal notranslate\"><span class=\"pre\">raise_on_error</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> in calls to the synchronous pipeline and\nsolid execution APIs (<a class=\"reference internal\" href=\"execution#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a>, <a class=\"reference internal\" href=\"execution#dagster.execute_solid\" title=\"dagster.execute_solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_solid()</span></code></a>,\netc.), that is, typically in test, and  a <a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterType</span></code></a>\u2019s type check fails\nby returning either <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> or an instance of <a class=\"reference internal\" href=\"solids#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> whose <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code>\nmember is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterTypeCheckError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterTypeCheckError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterTypeCheckError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterTypeCheckError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates an error in the solid type system at runtime. E.g. a solid receives an\nunexpected input, or produces an output that does not match the type of the output definition.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterUnknownResourceError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterUnknownResourceError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">resource_name</em>, <em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterUnknownResourceError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterUnknownResourceError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that an unknown resource was accessed in the body of an execution step. May often\nhappen by accessing a resource in the compute function of a solid without first supplying the\nsolid with the correct <cite>required_resource_keys</cite> argument.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterUnmetExecutorRequirementsError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterUnmetExecutorRequirementsError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterUnmetExecutorRequirementsError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterUnmetExecutorRequirementsError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates the resolved executor is incompatible with the state of other systems\nsuch as the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInstance</span></code> or system storage configuration.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterUserCodeExecutionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterUserCodeExecutionError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterUserCodeExecutionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterUserCodeExecutionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is the base class for any exception that is meant to wrap an\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#Exception\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Exception</span></code></a> thrown by user code. It wraps that existing user code.\nThe <code class=\"docutils literal notranslate\"><span class=\"pre\">original_exc_info</span></code> argument to the constructor is meant to be a tuple of the type\nreturned by <a class=\"reference external\" href=\"https://docs.python.org/3/library/sys.html#sys.exc_info\" title=\"(in Python v3.8)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">sys.exc_info</span></code></a> at the call site of the constructor.</p>\n<p>Users should not subclass this base class for their own exceptions and should instead throw\nfreely from user code. User exceptions will be automatically wrapped and rethrown.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/errors", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../execution/", "title": "Execution"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../config/", "title": "Config"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/execution", "Execution", "N", "next"], ["sections/api/apidocs/config", "Config", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/errors.rst.txt", "title": "Errors", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Errors</a></li>\n</ul>\n"}, "execution": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"execution\">\n<h1>Execution<a class=\"headerlink\" href=\"#execution\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"executing-pipelines\">\n<h2>Executing pipelines<a class=\"headerlink\" href=\"#executing-pipelines\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.execute_pipeline\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline: Union[dagster.core.definitions.pipeline.PipelineDefinition, dagster.core.definitions.pipeline_base.IPipeline], run_config: Optional[dict] = None, mode: Optional[str] = None, preset: Optional[str] = None, tags: Optional[Dict[str, Any]] = None, solid_selection: Optional[List[str]] = None, instance: Optional[dagster.core.instance.DagsterInstance] = None, raise_on_error: bool = True</em><span class=\"sig-paren\">)</span> &#x2192; dagster.core.execution.results.PipelineExecutionResult<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api#execute_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a pipeline synchronously.</p>\n<p>Users will typically call this API when testing pipeline execution, or running standalone\nscripts.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<em>Union</em><em>[</em><em>IPipeline</em><em>, </em><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>]</em>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment configuration that parametrizes this run,\nas a dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, since this is the most useful behavior in test.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 <p>A list of solid selection queries (including single\nsolid names) to execute. For example:\n- [\u2018some_solid\u2019]: select \u201csome_solid\u201d itself.\n- [\u2018<a href=\"#id1\"><span class=\"problematic\" id=\"id2\">*</span></a>some_solid\u2019]: select \u201csome_solid\u201d and all its ancestors (upstream dependencies).\n- [\u2018<a href=\"#id3\"><span class=\"problematic\" id=\"id4\">*</span></a>some_solid+++\u2019]: select \u201csome_solid\u201d, all its ancestors, and its descendants</p>\n<blockquote>\n<div><p>(downstream dependencies) within 3 levels down.</p>\n</div></blockquote>\n<ul>\n<li><dl class=\"simple\">\n<dt>[\u2018<a href=\"#id5\"><span class=\"problematic\" id=\"id6\">*</span></a>some_solid\u2019, \u2018other_solid_a\u2019, \u2018other_solid_b+\u2019]: select \u201csome_solid\u201d and all its</dt><dd><p>ancestors, \u201cother_solid_a\u201d itself, and \u201cother_solid_b\u201d and its direct child solids.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of pipeline execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PipelineExecutionResult\" title=\"dagster.PipelineExecutionResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineExecutionResult</span></code></a></p>\n</dd>\n</dl>\n<p>For the asynchronous version, see <a class=\"reference internal\" href=\"#dagster.execute_pipeline_iterator\" title=\"dagster.execute_pipeline_iterator\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline_iterator()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.execute_pipeline_iterator\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_pipeline_iterator</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline: Union[dagster.core.definitions.pipeline.PipelineDefinition, dagster.core.definitions.pipeline_base.IPipeline], run_config: Optional[dict] = None, mode: Optional[str] = None, preset: Optional[str] = None, tags: Optional[Dict[str, Any]] = None, solid_selection: Optional[List[str]] = None, instance: Optional[dagster.core.instance.DagsterInstance] = None</em><span class=\"sig-paren\">)</span> &#x2192; Iterator[dagster.core.events.DagsterEvent]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api#execute_pipeline_iterator\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_pipeline_iterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a pipeline iteratively.</p>\n<p>Rather than package up the result of running a pipeline into a single object, like\n<a class=\"reference internal\" href=\"#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a>, this function yields the stream of events resulting from pipeline\nexecution.</p>\n<p>This is intended to allow the caller to handle these events on a streaming basis in whatever\nway is appropriate.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<em>Union</em><em>[</em><em>IPipeline</em><em>, </em><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>]</em>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment configuration that parametrizes this run,\nas a dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 <p>A list of solid selection queries (including single\nsolid names) to execute. For example:\n- [\u2018some_solid\u2019]: select \u201csome_solid\u201d itself.\n- [\u2018<a href=\"#id7\"><span class=\"problematic\" id=\"id8\">*</span></a>some_solid\u2019]: select \u201csome_solid\u201d and all its ancestors (upstream dependencies).\n- [\u2018<a href=\"#id9\"><span class=\"problematic\" id=\"id10\">*</span></a>some_solid+++\u2019]: select \u201csome_solid\u201d, all its ancestors, and its descendants</p>\n<blockquote>\n<div><p>(downstream dependencies) within 3 levels down.</p>\n</div></blockquote>\n<ul>\n<li><dl class=\"simple\">\n<dt>[\u2018<a href=\"#id11\"><span class=\"problematic\" id=\"id12\">*</span></a>some_solid\u2019, \u2018other_solid_a\u2019, \u2018other_solid_b+\u2019]: select \u201csome_solid\u201d and all its</dt><dd><p>ancestors, \u201cother_solid_a\u201d itself, and \u201cother_solid_b\u201d and its direct child solids.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The stream of events resulting from pipeline execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Iterator[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"re-executing-pipelines\">\n<h2>Re-executing pipelines<a class=\"headerlink\" href=\"#re-executing-pipelines\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.reexecute_pipeline\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">reexecute_pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline: Union[dagster.core.definitions.pipeline_base.IPipeline, dagster.core.definitions.pipeline.PipelineDefinition], parent_run_id: str, run_config: Optional[dict] = None, step_selection: Optional[List[str]] = None, mode: Optional[str] = None, preset: Optional[str] = None, tags: Optional[Dict[str, Any]] = None, instance: dagster.core.instance.DagsterInstance = None, raise_on_error: bool = True</em><span class=\"sig-paren\">)</span> &#x2192; dagster.core.execution.results.PipelineExecutionResult<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api#reexecute_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.reexecute_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reexecute an existing pipeline run.</p>\n<p>Users will typically call this API when testing pipeline reexecution, or running standalone\nscripts.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<em>Union</em><em>[</em><em>IPipeline</em><em>, </em><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>]</em>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>parent_run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the previous run to reexecute. The run must exist in the\ninstance.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment configuration that parametrizes this run,\nas a dict.</p></li>\n<li><p><strong>step_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 <p>A list of step selection queries (including single\nstep keys) to execute. For example:\n- [\u2018some_solid\u2019]: select the execution step \u201csome_solid\u201d itself.\n- [\u2018<a href=\"#id13\"><span class=\"problematic\" id=\"id14\">*</span></a>some_solid\u2019]: select the step \u201csome_solid\u201d and all its ancestors</p>\n<blockquote>\n<div><p>(upstream dependencies).</p>\n</div></blockquote>\n<ul>\n<li><dl class=\"simple\">\n<dt>[\u2018<a href=\"#id15\"><span class=\"problematic\" id=\"id16\">*</span></a>some_solid+++\u2019]: select the step \u201csome_solid\u201d, all its ancestors,</dt><dd><p>and its descendants (downstream dependencies) within 3 levels down.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>[\u2018<a href=\"#id17\"><span class=\"problematic\" id=\"id18\">*</span></a>some_solid\u2019, \u2018other_solid_a\u2019, \u2018other_solid_b+\u2019]: select</dt><dd><p>\u201dsome_solid\u201d and all its ancestors, \u201cother_solid_a\u201d itself, and\n\u201cother_solid_b\u201d and its direct child execution steps.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, since this is the most useful behavior in test.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of pipeline execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PipelineExecutionResult\" title=\"dagster.PipelineExecutionResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineExecutionResult</span></code></a></p>\n</dd>\n</dl>\n<p>For the asynchronous version, see <a class=\"reference internal\" href=\"#dagster.reexecute_pipeline_iterator\" title=\"dagster.reexecute_pipeline_iterator\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">reexecute_pipeline_iterator()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.reexecute_pipeline_iterator\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">reexecute_pipeline_iterator</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline: Union[dagster.core.definitions.pipeline_base.IPipeline, dagster.core.definitions.pipeline.PipelineDefinition], parent_run_id: str, run_config: Optional[dict] = None, step_selection: Optional[List[str]] = None, mode: Optional[str] = None, preset: Optional[str] = None, tags: Optional[Dict[str, Any]] = None, instance: dagster.core.instance.DagsterInstance = None</em><span class=\"sig-paren\">)</span> &#x2192; Iterator[dagster.core.events.DagsterEvent]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api#reexecute_pipeline_iterator\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.reexecute_pipeline_iterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reexecute a pipeline iteratively.</p>\n<p>Rather than package up the result of running a pipeline into a single object, like\n<a class=\"reference internal\" href=\"#dagster.reexecute_pipeline\" title=\"dagster.reexecute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">reexecute_pipeline()</span></code></a>, this function yields the stream of events resulting from pipeline\nreexecution.</p>\n<p>This is intended to allow the caller to handle these events on a streaming basis in whatever\nway is appropriate.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<em>Union</em><em>[</em><em>IPipeline</em><em>, </em><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>]</em>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>parent_run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the previous run to reexecute. The run must exist in the\ninstance.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment configuration that parametrizes this run,\nas a dict.</p></li>\n<li><p><strong>step_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 <p>A list of step selection queries (including single\nstep keys) to execute. For example:\n- [\u2018some_solid\u2019]: select the execution step \u201csome_solid\u201d itself.\n- [\u2018<a href=\"#id19\"><span class=\"problematic\" id=\"id20\">*</span></a>some_solid\u2019]: select the step \u201csome_solid\u201d and all its ancestors</p>\n<blockquote>\n<div><p>(upstream dependencies).</p>\n</div></blockquote>\n<ul>\n<li><dl class=\"simple\">\n<dt>[\u2018<a href=\"#id21\"><span class=\"problematic\" id=\"id22\">*</span></a>some_solid+++\u2019]: select the step \u201csome_solid\u201d, all its ancestors,</dt><dd><p>and its descendants (downstream dependencies) within 3 levels down.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>[\u2018<a href=\"#id23\"><span class=\"problematic\" id=\"id24\">*</span></a>some_solid\u2019, \u2018other_solid_a\u2019, \u2018other_solid_b+\u2019]: select</dt><dd><p>\u201dsome_solid\u201d and all its ancestors, \u201cother_solid_a\u201d itself, and\n\u201cother_solid_b\u201d and its direct child execution steps.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The stream of events resulting from pipeline reexecution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Iterator[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"executing-solids\">\n<h2>Executing solids<a class=\"headerlink\" href=\"#executing-solids\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.execute_solid\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid_def</em>, <em class=\"sig-param\">mode_def=None</em>, <em class=\"sig-param\">input_values=None</em>, <em class=\"sig-param\">tags=None</em>, <em class=\"sig-param\">run_config=None</em>, <em class=\"sig-param\">raise_on_error=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test#execute_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a single solid in an ephemeral pipeline.</p>\n<p>Intended to support unit tests. Input values may be passed directly, and no pipeline need be\nspecified \u2013 an ephemeral pipeline will be constructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid_def</strong> (<a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><em>SolidDefinition</em></a>) \u2013 The solid to execute.</p></li>\n<li><p><strong>mode_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><em>ModeDefinition</em></a><em>]</em>) \u2013 The mode within which to execute the solid. Use this\nif, e.g., custom resources, loggers, or executors are desired.</p></li>\n<li><p><strong>input_values</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of input names to input values, used to\npass inputs to the solid directly. You may also use the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> to\nconfigure any inputs that are configurable.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment configuration that parameterized this\nexecution, as a dict.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, since this is the most useful behavior in test.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of executing the\nsolid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.execute_solid_within_pipeline\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_solid_within_pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_def</em>, <em class=\"sig-param\">solid_name</em>, <em class=\"sig-param\">inputs=None</em>, <em class=\"sig-param\">run_config=None</em>, <em class=\"sig-param\">mode=None</em>, <em class=\"sig-param\">preset=None</em>, <em class=\"sig-param\">tags=None</em>, <em class=\"sig-param\">instance=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test#execute_solid_within_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_solid_within_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a single solid within an existing pipeline.</p>\n<p>Intended to support tests. Input values may be passed directly.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_def</strong> (<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline within which to execute the solid.</p></li>\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid, or the aliased solid, to execute.</p></li>\n<li><p><strong>inputs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of input names to input values, used to\npass input values to the solid directly. You may also use the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> to\nconfigure any inputs that are configurable.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment configuration that parameterized this\nexecution, as a dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of executing the\nsolid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.execute_solids_within_pipeline\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_solids_within_pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_def</em>, <em class=\"sig-param\">solid_names</em>, <em class=\"sig-param\">inputs=None</em>, <em class=\"sig-param\">run_config=None</em>, <em class=\"sig-param\">mode=None</em>, <em class=\"sig-param\">preset=None</em>, <em class=\"sig-param\">tags=None</em>, <em class=\"sig-param\">instance=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test#execute_solids_within_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_solids_within_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a set of solids within an existing pipeline.</p>\n<p>Intended to support tests. Input values may be passed directly.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_def</strong> (<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline within which to execute the solid.</p></li>\n<li><p><strong>solid_names</strong> (<em>FrozenSet</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A set of the solid names, or the aliased solids, to execute.</p></li>\n<li><p><strong>inputs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em><em>]</em>) \u2013 A dict keyed on solid names, whose values are\ndicts of input names to input values, used to pass input values to the solids directly.\nYou may also use the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> to configure any inputs that are configurable.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment configuration that parameterized this\nexecution, as a dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The results of\nexecuting the solids, keyed by solid name.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"execution-context\">\n<h2>Execution context<a class=\"headerlink\" href=\"#execution-context\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.core.execution.context.compute.SolidExecutionContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.execution.context.compute.</code><code class=\"sig-name descname\">SolidExecutionContext</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">system_compute_execution_context: dagster.core.execution.context.system.SystemComputeExecutionContext</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.SolidExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to solid compute logic.</p>\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.SolidExecutionContext.instance\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">instance</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.SolidExecutionContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current Instance</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.SolidExecutionContext.pdb\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">pdb</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.SolidExecutionContext.pdb\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allows pdb debugging from within the solid.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">pdb</span><span class=\"o\">.</span><span class=\"n\">set_trace</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.SolidExecutionContext.pipeline_run\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">pipeline_run</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.SolidExecutionContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current PipelineRun</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.SolidExecutionContext.solid_config\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">solid_config</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.SolidExecutionContext.solid_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config specific to this solid.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.execution.context.compute.</code><code class=\"sig-name descname\">AbstractComputeExecutionContext</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#AbstractComputeExecutionContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for solid context implemented by SolidExecutionContext and DagstermillExecutionContext</p>\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.get_tag\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">get_tag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">key: str</em><span class=\"sig-paren\">)</span> &#x2192; str<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#AbstractComputeExecutionContext.get_tag\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.get_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Implement this method to get a logging tag.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.has_tag\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">has_tag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">key</em><span class=\"sig-paren\">)</span> &#x2192; bool<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#AbstractComputeExecutionContext.has_tag\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.has_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Implement this method to check if a logging tag is set.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.log\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">log</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager available in the execution context.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.pipeline_def\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">pipeline_def</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.pipeline_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline being executed.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.pipeline_run\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">pipeline_run</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The PipelineRun object corresponding to the execution.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.resources\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">resources</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resources available in the execution context.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.run_id\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">run_id</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The run id for the context.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.solid\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">solid</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The solid corresponding to the execution step being executed.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.solid_config\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">solid_config</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.solid_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config specific to this solid.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.execution.context.compute.AbstractComputeExecutionContext.solid_def\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">solid_def</code><a class=\"headerlink\" href=\"#dagster.core.execution.context.compute.AbstractComputeExecutionContext.solid_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The solid definition corresponding to the execution step being executed.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.reconstructable\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">reconstructable</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/reconstructable#reconstructable\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.reconstructable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a ReconstructablePipeline from a function that returns a PipelineDefinition, or a\nfunction decorated with <a class=\"reference internal\" href=\"pipeline#dagster.pipeline\" title=\"dagster.pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;pipeline</span></code></a></p>\n<p>When your pipeline must cross process boundaries, e.g., for execution on multiple nodes or\nin different systems (like dagstermill), Dagster must know how to reconstruct the pipeline\non the other side of the process boundary.</p>\n<p>This function implements a very conservative strategy for reconstructing pipelines, so that\nits behavior is easy to predict, but as a consequence it is not able to reconstruct certain\nkinds of pipelines, such as those defined by lambdas, in nested scopes (e.g., dynamically\nwithin a method call), or in interactive environments such as the Python REPL or Jupyter\nnotebooks.</p>\n<p>If you need to reconstruct pipelines constructed in these ways, you should use\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">build_reconstructable_pipeline()</span></code> instead, which allows you to specify your own\nstrategy for reconstructing a pipeline.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span><span class=\"p\">,</span> <span class=\"n\">reconstructable</span>\n\n<span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo_pipeline</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"n\">reconstructable_foo_pipeline</span> <span class=\"o\">=</span> <span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">foo_pipeline</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">make_bar_pipeline</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"n\">reconstructable_bar_pipeline</span> <span class=\"o\">=</span> <span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">bar_pipeline</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pipeline-and-solid-results\">\n<h2>Pipeline and solid results<a class=\"headerlink\" href=\"#pipeline-and-solid-results\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.PipelineExecutionResult\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">PipelineExecutionResult</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_def</em>, <em class=\"sig-param\">run_id</em>, <em class=\"sig-param\">event_list</em>, <em class=\"sig-param\">reconstruct_context</em>, <em class=\"sig-param\">resource_instances_to_override=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#PipelineExecutionResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The result of executing a pipeline.</p>\n<p>Returned by <a class=\"reference internal\" href=\"#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a>. Users should not instantiate this class.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.SolidExecutionResult\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">SolidExecutionResult</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid</em>, <em class=\"sig-param\">step_events_by_kind</em>, <em class=\"sig-param\">reconstruct_context</em>, <em class=\"sig-param\">resource_instances_to_override=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execution result for a leaf solid in a pipeline.</p>\n<p>Users should not instantiate this class.</p>\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.compute_input_event_dict\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">compute_input_event_dict</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_input_event_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_INPUT</span></code>, keyed by input name.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, <a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.compute_output_events_dict\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">compute_output_events_dict</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_output_events_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code>, keyed by output name</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.compute_step_events\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">compute_step_events</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_step_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events generated by execution of the solid compute function.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.compute_step_failure_event\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">compute_step_failure_event</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_step_failure_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_FAILURE</span></code> event, throws if it did not fail.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.expectation_events_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">expectation_events_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.expectation_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_EXPECTATION_RESULT</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.expectation_results_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">expectation_results_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.expectation_results_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All expectation results yielded by the solid</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"solids#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\">ExpectationResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.failure_data\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">failure_data</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.failure_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Any data corresponding to this step\u2019s failure, if it\nfailed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>, StepFailureData]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.get_output_event_for_compute\">\n<code class=\"sig-name descname\">get_output_event_for_compute</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">output_name='result'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult.get_output_event_for_compute\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.get_output_event_for_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code> event for the given output name.</p>\n<p>Throws if not present.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output. (default: \u2018result\u2019)</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The corresponding event.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.get_output_events_for_compute\">\n<code class=\"sig-name descname\">get_output_events_for_compute</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">output_name='result'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult.get_output_events_for_compute\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.get_output_events_for_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code> event for the given output name.</p>\n<p>Throws if not present.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output. (default: \u2018result\u2019)</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The corresponding events.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.get_step_success_event\">\n<code class=\"sig-name descname\">get_step_success_event</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult.get_step_success_event\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.get_step_success_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DagsterEvent: The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_SUCCESS</span></code> event, throws if not present.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.input_events_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">input_events_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.input_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_INPUT</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.materialization_events_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">materialization_events_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.materialization_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_MATERIALIZATION</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.materializations_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">materializations_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.materializations_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All materializations yielded by the solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[Materialization]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.output_events_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">output_events_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.output_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.output_value\">\n<code class=\"sig-name descname\">output_value</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">output_name='result'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult.output_value\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.output_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a computed output value.</p>\n<p>Note that calling this method will reconstruct the pipeline context (including, e.g.,\nresources) to retrieve materialized output values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>output_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The output name for which to retrieve the value. (default: \u2018result\u2019)</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if execution did not succeed, the output value</dt><dd><p>in the normal case, and a dict of mapping keys to values in the mapped case.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>, Any, Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.output_values\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">output_values</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.output_values\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The computed output values.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if execution did not succeed.</p>\n<dl class=\"simple\">\n<dt>Returns a dictionary where keys are output names and the values are:</dt><dd><ul class=\"simple\">\n<li><p>the output values in the normal case</p></li>\n<li><p>a dictionary from mapping key to corresponding value in the mapped case</p></li>\n</ul>\n</dd>\n</dl>\n<p>Note that accessing this property will reconstruct the pipeline context (including, e.g.,\nresources) to retrieve materialized output values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>, Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Union[Any, Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.skipped\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">skipped</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.skipped\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether solid execution was skipped.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.success\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">success</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether solid execution was successful.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.CompositeSolidExecutionResult\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">CompositeSolidExecutionResult</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid</em>, <em class=\"sig-param\">event_list</em>, <em class=\"sig-param\">step_events_by_kind</em>, <em class=\"sig-param\">reconstruct_context</em>, <em class=\"sig-param\">handle=None</em>, <em class=\"sig-param\">resource_instances_to_override=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#CompositeSolidExecutionResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execution result for a composite solid in a pipeline.</p>\n<p>Users should not instantiate this class.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.DagsterEvent\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterEvent</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/events#DagsterEvent\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterEvent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Events yielded by solid and pipeline execution.</p>\n<p>Users should not instantiate this class.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEvent.event_type_value\">\n<code class=\"sig-name descname\">event_type_value</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.event_type_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Value for a DagsterEventType.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEvent.pipeline_name\">\n<code class=\"sig-name descname\">pipeline_name</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.pipeline_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEvent.step_key\">\n<code class=\"sig-name descname\">step_key</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.step_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEvent.solid_handle\">\n<code class=\"sig-name descname\">solid_handle</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.solid_handle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>SolidHandle</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEvent.step_kind_value\">\n<code class=\"sig-name descname\">step_kind_value</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.step_kind_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Value for a StepKind.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEvent.logging_tags\">\n<code class=\"sig-name descname\">logging_tags</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.logging_tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEvent.event_specific_data\">\n<code class=\"sig-name descname\">event_specific_data</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.event_specific_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Type must correspond to event_type_value.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEvent.message\">\n<code class=\"sig-name descname\">message</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEvent.pid\">\n<code class=\"sig-name descname\">pid</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.pid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt>\n<code class=\"sig-name descname\">step_key</code></dt>\n<dd><p>DEPRECATED</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterEvent.event_type\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">event_type</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.event_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The type of this event.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterEventType\" title=\"dagster.DagsterEventType\">DagsterEventType</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.DagsterEventType\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterEventType</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/events#DagsterEventType\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterEventType\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The types of events that may be yielded by solid and pipeline execution.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.ASSET_STORE_OPERATION\">\n<code class=\"sig-name descname\">ASSET_STORE_OPERATION</code><em class=\"property\"> = 'ASSET_STORE_OPERATION'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ASSET_STORE_OPERATION\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.ENGINE_EVENT\">\n<code class=\"sig-name descname\">ENGINE_EVENT</code><em class=\"property\"> = 'ENGINE_EVENT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ENGINE_EVENT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.HANDLED_OUTPUT\">\n<code class=\"sig-name descname\">HANDLED_OUTPUT</code><em class=\"property\"> = 'HANDLED_OUTPUT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.HANDLED_OUTPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.HOOK_COMPLETED\">\n<code class=\"sig-name descname\">HOOK_COMPLETED</code><em class=\"property\"> = 'HOOK_COMPLETED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.HOOK_COMPLETED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.HOOK_ERRORED\">\n<code class=\"sig-name descname\">HOOK_ERRORED</code><em class=\"property\"> = 'HOOK_ERRORED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.HOOK_ERRORED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.HOOK_SKIPPED\">\n<code class=\"sig-name descname\">HOOK_SKIPPED</code><em class=\"property\"> = 'HOOK_SKIPPED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.HOOK_SKIPPED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.LOADED_INPUT\">\n<code class=\"sig-name descname\">LOADED_INPUT</code><em class=\"property\"> = 'LOADED_INPUT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.LOADED_INPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.OBJECT_STORE_OPERATION\">\n<code class=\"sig-name descname\">OBJECT_STORE_OPERATION</code><em class=\"property\"> = 'OBJECT_STORE_OPERATION'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.OBJECT_STORE_OPERATION\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_CANCELED\">\n<code class=\"sig-name descname\">PIPELINE_CANCELED</code><em class=\"property\"> = 'PIPELINE_CANCELED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_CANCELED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_CANCELING\">\n<code class=\"sig-name descname\">PIPELINE_CANCELING</code><em class=\"property\"> = 'PIPELINE_CANCELING'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_CANCELING\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_DEQUEUED\">\n<code class=\"sig-name descname\">PIPELINE_DEQUEUED</code><em class=\"property\"> = 'PIPELINE_DEQUEUED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_DEQUEUED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_ENQUEUED\">\n<code class=\"sig-name descname\">PIPELINE_ENQUEUED</code><em class=\"property\"> = 'PIPELINE_ENQUEUED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_ENQUEUED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_FAILURE\">\n<code class=\"sig-name descname\">PIPELINE_FAILURE</code><em class=\"property\"> = 'PIPELINE_FAILURE'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_INIT_FAILURE\">\n<code class=\"sig-name descname\">PIPELINE_INIT_FAILURE</code><em class=\"property\"> = 'PIPELINE_INIT_FAILURE'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_INIT_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_START\">\n<code class=\"sig-name descname\">PIPELINE_START</code><em class=\"property\"> = 'PIPELINE_START'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_START\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_STARTING\">\n<code class=\"sig-name descname\">PIPELINE_STARTING</code><em class=\"property\"> = 'PIPELINE_STARTING'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_STARTING\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_SUCCESS\">\n<code class=\"sig-name descname\">PIPELINE_SUCCESS</code><em class=\"property\"> = 'PIPELINE_SUCCESS'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_EXPECTATION_RESULT\">\n<code class=\"sig-name descname\">STEP_EXPECTATION_RESULT</code><em class=\"property\"> = 'STEP_EXPECTATION_RESULT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_EXPECTATION_RESULT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_FAILURE\">\n<code class=\"sig-name descname\">STEP_FAILURE</code><em class=\"property\"> = 'STEP_FAILURE'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_INPUT\">\n<code class=\"sig-name descname\">STEP_INPUT</code><em class=\"property\"> = 'STEP_INPUT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_INPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_MATERIALIZATION\">\n<code class=\"sig-name descname\">STEP_MATERIALIZATION</code><em class=\"property\"> = 'STEP_MATERIALIZATION'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_MATERIALIZATION\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_OUTPUT\">\n<code class=\"sig-name descname\">STEP_OUTPUT</code><em class=\"property\"> = 'STEP_OUTPUT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_OUTPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_RESTARTED\">\n<code class=\"sig-name descname\">STEP_RESTARTED</code><em class=\"property\"> = 'STEP_RESTARTED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_RESTARTED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_SKIPPED\">\n<code class=\"sig-name descname\">STEP_SKIPPED</code><em class=\"property\"> = 'STEP_SKIPPED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_SKIPPED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_START\">\n<code class=\"sig-name descname\">STEP_START</code><em class=\"property\"> = 'STEP_START'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_START\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_SUCCESS\">\n<code class=\"sig-name descname\">STEP_SUCCESS</code><em class=\"property\"> = 'STEP_SUCCESS'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_UP_FOR_RETRY\">\n<code class=\"sig-name descname\">STEP_UP_FOR_RETRY</code><em class=\"property\"> = 'STEP_UP_FOR_RETRY'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_UP_FOR_RETRY\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pipeline-configuration\">\n<h2>Pipeline configuration<a class=\"headerlink\" href=\"#pipeline-configuration\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"run-config-schema\">\n<span id=\"config-schema\"></span><h3>Run Config Schema<a class=\"headerlink\" href=\"#run-config-schema\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> used by <a class=\"reference internal\" href=\"#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a> and\n<a class=\"reference internal\" href=\"#dagster.execute_pipeline_iterator\" title=\"dagster.execute_pipeline_iterator\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline_iterator()</span></code></a> has the following schema:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"c1\"># configuration for execution, required if executors require config</span>\n  <span class=\"n\">execution</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of one, and only one available executor, typically &#39;in_process&#39; or &#39;multiprocess&#39;</span>\n    <span class=\"n\">__executor_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># executor-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for loggers, required if loggers require config</span>\n  <span class=\"n\">loggers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of an available logger</span>\n    <span class=\"n\">__logger_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># logger-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for resources, required if resources require config</span>\n  <span class=\"n\">resources</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of a resource</span>\n    <span class=\"n\">__resource_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># resource-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for solids, required if solids require config</span>\n  <span class=\"n\">solids</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\n    <span class=\"c1\"># these keys align with the names of the solids, or their alias in this pipeline</span>\n    <span class=\"n\">__solid_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\n      <span class=\"c1\"># pass any data that was defined via config_field</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n\n      <span class=\"c1\"># configurably specify input values, keyed by input name</span>\n      <span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"n\">__input_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"c1\"># if an dagster_type_loader is specified, that schema must be satisfied here;</span>\n          <span class=\"c1\"># scalar, built-in types will generally allow their values to be specified directly:</span>\n          <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"o\">...</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">},</span>\n\n      <span class=\"c1\"># configurably materialize output values</span>\n      <span class=\"n\">outputs</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"n\">__output_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"c1\"># if an dagster_type_materializer is specified, that schema must be satisfied</span>\n          <span class=\"c1\"># here; pickleable types will generally allow output as follows:</span>\n          <span class=\"n\">pickle</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">String</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># optionally use an available system storage for intermediates etc.</span>\n  <span class=\"n\">intermediate_storage</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of one, and only one available system storage, typically &#39;filesystem&#39; or</span>\n    <span class=\"c1\"># &#39;in_memory&#39;</span>\n    <span class=\"n\">__storage_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></blockquote>\n</div>\n</div>\n<div class=\"section\" id=\"intermediate-storage\">\n<h2>Intermediate Storage<a class=\"headerlink\" href=\"#intermediate-storage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.io_manager_from_intermediate_storage\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">io_manager_from_intermediate_storage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">intermediate_storage_def</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/system_storage#io_manager_from_intermediate_storage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.io_manager_from_intermediate_storage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define an <a class=\"reference internal\" href=\"io-managers#dagster.IOManagerDefinition\" title=\"dagster.IOManagerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOManagerDefinition</span></code></a> from an existing <a class=\"reference internal\" href=\"internals#dagster.IntermediateStorageDefinition\" title=\"dagster.IntermediateStorageDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntermediateStorageDefinition</span></code></a>.</p>\n<p>This method is used to adapt an existing user-defined intermediate storage to a IO manager\nresource, for example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_io_manager_def</span> <span class=\"o\">=</span> <span class=\"n\">io_manager_from_intermediate_storage</span><span class=\"p\">(</span><span class=\"n\">my_intermediate_storage_def</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;io_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_io_manager_def</span><span class=\"p\">})])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>intermediate_storage_def</strong> (<a class=\"reference internal\" href=\"internals#dagster.IntermediateStorageDefinition\" title=\"dagster.IntermediateStorageDefinition\"><em>IntermediateStorageDefinition</em></a>) \u2013 The intermediate storage definition\nto be converted to an IO manager definition.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>IOManagerDefinition</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.mem_intermediate_storage\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">mem_intermediate_storage</code><em class=\"property\"> IntermediateStorageDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/system_storage#mem_intermediate_storage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.mem_intermediate_storage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default in-memory intermediate storage.</p>\n<p>In-memory intermediate storage is the default on any pipeline run that does\nnot configure any custom intermediate storage.</p>\n<p>Keep in mind when using this storage that intermediates will not be persisted after the pipeline\nrun ends. Use a persistent intermediate storage like <a class=\"reference internal\" href=\"#dagster.fs_intermediate_storage\" title=\"dagster.fs_intermediate_storage\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">fs_intermediate_storage()</span></code></a> to\npersist intermediates and take advantage of advanced features like pipeline re-execution.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.fs_intermediate_storage\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">fs_intermediate_storage</code><em class=\"property\"> IntermediateStorageDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/system_storage#fs_intermediate_storage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.fs_intermediate_storage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default filesystem intermediate storage.</p>\n<p>Filesystem system storage is available by default on any <a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does\nnot provide custom system storages. To select it, include a fragment such as the following in\nconfig:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">intermediate_storage</span><span class=\"p\">:</span>\n  <span class=\"nt\">filesystem</span><span class=\"p\">:</span>\n    <span class=\"nt\">base_dir</span><span class=\"p\">:</span> <span class=\"s\">&#39;/path/to/dir/&#39;</span>\n</pre></div>\n</div>\n<p>You may omit the <code class=\"docutils literal notranslate\"><span class=\"pre\">base_dir</span></code> config value, in which case the filesystem storage will use\nthe <a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInstance</span></code></a>-provided default.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.default_intermediate_storage_defs\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">default_intermediate_storage_defs</code><em class=\"property\"> List[IntermediateStorageDefinition]</em><a class=\"headerlink\" href=\"#dagster.default_intermediate_storage_defs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in mutable sequence.</p>\n<p>If no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.\nThe default intermediate storages available on any <a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does not provide\ncustom intermediate storages. These are currently [<a class=\"reference internal\" href=\"#dagster.mem_intermediate_storage\" title=\"dagster.mem_intermediate_storage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mem_intermediate_storage</span></code></a>,\n<a class=\"reference internal\" href=\"#dagster.fs_intermediate_storage\" title=\"dagster.fs_intermediate_storage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">fs_intermediate_storage</span></code></a>].</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"executors\">\n<h2>Executors<a class=\"headerlink\" href=\"#executors\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"dagster.in_process_executor\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">in_process_executor</code><em class=\"property\"> ExecutorDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor#in_process_executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.in_process_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default in-process executor.</p>\n<p>In most Dagster environments, this will be the default executor. It is available by default on\nany <a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does not provide custom executors. To select it explicitly,\ninclude the following top-level fragment in config:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span>\n  <span class=\"nt\">in_process</span><span class=\"p\">:</span>\n</pre></div>\n</div>\n<p>Execution priority can be configured using the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster/priority</span></code> tag via solid metadata,\nwhere the higher the number the higher the priority. 0 is the default and both positive\nand negative numbers can be used.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.multiprocess_executor\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">multiprocess_executor</code><em class=\"property\"> ExecutorDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor#multiprocess_executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.multiprocess_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default multiprocess executor.</p>\n<p>This simple multiprocess executor is available by default on any <a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a>\nthat does not provide custom executors. To select the multiprocess executor, include a fragment\nsuch as the following in your config:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span>\n  <span class=\"nt\">multiprocess</span><span class=\"p\">:</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">max_concurrent</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">4</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> arg is optional and tells the execution engine how many processes may run\nconcurrently. By default, or if you set <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> to be 0, this is the return value of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multiprocessing.cpu_count()</span></code></a>.</p>\n<p>Execution priority can be configured using the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster/priority</span></code> tag via solid metadata,\nwhere the higher the number the higher the priority. 0 is the default and both positive\nand negative numbers can be used.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.default_executors\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">default_executors</code><em class=\"property\"> List[ExecutorDefinition]</em><a class=\"headerlink\" href=\"#dagster.default_executors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in mutable sequence.</p>\n<p>If no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.\nThe default executors available on any <a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does not provide custom\nexecutors. These are currently [<a class=\"reference internal\" href=\"#dagster.in_process_executor\" title=\"dagster.in_process_executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">in_process_executor</span></code></a>,\n<a class=\"reference internal\" href=\"#dagster.multiprocess_executor\" title=\"dagster.multiprocess_executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">multiprocess_executor</span></code></a>].</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"contexts\">\n<h2>Contexts<a class=\"headerlink\" href=\"#contexts\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.SystemComputeExecutionContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">SystemComputeExecutionContext</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">execution_context_data: dagster.core.execution.context.system.SystemExecutionContextData</em>, <em class=\"sig-param\">log_manager: dagster.core.log_manager.DagsterLogManager</em>, <em class=\"sig-param\">step: dagster.core.execution.plan.step.ExecutionStep</em>, <em class=\"sig-param\">output_capture: Optional[Dict[dagster.core.execution.plan.outputs.StepOutputHandle</em>, <em class=\"sig-param\">Any]] = None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/system#SystemComputeExecutionContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SystemComputeExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.TypeCheckContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">TypeCheckContext</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">execution_context_data: dagster.core.execution.context.system.SystemExecutionContextData</em>, <em class=\"sig-param\">log_manager: dagster.core.log_manager.DagsterLogManager</em>, <em class=\"sig-param\">dagster_type: dagster.core.types.dagster_type.DagsterType</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/system#TypeCheckContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.TypeCheckContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to a type check function on a DagsterType.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.TypeCheckContext.log\">\n<code class=\"sig-name descname\">log</code><a class=\"headerlink\" href=\"#dagster.TypeCheckContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Centralized log dispatch from user code.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.TypeCheckContext.resources\">\n<code class=\"sig-name descname\">resources</code><a class=\"headerlink\" href=\"#dagster.TypeCheckContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An object whose attributes contain the resources available to this solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.TypeCheckContext.run_id\">\n<code class=\"sig-name descname\">run_id</code><a class=\"headerlink\" href=\"#dagster.TypeCheckContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id of this pipeline run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.HookContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">HookContext</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">execution_context_data: dagster.core.execution.context.system.SystemExecutionContextData</em>, <em class=\"sig-param\">log_manager: dagster.core.log_manager.DagsterLogManager</em>, <em class=\"sig-param\">hook_def: dagster.core.definitions.hook.HookDefinition</em>, <em class=\"sig-param\">step: dagster.core.execution.plan.step.ExecutionStep</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/system#HookContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.HookContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to a hook function on an DagsterEvent.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.HookContext.log\">\n<code class=\"sig-name descname\">log</code><a class=\"headerlink\" href=\"#dagster.HookContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Centralized log dispatch from user code.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.HookContext.hook_def\">\n<code class=\"sig-name descname\">hook_def</code><a class=\"headerlink\" href=\"#dagster.HookContext.hook_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The hook that the context object belongs to.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>HookDefinition</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.HookContext.step\">\n<code class=\"sig-name descname\">step</code><a class=\"headerlink\" href=\"#dagster.HookContext.step\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The compute step associated with the hook.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>ExecutionStep</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.HookContext.solid\">\n<code class=\"sig-name descname\">solid</code><a class=\"headerlink\" href=\"#dagster.HookContext.solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The solid instance associated with the hook.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Solid</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.HookContext.resources\">\n<code class=\"sig-name descname\">resources</code><a class=\"headerlink\" href=\"#dagster.HookContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resources available in the hook context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>NamedTuple</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.HookContext.solid_config\">\n<code class=\"sig-name descname\">solid_config</code><a class=\"headerlink\" href=\"#dagster.HookContext.solid_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config specific to this solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/execution", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../hooks/", "title": "Hooks"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../errors/", "title": "Errors"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/hooks", "Hooks", "N", "next"], ["sections/api/apidocs/errors", "Errors", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/execution.rst.txt", "title": "Execution", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Execution</a><ul>\n<li><a class=\"reference internal\" href=\"#executing-pipelines\">Executing pipelines</a></li>\n<li><a class=\"reference internal\" href=\"#re-executing-pipelines\">Re-executing pipelines</a></li>\n<li><a class=\"reference internal\" href=\"#executing-solids\">Executing solids</a></li>\n<li><a class=\"reference internal\" href=\"#execution-context\">Execution context</a></li>\n<li><a class=\"reference internal\" href=\"#pipeline-and-solid-results\">Pipeline and solid results</a></li>\n<li><a class=\"reference internal\" href=\"#pipeline-configuration\">Pipeline configuration</a><ul>\n<li><a class=\"reference internal\" href=\"#run-config-schema\">Run Config Schema</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#intermediate-storage\">Intermediate Storage</a></li>\n<li><a class=\"reference internal\" href=\"#executors\">Executors</a></li>\n<li><a class=\"reference internal\" href=\"#contexts\">Contexts</a></li>\n</ul>\n</li>\n</ul>\n"}, "hooks": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"hooks\">\n<h1>Hooks<a class=\"headerlink\" href=\"#hooks\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"function\">\n<dt id=\"dagster.success_hook\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">success_hook</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name: Union[str, None, Callable[[...], Any]] = None, required_resource_keys: Optional[Set[str]] = None</em><span class=\"sig-paren\">)</span> &#x2192; Union[dagster.core.definitions.hook.HookDefinition, dagster.core.definitions.decorators.hook._Hook, Callable[[Callable[[HookContext], Any]], Union[dagster.core.definitions.hook.HookDefinition, dagster.core.definitions.decorators.hook._Hook]]]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/hook#success_hook\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.success_hook\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a hook on step success events with the specified parameters from the decorated function.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of this hook.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the\nhook.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@success_hook</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">slack_message_on_success</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;solid </span><span class=\"si\">{}</span><span class=\"s1\"> succeeded&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">slack</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@success_hook</span>\n<span class=\"k\">def</span> <span class=\"nf\">do_something_on_success</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">do_something</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.failure_hook\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">failure_hook</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name: Optional[str] = None</em>, <em class=\"sig-param\">required_resource_keys: Optional[Set[str]] = None</em><span class=\"sig-paren\">)</span> &#x2192; Union[dagster.core.definitions.hook.HookDefinition, dagster.core.definitions.decorators.hook._Hook, Callable[[Callable[[HookContext], Any]], Union[dagster.core.definitions.hook.HookDefinition, dagster.core.definitions.decorators.hook._Hook]]]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/hook#failure_hook\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.failure_hook\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a hook on step failure events with the specified parameters from the decorated function.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of this hook.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the\nhook.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@failure_hook</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">slack_message_on_failure</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;solid </span><span class=\"si\">{}</span><span class=\"s1\"> failed&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">slack</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@failure_hook</span>\n<span class=\"k\">def</span> <span class=\"nf\">do_something_on_failure</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">do_something</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/hooks", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../internals/", "title": "Internals"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../execution/", "title": "Execution"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/internals", "Internals", "N", "next"], ["sections/api/apidocs/execution", "Execution", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/hooks.rst.txt", "title": "Hooks", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Hooks</a></li>\n</ul>\n"}, "internals": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"internals\">\n<h1>Internals<a class=\"headerlink\" href=\"#internals\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>Please note that internal APIs are likely to be in much greater flux pre-1.0 than user-facing APIs,\nparticularly if not exported in the top level <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster</span></code> module.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>If you find yourself consulting these docs because you are writing custom components and plug-ins,\nplease get in touch with the core team <a class=\"reference external\" href=\"https://join.slack.com/t/dagster/shared_invite/enQtNjEyNjkzNTA2OTkzLTI0MzdlNjU0ODVhZjQyOTMyMGM1ZDUwZDQ1YjJmYjI3YzExZGViMDI1ZDlkNTY5OThmYWVlOWM1MWVjN2I3NjU\">on our Slack</a>.\nWe\u2019re curious what you\u2019re up to, happy to help, excited for new community contributions, and eager\nto make the system as easy to work with as possible \u2013 including for teams who are looking to\ncustomize it.</p>\n<div class=\"section\" id=\"logging\">\n<h2>Logging<a class=\"headerlink\" href=\"#logging\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.DagsterLogManager\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterLogManager</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/log_manager#DagsterLogManager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Centralized dispatch for logging from user code.</p>\n<p>Handles the construction of uniform structured log messages and passes them through to the\nunderlying loggers.</p>\n<p>An instance of the log manager is made available to solids as <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code>. Users should not\ninitialize instances of the log manager directly. To configure custom loggers, set the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">logger_defs</span></code> on a <a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> for a pipeline.</p>\n<p>The log manager supports standard convenience methods like those exposed by the Python standard\nlibrary <a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#module-logging\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">logging</span></code></a> module (i.e., within the body of a solid,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">context.log.{debug,</span> <span class=\"pre\">info,</span> <span class=\"pre\">warning,</span> <span class=\"pre\">warn,</span> <span class=\"pre\">error,</span> <span class=\"pre\">critical,</span> <span class=\"pre\">fatal}</span></code>).</p>\n<p>The underlying integer API can also be called directly using, e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">context.log.log(5,</span> <span class=\"pre\">msg)</span></code>, and the log manager will delegate to the <code class=\"docutils literal notranslate\"><span class=\"pre\">log</span></code> method\ndefined on each of the loggers it manages.</p>\n<p>User-defined custom log levels are not supported, and calls to, e.g.,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">context.log.trace</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log.notice</span></code> will result in hard exceptions <strong>at runtime</strong>.</p>\n<dl class=\"method\">\n<dt id=\"dagster.DagsterLogManager.critical\">\n<code class=\"sig-name descname\">critical</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">msg</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/log_manager#DagsterLogManager.critical\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterLogManager.critical\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log at the <code class=\"docutils literal notranslate\"><span class=\"pre\">logging.CRITICAL</span></code> level.</p>\n<p>See <a class=\"reference internal\" href=\"#dagster.DagsterLogManager.debug\" title=\"dagster.DagsterLogManager.debug\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">debug()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterLogManager.debug\">\n<code class=\"sig-name descname\">debug</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">msg</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/log_manager#DagsterLogManager.debug\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterLogManager.debug\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log at the <code class=\"docutils literal notranslate\"><span class=\"pre\">logging.DEBUG</span></code> level.</p>\n<p>The message will be automatically adorned with contextual information about the name\nof the pipeline, the name of the solid, etc., so it is generally unnecessary to include\nthis type of information in the log message.</p>\n<p>You can optionally additional key-value pairs to an individual log message using the kwargs\nto this method.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>msg</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The message to log.</p></li>\n<li><p><strong>**kwargs</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 Any additional key-value pairs for only this log message.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterLogManager.error\">\n<code class=\"sig-name descname\">error</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">msg</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/log_manager#DagsterLogManager.error\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterLogManager.error\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log at the <code class=\"docutils literal notranslate\"><span class=\"pre\">logging.ERROR</span></code> level.</p>\n<p>See <a class=\"reference internal\" href=\"#dagster.DagsterLogManager.debug\" title=\"dagster.DagsterLogManager.debug\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">debug()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterLogManager.fatal\">\n<code class=\"sig-name descname\">fatal</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">msg</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.DagsterLogManager.fatal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Alias for <a class=\"reference internal\" href=\"#dagster.DagsterLogManager.critical\" title=\"dagster.DagsterLogManager.critical\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">critical()</span></code></a></p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterLogManager.info\">\n<code class=\"sig-name descname\">info</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">msg</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/log_manager#DagsterLogManager.info\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterLogManager.info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log at the <code class=\"docutils literal notranslate\"><span class=\"pre\">logging.INFO</span></code> level.</p>\n<p>See <a class=\"reference internal\" href=\"#dagster.DagsterLogManager.debug\" title=\"dagster.DagsterLogManager.debug\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">debug()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterLogManager.log\">\n<code class=\"sig-name descname\">log</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">level</em>, <em class=\"sig-param\">msg</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/log_manager#DagsterLogManager.log\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterLogManager.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Invoke the underlying loggers for a given integer log level.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>level</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 An integer represeting a Python logging level.</p></li>\n<li><p><strong>orig_message</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The message to log.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterLogManager.warn\">\n<code class=\"sig-name descname\">warn</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">msg</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.DagsterLogManager.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Alias for <a class=\"reference internal\" href=\"#dagster.DagsterLogManager.warning\" title=\"dagster.DagsterLogManager.warning\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">warning()</span></code></a></p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterLogManager.warning\">\n<code class=\"sig-name descname\">warning</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">msg</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/log_manager#DagsterLogManager.warning\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterLogManager.warning\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log at the <code class=\"docutils literal notranslate\"><span class=\"pre\">logging.WARNING</span></code> level.</p>\n<p>See <a class=\"reference internal\" href=\"#dagster.DagsterLogManager.debug\" title=\"dagster.DagsterLogManager.debug\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">debug()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterLogManager.with_tags\">\n<code class=\"sig-name descname\">with_tags</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">**new_tags</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/log_manager#DagsterLogManager.with_tags\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterLogManager.with_tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add new tags in \u201cnew_tags\u201d to the set of tags attached to this log manager instance, and\nreturn a new DagsterLogManager with the merged set of tags.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>tags</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Dictionary of tags</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>a new DagsterLogManager namedtuple with updated tags for the same</dt><dd><p>run ID and loggers.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"executors\">\n<h2>Executors<a class=\"headerlink\" href=\"#executors\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.executor\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">executor</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name=None</em>, <em class=\"sig-param\">config_schema=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor#executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define an executor.</p>\n<p>The decorated function should accept an <a class=\"reference internal\" href=\"#dagster.InitExecutorContext\" title=\"dagster.InitExecutorContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitExecutorContext</span></code></a> and return an instance\nof <a class=\"reference internal\" href=\"#dagster.Executor\" title=\"dagster.Executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Executor</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the executor.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.executor_config</cite>.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.ExecutorDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ExecutorDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">executor_creation_fn=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor#ExecutorDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ExecutorDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the executor.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data\navailable in <cite>init_context.executor_config</cite>.</p></li>\n<li><p><strong>executor_creation_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>]</em>) \u2013 Should accept an <a class=\"reference internal\" href=\"#dagster.InitExecutorContext\" title=\"dagster.InitExecutorContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitExecutorContext</span></code></a>\nand return an instance of <a class=\"reference internal\" href=\"#dagster.Executor\" title=\"dagster.Executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Executor</span></code></a></p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the\nexecutor.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.ExecutorDefinition.configured\">\n<code class=\"sig-name descname\">configured</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_or_config_fn: Any</em>, <em class=\"sig-param\">name: Optional[str] = None</em>, <em class=\"sig-param\">config_schema: Optional[Dict[str</em>, <em class=\"sig-param\">Any]] = None</em>, <em class=\"sig-param\">description: Optional[str] = None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor#ExecutorDefinition.configured\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ExecutorDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the new definition. If not provided, the emitted\ndefinition will inherit the name of the <cite>ExecutorDefinition</cite> upon which this\nfunction is called.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.InitExecutorContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">InitExecutorContext</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/executor/init#InitExecutorContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.InitExecutorContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Executor-specific initialization context.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.InitExecutorContext.pipeline\">\n<code class=\"sig-name descname\">pipeline</code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline to be executed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>IPipeline</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitExecutorContext.mode_def\">\n<code class=\"sig-name descname\">mode_def</code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.mode_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The mode in which the pipeline is to be executed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\">ModeDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitExecutorContext.executor_def\">\n<code class=\"sig-name descname\">executor_def</code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.executor_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the executor currently being\nconstructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.ExecutorDefinition\" title=\"dagster.ExecutorDefinition\">ExecutorDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitExecutorContext.pipeline_run\">\n<code class=\"sig-name descname\">pipeline_run</code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Configuration for this pipeline run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PipelineRun\" title=\"dagster.PipelineRun\">PipelineRun</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitExecutorContext.environment_config\">\n<code class=\"sig-name descname\">environment_config</code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.environment_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed environment configuration for this\npipeline run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>EnvironmentConfig</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitExecutorContext.executor_config\">\n<code class=\"sig-name descname\">executor_config</code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.executor_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config passed to the executor.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitExecutorContext.intermediate_storage_def\">\n<code class=\"sig-name descname\">intermediate_storage_def</code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.intermediate_storage_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The intermediate storage definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"#dagster.IntermediateStorageDefinition\" title=\"dagster.IntermediateStorageDefinition\">IntermediateStorageDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitExecutorContext.instance\">\n<code class=\"sig-name descname\">instance</code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current instance.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\">DagsterInstance</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.Executor\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Executor</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/executor/base#Executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"method\">\n<dt id=\"dagster.Executor.execute\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">execute</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_context</em>, <em class=\"sig-param\">execution_plan</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/executor/base#Executor.execute\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Executor.execute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>For the given context and execution plan, orchestrate a series of sub plan executions in a way that satisfies the whole plan being executed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_context</strong> (<em>SystemPipelineExecutionContext</em>) \u2013 The pipeline execution context.</p></li>\n<li><p><strong>execution_plan</strong> (<em>ExecutionPlan</em>) \u2013 The plan to execute.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A stream of dagster events.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.Executor.retries\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">retries</code><a class=\"headerlink\" href=\"#dagster.Executor.retries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The Retries state / policy for this instance of the Executor. Executors should allow this to be\ncontrolled via configuration if possible.</p>\n<p>Returns: Retries</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"file-manager\">\n<h2>File Manager<a class=\"headerlink\" href=\"#file-manager\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.file_manager.FileManager\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.file_manager.</code><code class=\"sig-name descname\">FileManager</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for all file managers in dagster.</p>\n<p>The file manager is an interface that can be implemented by resources to provide abstract\naccess to a file system such as local disk, S3, or other cloud storage.</p>\n<p>For examples of usage, see the documentation of the concrete file manager implementations.</p>\n<p>In 0.10.x, this abstraction will be deprecated in favor of the <a class=\"reference internal\" href=\"io-managers#dagster.IOManager\" title=\"dagster.IOManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOManager</span></code></a>.</p>\n<dl class=\"method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.copy_handle_to_local_temp\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">copy_handle_to_local_temp</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">file_handle: dagster.core.storage.file_manager.FileHandle</em><span class=\"sig-paren\">)</span> &#x2192; str<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.copy_handle_to_local_temp\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.copy_handle_to_local_temp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Copy a file represented by a file handle to a temp file.</p>\n<p>In an implementation built around an object store such as S3, this method would be expected\nto download the file from S3 to local filesystem in a location assigned by the standard\nlibrary\u2019s <a class=\"reference external\" href=\"https://docs.python.org/3/library/tempfile.html#module-tempfile\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">tempfile</span></code></a> module.</p>\n<p>Temp files returned by this method are <em>not</em> guaranteed to be reusable across solid\nboundaries. For files that must be available across solid boundaries, use the\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.read\" title=\"dagster.core.storage.file_manager.FileManager.read\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">read()</span></code></a>,\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.read_data\" title=\"dagster.core.storage.file_manager.FileManager.read_data\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">read_data()</span></code></a>,\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.write\" title=\"dagster.core.storage.file_manager.FileManager.write\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">write()</span></code></a>, and\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.write_data\" title=\"dagster.core.storage.file_manager.FileManager.write_data\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">write_data()</span></code></a> methods.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>file_handle</strong> (<a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\"><em>FileHandle</em></a>) \u2013 The handle to the file to make available as a local temp file.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Path to the local temp file.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.delete_local_temp\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">delete_local_temp</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.delete_local_temp\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.delete_local_temp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Delete all local temporary files created by previous calls to\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.copy_handle_to_local_temp\" title=\"dagster.core.storage.file_manager.FileManager.copy_handle_to_local_temp\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">copy_handle_to_local_temp()</span></code></a>.</p>\n<p>Should typically only be called by framework implementors.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.read\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">read</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">file_handle: dagster.core.storage.file_manager.FileHandle</em>, <em class=\"sig-param\">mode: str = 'rb'</em><span class=\"sig-paren\">)</span> &#x2192; Union[TextIO, BinaryIO]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.read\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.read\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a file-like stream for the file handle.</p>\n<p>This may incur an expensive network call for file managers backed by object stores\nsuch as S3.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>file_handle</strong> (<a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\"><em>FileHandle</em></a>) \u2013 The file handle to make available as a stream.</p></li>\n<li><p><strong>mode</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The mode in which to open the file. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;rb&quot;</span></code>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A file-like stream.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[TextIO, BinaryIO]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.read_data\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">read_data</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">file_handle: dagster.core.storage.file_manager.FileHandle</em><span class=\"sig-paren\">)</span> &#x2192; bytes<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.read_data\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.read_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the bytes for a given file handle. This may incur an expensive network\ncall for file managers backed by object stores such as s3.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>file_handle</strong> (<a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\"><em>FileHandle</em></a>) \u2013 The file handle for which to return bytes.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Bytes for a given file handle.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"(in Python v3.8)\">bytes</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.write\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">write</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">file_obj: Union[TextIO, BinaryIO], mode: str = 'wb', ext: str = None</em><span class=\"sig-paren\">)</span> &#x2192; dagster.core.storage.file_manager.FileHandle<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.write\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.write\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Write the bytes contained within the given file object into the file manager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>file_obj</strong> (<em>Union</em><em>[</em><em>TextIO</em><em>, </em><em>StringIO</em><em>]</em>) \u2013 A file-like object.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode in which to write the file into the file manager.\nDefault: <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;wb&quot;</span></code>.</p></li>\n<li><p><strong>ext</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 For file managers that support file extensions, the extension with\nwhich to write the file. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A handle to the newly created file.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\">FileHandle</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.write_data\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">write_data</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">data: bytes</em>, <em class=\"sig-param\">ext: str = None</em><span class=\"sig-paren\">)</span> &#x2192; dagster.core.storage.file_manager.FileHandle<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.write_data\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.write_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Write raw bytes into the file manager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"(in Python v3.8)\"><em>bytes</em></a>) \u2013 The bytes to write into the file manager.</p></li>\n<li><p><strong>ext</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 For file managers that support file extensions, the extension with\nwhich to write the file. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A handle to the newly created file.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\">FileHandle</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.local_file_manager\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">local_file_manager</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#local_file_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.local_file_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FileManager that provides abstract access to a local filesystem.</p>\n<p>Implements the <a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> API.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">tempfile</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">local_file_manager</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span><span class=\"p\">,</span> <span class=\"n\">solid</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;file_manager&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">write_files</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">fh_1</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">file_manager</span><span class=\"o\">.</span><span class=\"n\">write_data</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span><span class=\"s2\">&quot;w+&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">:</span>\n        <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">fh_2</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">file_manager</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;w&quot;</span><span class=\"p\">,</span> <span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s2\">&quot;.txt&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">fh_1</span><span class=\"p\">,</span> <span class=\"n\">fh_2</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;file_manager&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">read_files</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">file_handles</span><span class=\"p\">):</span>\n    <span class=\"n\">fh_1</span><span class=\"p\">,</span> <span class=\"n\">fh_2</span> <span class=\"o\">=</span> <span class=\"n\">file_handles</span>\n    <span class=\"k\">assert</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">file_manager</span><span class=\"o\">.</span><span class=\"n\">read_data</span><span class=\"p\">(</span><span class=\"n\">fh_2</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"sa\">b</span><span class=\"s2\">&quot;bar&quot;</span>\n    <span class=\"n\">fd</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">file_manager</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">fh_2</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;foo&quot;</span>\n    <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;file_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">local_file_manager</span><span class=\"p\">})])</span>\n<span class=\"k\">def</span> <span class=\"nf\">files_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">read_files</span><span class=\"p\">(</span><span class=\"n\">write_files</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"intermediate-storage\">\n<h2>Intermediate Storage<a class=\"headerlink\" href=\"#intermediate-storage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.intermediate_storage\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">intermediate_storage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">name=None</em>, <em class=\"sig-param\">is_persistent=True</em>, <em class=\"sig-param\">config_schema=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/intermediate_storage#intermediate_storage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.intermediate_storage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates an intermediate storage definition</p>\n<p>The decorated function will be passed as the <code class=\"docutils literal notranslate\"><span class=\"pre\">intermediate_storage_creation_fn</span></code> to a\n<a class=\"reference internal\" href=\"#dagster.IntermediateStorageDefinition\" title=\"dagster.IntermediateStorageDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntermediateStorageDefinition</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the intermediate storage.</p></li>\n<li><p><strong>is_persistent</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether the storage is persistent in a way that can cross process/node\nboundaries. Re-execution with, for example, the multiprocess executor, or with\ndagster-airflow, requires a persistent storage mode.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The resources that this storage needs at runtime to function.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.intermediate_storage_config</cite>.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.IntermediateStorageDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">IntermediateStorageDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">is_persistent</em>, <em class=\"sig-param\">required_resource_keys</em>, <em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">intermediate_storage_creation_fn=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/intermediate_storage#IntermediateStorageDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.IntermediateStorageDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines intermediate data storage behaviors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the storage mode.</p></li>\n<li><p><strong>is_persistent</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether the storage is persistent in a way that can cross process/node\nboundaries. Re-execution with, for example, the multiprocess executor, or with\ndagster-airflow, requires a persistent storage mode.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The resources that this storage needs at runtime to function.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the storage\u2019s configuration schema.\nConfiguration data passed in this schema will be made available to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">intermediate_storage_creation_fn</span></code> under <code class=\"docutils literal notranslate\"><span class=\"pre\">init_context.intermediate_storage_config</span></code>.</p></li>\n<li><p><strong>intermediate_storage_creation_fn</strong> \u2013 (Callable[[InitIntermediateStorageContext], IntermediateStorage])\nCalled to construct the storage. This function should consume the init context and emit\na <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntermediateStorage</span></code>.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.InitIntermediateStorageContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">InitIntermediateStorageContext</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/init#InitIntermediateStorageContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Intermediate storage-specific initialization context.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.InitIntermediateStorageContext.pipeline_def\">\n<code class=\"sig-name descname\">pipeline_def</code><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext.pipeline_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the pipeline in context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\">PipelineDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitIntermediateStorageContext.mode_def\">\n<code class=\"sig-name descname\">mode_def</code><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext.mode_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the mode in context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\">ModeDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitIntermediateStorageContext.intermediate_storage_def\">\n<code class=\"sig-name descname\">intermediate_storage_def</code><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext.intermediate_storage_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the intermediate storage to be\nconstructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.IntermediateStorageDefinition\" title=\"dagster.IntermediateStorageDefinition\">IntermediateStorageDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitIntermediateStorageContext.pipeline_run\">\n<code class=\"sig-name descname\">pipeline_run</code><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline run in context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PipelineRun\" title=\"dagster.PipelineRun\">PipelineRun</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitIntermediateStorageContext.instance\">\n<code class=\"sig-name descname\">instance</code><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The instance.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\">DagsterInstance</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitIntermediateStorageContext.environment_config\">\n<code class=\"sig-name descname\">environment_config</code><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext.environment_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The environment config.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>EnvironmentConfig</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitIntermediateStorageContext.type_storage_plugin_registry\">\n<code class=\"sig-name descname\">type_storage_plugin_registry</code><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext.type_storage_plugin_registry\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Registry containing custom type\nstorage plugins.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>TypeStoragePluginRegistry</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitIntermediateStorageContext.resources\">\n<code class=\"sig-name descname\">resources</code><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resources available in context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitIntermediateStorageContext.intermediate_storage_config\">\n<code class=\"sig-name descname\">intermediate_storage_config</code><a class=\"headerlink\" href=\"#dagster.InitIntermediateStorageContext.intermediate_storage_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The intermediate storage-specific configuration data\nprovided by the environment config. The schema for this data is defined by the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">config_schema</span></code> argument to <a class=\"reference internal\" href=\"#dagster.IntermediateStorageDefinition\" title=\"dagster.IntermediateStorageDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntermediateStorageDefinition</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"instance\">\n<h2>Instance<a class=\"headerlink\" href=\"#instance\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.DagsterInstance\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterInstance</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">instance_type</em>, <em class=\"sig-param\">local_artifact_storage</em>, <em class=\"sig-param\">run_storage</em>, <em class=\"sig-param\">event_storage</em>, <em class=\"sig-param\">compute_log_manager</em>, <em class=\"sig-param\">schedule_storage=None</em>, <em class=\"sig-param\">scheduler=None</em>, <em class=\"sig-param\">run_coordinator=None</em>, <em class=\"sig-param\">run_launcher=None</em>, <em class=\"sig-param\">settings=None</em>, <em class=\"sig-param\">skip_validation_checks=False</em>, <em class=\"sig-param\">ref=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core abstraction for managing Dagster\u2019s access to storage and other resources.</p>\n<p>Use DagsterInstance.get() to grab the current DagsterInstance which will load based on\nthe values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code> if set, otherwise fallback\nto using an ephemeral in-memory set of components.</p>\n<p>Configuration of this class should be done by setting values in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME/dagster.yaml</span></code>.\nFor example, to use Postgres for run and event log storage, you can write a <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>\nsuch as the following:</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>instance_type</strong> (<em>InstanceType</em>) \u2013 Indicates whether the instance is ephemeral or persistent.\nUsers should not attempt to set this value directly or in their <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> files.</p></li>\n<li><p><strong>local_artifact_storage</strong> (<a class=\"reference internal\" href=\"#dagster.core.storage.root.LocalArtifactStorage\" title=\"dagster.core.storage.root.LocalArtifactStorage\"><em>LocalArtifactStorage</em></a>) \u2013 The local artifact storage is used to\nconfigure storage for any artifacts that require a local disk, such as schedules, or\nwhen using the filesystem system storage to manage files and intermediates. By default,\nthis will be a <a class=\"reference internal\" href=\"#dagster.core.storage.root.LocalArtifactStorage\" title=\"dagster.core.storage.root.LocalArtifactStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.storage.root.LocalArtifactStorage</span></code></a>. Configurable\nin <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> using the <a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a>\nmachinery.</p></li>\n<li><p><strong>run_storage</strong> (<a class=\"reference internal\" href=\"#dagster.core.storage.runs.RunStorage\" title=\"dagster.core.storage.runs.RunStorage\"><em>RunStorage</em></a>) \u2013 The run storage is used to store metadata about ongoing and past\npipeline runs. By default, this will be a\n<a class=\"reference internal\" href=\"#dagster.core.storage.runs.SqliteRunStorage\" title=\"dagster.core.storage.runs.SqliteRunStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.storage.runs.SqliteRunStorage</span></code></a>. Configurable in <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>\nusing the <a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a> machinery.</p></li>\n<li><p><strong>event_storage</strong> (<a class=\"reference internal\" href=\"#dagster.core.storage.event_log.EventLogStorage\" title=\"dagster.core.storage.event_log.EventLogStorage\"><em>EventLogStorage</em></a>) \u2013 Used to store the structured event logs generated by\npipeline runs. By default, this will be a\n<a class=\"reference internal\" href=\"#dagster.core.storage.event_log.SqliteEventLogStorage\" title=\"dagster.core.storage.event_log.SqliteEventLogStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.storage.event_log.SqliteEventLogStorage</span></code></a>. Configurable in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> using the <a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a> machinery.</p></li>\n<li><p><strong>compute_log_manager</strong> (<a class=\"reference internal\" href=\"#dagster.core.storage.compute_log_manager.ComputeLogManager\" title=\"dagster.core.storage.compute_log_manager.ComputeLogManager\"><em>ComputeLogManager</em></a>) \u2013 The compute log manager handles stdout and stderr\nlogging for solid compute functions. By default, this will be a\n<a class=\"reference internal\" href=\"#dagster.core.storage.local_compute_log_manager.LocalComputeLogManager\" title=\"dagster.core.storage.local_compute_log_manager.LocalComputeLogManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.storage.local_compute_log_manager.LocalComputeLogManager</span></code></a>.\nConfigurable in <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> using the\n<a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a> machinery.</p></li>\n<li><p><strong>run_coordinator</strong> (<em>RunCoordinator</em>) \u2013 A runs coordinator may be used to manage the execution\nof pipeline runs.</p></li>\n<li><p><strong>run_launcher</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.core.launcher.RunLauncher\" title=\"dagster.core.launcher.RunLauncher\"><em>RunLauncher</em></a><em>]</em>) \u2013 Optionally, a run launcher may be used to enable\na Dagster instance to launch pipeline runs, e.g. on a remote Kubernetes cluster, in\naddition to running them locally.</p></li>\n<li><p><strong>settings</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>]</em>) \u2013 Specifies certain per-instance settings,\nsuch as feature flags. These are set in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> under a set of whitelisted\nkeys.</p></li>\n<li><p><strong>ref</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.core.instance.InstanceRef\" title=\"dagster.core.instance.InstanceRef\"><em>InstanceRef</em></a><em>]</em>) \u2013 Used by internal machinery to pass instances across process\nboundaries.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.DagsterInstance.add_daemon_heartbeat\">\n<code class=\"sig-name descname\">add_daemon_heartbeat</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">daemon_heartbeat: DaemonHeartbeat</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.add_daemon_heartbeat\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.add_daemon_heartbeat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Called on a regular interval by the daemon</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterInstance.get_addresses_for_step_output_versions\">\n<code class=\"sig-name descname\">get_addresses_for_step_output_versions</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">step_output_versions</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.get_addresses_for_step_output_versions\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.get_addresses_for_step_output_versions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>For each given step output, finds whether an output exists with the given\nversion, and returns its address if it does.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>step_output_versions</strong> (<em>Dict</em><em>[</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>StepOutputHandle</em><em>)</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (pipeline name, step output handle) -&gt; version.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>(pipeline name, step output handle) -&gt; address.</dt><dd><p>For each step output, an address if there is one and None otherwise.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[(<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, StepOutputHandle), <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterInstance.get_daemon_heartbeats\">\n<code class=\"sig-name descname\">get_daemon_heartbeats</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span> &#x2192; Dict[str, DaemonHeartbeat]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.get_daemon_heartbeats\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.get_daemon_heartbeats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Latest heartbeats of all daemon types</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterInstance.launch_run\">\n<code class=\"sig-name descname\">launch_run</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">run_id</em>, <em class=\"sig-param\">external_pipeline</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.launch_run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.launch_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Launch a pipeline run.</p>\n<p>This method is typically called using <cite>instance.submit_run</cite> rather than being invoked\ndirectly. This method delegates to the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunLauncher</span></code>, if any, configured on the instance,\nand will call its implementation of <code class=\"docutils literal notranslate\"><span class=\"pre\">RunLauncher.launch_run()</span></code> to begin the execution of\nthe specified run. Runs should be created in the instance (e.g., by calling\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DagsterInstance.create_run()</span></code>) <em>before</em> this method is called, and should be in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">PipelineRunStatus.NOT_STARTED</span></code> state.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the run the launch.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterInstance.report_engine_event\">\n<code class=\"sig-name descname\">report_engine_event</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">message</em>, <em class=\"sig-param\">pipeline_run</em>, <em class=\"sig-param\">engine_event_data=None</em>, <em class=\"sig-param\">cls=None</em>, <em class=\"sig-param\">step_key=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.report_engine_event\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.report_engine_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Report a EngineEvent that occurred outside of a pipeline execution context.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.DagsterInstance.submit_run\">\n<code class=\"sig-name descname\">submit_run</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">run_id</em>, <em class=\"sig-param\">external_pipeline</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.submit_run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.submit_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Submit a pipeline run to the coordinator.</p>\n<p>This method delegates to the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunCoordinator</span></code>, configured on the instance, and will\ncall its implementation of <code class=\"docutils literal notranslate\"><span class=\"pre\">RunCoordinator.submit_run()</span></code> to send the run to the\ncoordinator for execution. Runs should be created in the instance (e.g., by calling\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DagsterInstance.create_run()</span></code>) <em>before</em> this method is called, and\nshould be in the <code class=\"docutils literal notranslate\"><span class=\"pre\">PipelineRunStatus.NOT_STARTED</span></code> state. They also must have a non-null\nExternalPipelineOrigin.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the run.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.instance.InstanceRef\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.instance.</code><code class=\"sig-name descname\">InstanceRef</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance/ref#InstanceRef\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.instance.InstanceRef\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Serializable representation of a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInstance</span></code>.</p>\n<p>Users should not instantiate this class directly.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.serdes.ConfigurableClass\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.serdes.</code><code class=\"sig-name descname\">ConfigurableClass</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/serdes/config_class#ConfigurableClass\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClass\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract mixin for classes that can be loaded from config.</p>\n<p>This supports a powerful plugin pattern which avoids both a) a lengthy, hard-to-synchronize list\nof conditional imports / optional extras_requires in dagster core and b) a magic directory or\nfile in which third parties can place plugin packages. Instead, the intention is to make, e.g.,\nrun storage, pluggable with a config chunk like:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_storage</span><span class=\"p\">:</span>\n    <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">very_cool_package.run_storage</span>\n    <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">SplendidRunStorage</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n        <span class=\"nt\">magic_word</span><span class=\"p\">:</span> <span class=\"s\">&quot;quux&quot;</span>\n</pre></div>\n</div>\n<p>This same pattern should eventually be viable for other system components, e.g. engines.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code> mixin provides the necessary hooks for classes to be instantiated from\nan instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">ConfigurableClassData</span></code>.</p>\n<p>Pieces of the Dagster system which we wish to make pluggable in this way should consume a config\ntype such as:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span><span class=\"s1\">&#39;module&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s1\">&#39;class&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Permissive</span><span class=\"p\">())}</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"dagster.serdes.ConfigurableClass.config_type\">\n<em class=\"property\">abstract classmethod </em><code class=\"sig-name descname\">config_type</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/serdes/config_class#ConfigurableClass.config_type\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClass.config_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>dagster.ConfigType: The config type against which to validate a config yaml fragment\nserialized in an instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">ConfigurableClassData</span></code>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.serdes.ConfigurableClass.from_config_value\">\n<em class=\"property\">abstract static </em><code class=\"sig-name descname\">from_config_value</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">inst_data</em>, <em class=\"sig-param\">config_value</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/serdes/config_class#ConfigurableClass.from_config_value\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClass.from_config_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>New up an instance of the ConfigurableClass from a validated config value.</p>\n<p>Called by ConfigurableClassData.rehydrate.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>config_value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a>) \u2013 The validated config value to use. Typically this should be the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> attribute of a\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EvaluateValueResult</span></code>.</p>\n</dd>\n</dl>\n<p>A common pattern is for the implementation to align the config_value with the signature\nof the ConfigurableClass\u2019s constructor:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@staticmethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">from_config_value</span><span class=\"p\">(</span><span class=\"n\">inst_data</span><span class=\"p\">,</span> <span class=\"n\">config_value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">MyConfigurableClass</span><span class=\"p\">(</span><span class=\"n\">inst_data</span><span class=\"o\">=</span><span class=\"n\">inst_data</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config_value</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.serdes.ConfigurableClass.inst_data\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">inst_data</code><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClass.inst_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subclass must be able to return the inst_data as a property if it has been constructed\nthrough the from_config_value code path.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.serdes.ConfigurableClassData\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.serdes.</code><code class=\"sig-name descname\">ConfigurableClassData</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/serdes/config_class#ConfigurableClassData\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClassData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Serializable tuple describing where to find a class and the config fragment that should\nbe used to instantiate it.</p>\n<p>Users should not instantiate this class directly.</p>\n<p>Classes intended to be serialized in this way should implement the\n<a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.serdes.ConfigurableClass</span></code></a> mixin.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.root.LocalArtifactStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.root.</code><code class=\"sig-name descname\">LocalArtifactStorage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">base_dir</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root#LocalArtifactStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.root.LocalArtifactStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"method\">\n<dt id=\"dagster.core.storage.root.LocalArtifactStorage.config_type\">\n<em class=\"property\">classmethod </em><code class=\"sig-name descname\">config_type</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root#LocalArtifactStorage.config_type\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.root.LocalArtifactStorage.config_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>dagster.ConfigType: The config type against which to validate a config yaml fragment\nserialized in an instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">ConfigurableClassData</span></code>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.storage.root.LocalArtifactStorage.from_config_value\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">from_config_value</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">inst_data</em>, <em class=\"sig-param\">config_value</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root#LocalArtifactStorage.from_config_value\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.root.LocalArtifactStorage.from_config_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>New up an instance of the ConfigurableClass from a validated config value.</p>\n<p>Called by ConfigurableClassData.rehydrate.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>config_value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a>) \u2013 The validated config value to use. Typically this should be the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> attribute of a\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EvaluateValueResult</span></code>.</p>\n</dd>\n</dl>\n<p>A common pattern is for the implementation to align the config_value with the signature\nof the ConfigurableClass\u2019s constructor:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@staticmethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">from_config_value</span><span class=\"p\">(</span><span class=\"n\">inst_data</span><span class=\"p\">,</span> <span class=\"n\">config_value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">MyConfigurableClass</span><span class=\"p\">(</span><span class=\"n\">inst_data</span><span class=\"o\">=</span><span class=\"n\">inst_data</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config_value</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.core.storage.root.LocalArtifactStorage.inst_data\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">inst_data</code><a class=\"headerlink\" href=\"#dagster.core.storage.root.LocalArtifactStorage.inst_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subclass must be able to return the inst_data as a property if it has been constructed\nthrough the from_config_value code path.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"run-storage\">\n<h2>Run storage<a class=\"headerlink\" href=\"#run-storage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.PipelineRun\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">PipelineRun</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/pipeline_run#PipelineRun\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PipelineRun\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Serializable internal representation of a pipeline run, as stored in a\n<a class=\"reference internal\" href=\"#dagster.core.storage.runs.RunStorage\" title=\"dagster.core.storage.runs.RunStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunStorage</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.runs.RunStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.runs.</code><code class=\"sig-name descname\">RunStorage</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/runs/base#RunStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.runs.RunStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract base class for storing pipeline run history.</p>\n<p>Note that run storages using SQL databases as backing stores should implement\n<a class=\"reference internal\" href=\"#dagster.core.storage.runs.SqlRunStorage\" title=\"dagster.core.storage.runs.SqlRunStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SqlRunStorage</span></code></a>.</p>\n<p>Users should not directly instantiate concrete subclasses of this class; they are instantiated\nby internal machinery when <code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of concrete subclasses of this class\nshould be done by setting values in that file.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.runs.SqlRunStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.runs.</code><code class=\"sig-name descname\">SqlRunStorage</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/runs/sql_run_storage#SqlRunStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.runs.SqlRunStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for SQL based run storages</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.runs.SqliteRunStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.runs.</code><code class=\"sig-name descname\">SqliteRunStorage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">conn_string</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/runs/sqlite/sqlite_run_storage#SqliteRunStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.runs.SqliteRunStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>SQLite-backed run storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>This is the default run storage when none is specified in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>.</p>\n<p>To explicitly specify SQLite for run storage, you can add a block such as the following to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_storage</span><span class=\"p\">:</span>\n  <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster.core.storage.runs</span>\n  <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">SqliteRunStorage</span>\n  <span class=\"nt\">config</span><span class=\"p\">:</span>\n    <span class=\"nt\">base_dir</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">/path/to/dir</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">base_dir</span></code> param tells the run storage where on disk to store the database.</p>\n</dd></dl>\n\n<p>See also: <a class=\"reference internal\" href=\"libraries/dagster_postgres#dagster_postgres.PostgresRunStorage\" title=\"dagster_postgres.PostgresRunStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_postgres.PostgresRunStorage</span></code></a>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"event-log-storage\">\n<h2>Event log storage<a class=\"headerlink\" href=\"#event-log-storage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.event_log.EventLogStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.event_log.</code><code class=\"sig-name descname\">EventLogStorage</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/base#EventLogStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.EventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract base class for storing structured event logs from pipeline runs.</p>\n<p>Note that event log storages using SQL databases as backing stores should implement\n<a class=\"reference internal\" href=\"#dagster.core.storage.event_log.SqlEventLogStorage\" title=\"dagster.core.storage.event_log.SqlEventLogStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SqlEventLogStorage</span></code></a>.</p>\n<p>Users should not directly instantiate concrete subclasses of this class; they are instantiated\nby internal machinery when <code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of concrete subclasses of this class\nshould be done by setting values in that file.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.event_log.SqlEventLogStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.event_log.</code><code class=\"sig-name descname\">SqlEventLogStorage</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/sql_event_log#SqlEventLogStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.SqlEventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for SQL backed event log storages.</p>\n<p>Distinguishes between run-based connections and index connections in order to support run-level\nsharding, while maintaining the ability to do cross-run queries</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.event_log.SqliteEventLogStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.event_log.</code><code class=\"sig-name descname\">SqliteEventLogStorage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">base_dir</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/sqlite/sqlite_event_log#SqliteEventLogStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.SqliteEventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>SQLite-backed event log storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>This is the default event log storage when none is specified in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>.</p>\n<p>To explicitly specify SQLite for event log storage, you can add a block such as the following\nto your <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">event_log_storage</span><span class=\"p\">:</span>\n  <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster.core.storage.event_log</span>\n  <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">SqliteEventLogStorage</span>\n  <span class=\"nt\">config</span><span class=\"p\">:</span>\n    <span class=\"nt\">base_dir</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">/path/to/dir</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">base_dir</span></code> param tells the event log storage where on disk to store the databases. To\nimprove concurrent performance, event logs are stored in a separate SQLite database for each\nrun.</p>\n</dd></dl>\n\n<p>See also: <a class=\"reference internal\" href=\"libraries/dagster_postgres#dagster_postgres.PostgresEventLogStorage\" title=\"dagster_postgres.PostgresEventLogStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_postgres.PostgresEventLogStorage</span></code></a>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"compute-log-manager\">\n<h2>Compute log manager<a class=\"headerlink\" href=\"#compute-log-manager\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.compute_log_manager.ComputeLogManager\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.compute_log_manager.</code><code class=\"sig-name descname\">ComputeLogManager</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/compute_log_manager#ComputeLogManager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.compute_log_manager.ComputeLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract base class for storing unstructured compute logs (stdout/stderr) from the compute\nsteps of pipeline solids.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.local_compute_log_manager.LocalComputeLogManager\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.local_compute_log_manager.</code><code class=\"sig-name descname\">LocalComputeLogManager</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">base_dir</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/local_compute_log_manager#LocalComputeLogManager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.local_compute_log_manager.LocalComputeLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Stores copies of stdout &amp; stderr for each compute step locally on disk.</p>\n</dd></dl>\n\n<p>See also: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_aws.S3ComputeLogManager</span></code>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"memoizable-io-manager-experimental\">\n<h2>Memoizable IO Manager (Experimental)<a class=\"headerlink\" href=\"#memoizable-io-manager-experimental\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.memoizable_io_manager.MemoizableIOManager\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.memoizable_io_manager.</code><code class=\"sig-name descname\">MemoizableIOManager</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/memoizable_io_manager#MemoizableIOManager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.memoizable_io_manager.MemoizableIOManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for IO manager enabled to work with memoized execution. Users should implement\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">load_input</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">handle_output</span></code> methods described in the <code class=\"docutils literal notranslate\"><span class=\"pre\">IOManager</span></code> API, and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">has_output</span></code> method, which returns a boolean representing whether a data object can be found.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.core.storage.memoizable_io_manager.versioned_filesystem_io_manager\">\n<code class=\"sig-prename descclassname\">dagster.core.storage.memoizable_io_manager.</code><code class=\"sig-name descname\">versioned_filesystem_io_manager</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/memoizable_io_manager#versioned_filesystem_io_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.memoizable_io_manager.versioned_filesystem_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Filesystem IO manager that utilizes versioning of stored objects.</p>\n<p>It requires users to specify a base directory where all the step outputs will be stored in. It\nserializes and deserializes output values (assets) using pickling and automatically constructs\nthe filepaths for the assets using the provided directory, and the version for a provided step\noutput.</p>\n</dd></dl>\n\n<p>See also: <a class=\"reference internal\" href=\"io-managers#dagster.IOManager\" title=\"dagster.IOManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.IOManager</span></code></a>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"run-launcher\">\n<h2>Run launcher<a class=\"headerlink\" href=\"#run-launcher\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.core.launcher.RunLauncher\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.launcher.</code><code class=\"sig-name descname\">RunLauncher</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/launcher/base#RunLauncher\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.launcher.RunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.launcher.DefaultRunLauncher\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.launcher.</code><code class=\"sig-name descname\">DefaultRunLauncher</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/launcher/default_run_launcher#DefaultRunLauncher\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.launcher.DefaultRunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Launches runs against running GRPC servers.</p>\n</dd></dl>\n\n<p>See also: <a class=\"reference internal\" href=\"libraries/dagster_k8s#dagster_k8s.K8sRunLauncher\" title=\"dagster_k8s.K8sRunLauncher\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_k8s.K8sRunLauncher</span></code></a>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"run-coordinator\">\n<h2>Run coordinator<a class=\"headerlink\" href=\"#run-coordinator\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.core.run_coordinator.DefaultRunCoordinator\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.run_coordinator.</code><code class=\"sig-name descname\">DefaultRunCoordinator</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/run_coordinator/default_run_coordinator#DefaultRunCoordinator\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.run_coordinator.DefaultRunCoordinator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Immediately send runs to the run launcher.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.run_coordinator.QueuedRunCoordinator\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.run_coordinator.</code><code class=\"sig-name descname\">QueuedRunCoordinator</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">max_concurrent_runs=None</em>, <em class=\"sig-param\">tag_concurrency_limits=None</em>, <em class=\"sig-param\">dequeue_interval_seconds=None</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/run_coordinator/queued_run_coordinator#QueuedRunCoordinator\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.run_coordinator.QueuedRunCoordinator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends runs to the dequeuer process via the run storage. Requires the external process to be\nalive for runs to be launched.</p>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"scheduling\">\n<h2>Scheduling<a class=\"headerlink\" href=\"#scheduling\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.core.scheduler.Scheduler\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.scheduler.</code><code class=\"sig-name descname\">Scheduler</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/scheduler/scheduler#Scheduler\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.scheduler.Scheduler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract base class for a scheduler. This component is responsible for interfacing with\nan external system such as cron to ensure scheduled repeated execution according.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.scheduler.DagsterDaemonScheduler\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.scheduler.</code><code class=\"sig-name descname\">DagsterDaemonScheduler</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">max_catchup_runs=5</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/scheduler/scheduler#DagsterDaemonScheduler\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.scheduler.DagsterDaemonScheduler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Default scheduler implementation that submits runs from the <cite>dagster-daemon</cite>\nlong-lived process. Periodically checks each running schedule for execution times that don\u2019t\nhave runs yet and launches them.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>max_catchup_runs</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 <p>For partitioned schedules, controls the maximum number of past\npartitions for each schedule that will be considered when looking for missing\nruns (defaults to 5). Generally this parameter will only come into play if the scheduler\nfalls behind or launches after experiencing downtime. This parameter will not be checked for\nschedules without partition sets (for example, schedules created using the &#64;schedule\ndecorator) - only the most recent execution time will be considered for those schedules.</p>\n<p>Note that no matter what this value is, the scheduler will never launch a run from a time\nbefore the schedule was turned on (even if the start_date on the schedule is earlier) - if\nyou want to launch runs for earlier partitions, launch a backfill.</p>\n</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_cron.cron_scheduler.SystemCronScheduler\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_cron.cron_scheduler.</code><code class=\"sig-name descname\">SystemCronScheduler</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_cron/cron_scheduler#SystemCronScheduler\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_cron.cron_scheduler.SystemCronScheduler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Scheduler implementation that uses the local systems cron. Only works on unix systems that\nhave cron.</p>\n<p>Enable this scheduler by adding it to your <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.schedules.ScheduleStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.schedules.</code><code class=\"sig-name descname\">ScheduleStorage</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/schedules/base#ScheduleStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.schedules.ScheduleStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract class for managing persistance of scheduler artifacts</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.schedules.SqlScheduleStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.schedules.</code><code class=\"sig-name descname\">SqlScheduleStorage</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/schedules/sql_schedule_storage#SqlScheduleStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.schedules.SqlScheduleStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for SQL backed schedule storage</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.storage.schedules.SqliteScheduleStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.storage.schedules.</code><code class=\"sig-name descname\">SqliteScheduleStorage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">conn_string</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/schedules/sqlite/sqlite_schedule_storage#SqliteScheduleStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.storage.schedules.SqliteScheduleStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Local SQLite backed schedule storage</p>\n</dd></dl>\n\n<p>See also: <a class=\"reference internal\" href=\"libraries/dagster_postgres#dagster_postgres.PostgresScheduleStorage\" title=\"dagster_postgres.PostgresScheduleStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_postgres.PostgresScheduleStorage</span></code></a>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"exception-handling\">\n<h2>Exception handling<a class=\"headerlink\" href=\"#exception-handling\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.core.errors.user_code_error_boundary\">\n<code class=\"sig-prename descclassname\">dagster.core.errors.</code><code class=\"sig-name descname\">user_code_error_boundary</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">error_cls</em>, <em class=\"sig-param\">msg_fn</em>, <em class=\"sig-param\">control_flow_exceptions=None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#user_code_error_boundary\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.errors.user_code_error_boundary\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps the execution of user-space code in an error boundary. This places a uniform\npolicy around an user code invoked by the framework. This ensures that all user\nerrors are wrapped in an exception derived from DagsterUserCodeExecutionError,\nand that the original stack trace of the user error is preserved, so that it\ncan be reported without confusing framework code in the stack trace, if a\ntool author wishes to do so.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">with</span> <span class=\"n\">user_code_error_boundary</span><span class=\"p\">(</span>\n    <span class=\"c1\"># Pass a class that inherits from DagsterUserCodeExecutionError</span>\n    <span class=\"n\">DagsterExecutionStepExecutionError</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Pass a function that produces a message</span>\n    <span class=\"s2\">&quot;Error occurred during step execution&quot;</span>\n<span class=\"p\">):</span>\n    <span class=\"n\">call_user_provided_function</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"architecture\">\n<h2>Architecture<a class=\"headerlink\" href=\"#architecture\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Details of internal architecture captured at a specific point in time. These are expected to only be\nuseful to people working on dagster core or complex libraries/integrations.</p>\n<div class=\"section\" id=\"pipeline-execution-flow-march-2020-0-7-6\">\n<h3>Pipeline Execution Flow - March 2020 (0.7.6)<a class=\"headerlink\" href=\"#pipeline-execution-flow-march-2020-0-7-6\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<a class=\"reference internal image-reference\" href=\"/assets/images/apidocs/internal/execution_flow.png\"><img alt=\"/assets/images/apidocs/internal/execution_flow.png\" class=\"align-center\" src=\"/assets/images/apidocs/internal/execution_flow.png\" /></a>\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/internals", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../loggers/", "title": "Loggers"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../hooks/", "title": "Hooks"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/loggers", "Loggers", "N", "next"], ["sections/api/apidocs/hooks", "Hooks", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/internals.rst.txt", "title": "Internals", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Internals</a><ul>\n<li><a class=\"reference internal\" href=\"#logging\">Logging</a></li>\n<li><a class=\"reference internal\" href=\"#executors\">Executors</a></li>\n<li><a class=\"reference internal\" href=\"#file-manager\">File Manager</a></li>\n<li><a class=\"reference internal\" href=\"#intermediate-storage\">Intermediate Storage</a></li>\n<li><a class=\"reference internal\" href=\"#instance\">Instance</a></li>\n<li><a class=\"reference internal\" href=\"#run-storage\">Run storage</a></li>\n<li><a class=\"reference internal\" href=\"#event-log-storage\">Event log storage</a></li>\n<li><a class=\"reference internal\" href=\"#compute-log-manager\">Compute log manager</a></li>\n<li><a class=\"reference internal\" href=\"#memoizable-io-manager-experimental\">Memoizable IO Manager (Experimental)</a></li>\n<li><a class=\"reference internal\" href=\"#run-launcher\">Run launcher</a></li>\n<li><a class=\"reference internal\" href=\"#run-coordinator\">Run coordinator</a></li>\n<li><a class=\"reference internal\" href=\"#scheduling\">Scheduling</a></li>\n<li><a class=\"reference internal\" href=\"#exception-handling\">Exception handling</a></li>\n<li><a class=\"reference internal\" href=\"#architecture\">Architecture</a><ul>\n<li><a class=\"reference internal\" href=\"#pipeline-execution-flow-march-2020-0-7-6\">Pipeline Execution Flow - March 2020 (0.7.6)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "io-managers": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"io-managers\">\n<h1>IO Managers<a class=\"headerlink\" href=\"#io-managers\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"id1\">\n<h2>IO Managers<a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>IO managers are user-provided objects that store solid outputs and load them as inputs to downstream\nsolids.</p>\n<dl class=\"function\">\n<dt id=\"dagster.io_manager\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">io_manager</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">output_config_schema=None</em>, <em class=\"sig-param\">input_config_schema=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">version=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#io_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define an IO manager.</p>\n<p>IOManagers are used to store solid outputs and load them as inputs to downstream solids.</p>\n<p>The decorated function should accept an <a class=\"reference internal\" href=\"modes-resources#dagster.InitResourceContext\" title=\"dagster.InitResourceContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitResourceContext</span></code></a> and return an\n<a class=\"reference internal\" href=\"#dagster.IOManager\" title=\"dagster.IOManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOManager</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the resource config. Configuration\ndata available in <cite>init_context.resource_config</cite>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the resource.</p></li>\n<li><p><strong>output_config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for per-output config.</p></li>\n<li><p><strong>input_config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for per-input config.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the object\nmanager.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of a resource function. Two wrapped\nresource functions should only have the same version if they produce the same resource\ndefinition when provided with the same inputs.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyIOManager</span><span class=\"p\">(</span><span class=\"n\">IOManager</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">handle_output</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"n\">write_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;some/path&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">load_input</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;some/path&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@io_manager</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_io_manager</span><span class=\"p\">(</span><span class=\"n\">init_context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">MyIOManager</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">io_manager_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_io_manager_key&quot;</span><span class=\"p\">)])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_solid</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">do_stuff</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;my_io_manager_key&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_io_manager</span><span class=\"p\">})]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">my_solid</span><span class=\"p\">()</span>\n\n<span class=\"n\">execute_pipeline</span><span class=\"p\">(</span><span class=\"n\">my_pipeline</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.IOManager\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">IOManager</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.IOManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for user-provided IO managers.</p>\n<p>IOManagers are used to store solid outputs and load them as inputs to downstream solids.</p>\n<p>Extend this class to handle how objects are loaded and stored. Users should implement\n<code class=\"docutils literal notranslate\"><span class=\"pre\">handle_output</span></code> to store an object and <code class=\"docutils literal notranslate\"><span class=\"pre\">load_input</span></code> to retrieve an object.</p>\n<dl class=\"method\">\n<dt id=\"dagster.IOManager.handle_output\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">handle_output</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">context</em>, <em class=\"sig-param\">obj</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager.handle_output\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.IOManager.handle_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>User-defined method that stores an output of a solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.OutputContext\" title=\"dagster.OutputContext\"><em>OutputContext</em></a>) \u2013 The context of the step output that produces this object.</p></li>\n<li><p><strong>obj</strong> (<em>Any</em>) \u2013 The object, returned by the solid, to be stored.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.IOManager.load_input\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">load_input</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">context</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager.load_input\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.IOManager.load_input\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>User-defined method that loads an input to a solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.InputContext\" title=\"dagster.InputContext\"><em>InputContext</em></a>) \u2013 The input context, which describes the input that\u2019s being loaded\nand the upstream output that\u2019s being loaded from.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The data object.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.IOManagerDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">IOManagerDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">resource_fn=None</em>, <em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">version=None</em>, <em class=\"sig-param\">input_config_schema=None</em>, <em class=\"sig-param\">output_config_schema=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManagerDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.IOManagerDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Definition of an IO manager resource.</p>\n<p>IOManagers are used to store solid outputs and load them as inputs to downstream solids.</p>\n<p>An IOManagerDefinition is a <a class=\"reference internal\" href=\"modes-resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a> whose <cite>resource_fn</cite> returns an\n<a class=\"reference internal\" href=\"#dagster.IOManager\" title=\"dagster.IOManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOManager</span></code></a>.</p>\n<p>The easiest way to create an IOManagerDefnition is with the <a class=\"reference internal\" href=\"#dagster.io_manager\" title=\"dagster.io_manager\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;io_manager</span></code></a>\ndecorator.</p>\n<dl class=\"method\">\n<dt id=\"dagster.IOManagerDefinition.input_config_schema\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">input_config_schema</code><a class=\"headerlink\" href=\"#dagster.IOManagerDefinition.input_config_schema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The schema for per-input configuration for inputs that are managed by this\ninput manager</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.IOManagerDefinition.output_config_schema\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">output_config_schema</code><a class=\"headerlink\" href=\"#dagster.IOManagerDefinition.output_config_schema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The schema for per-output configuration for outputs that are managed by this\nmanager</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"input-and-output-contexts\">\n<h2>Input and Output Contexts<a class=\"headerlink\" href=\"#input-and-output-contexts\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.InputContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">InputContext</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/system#InputContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.InputContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to the load_input method of <a class=\"reference internal\" href=\"#dagster.RootInputManager\" title=\"dagster.RootInputManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RootInputManager</span></code></a>.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.name\">\n<code class=\"sig-name descname\">name</code><a class=\"headerlink\" href=\"#dagster.InputContext.name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the input that we\u2019re loading.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.pipeline_name\">\n<code class=\"sig-name descname\">pipeline_name</code><a class=\"headerlink\" href=\"#dagster.InputContext.pipeline_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.solid_def\">\n<code class=\"sig-name descname\">solid_def</code><a class=\"headerlink\" href=\"#dagster.InputContext.solid_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the solid that\u2019s loading the input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.config\">\n<code class=\"sig-name descname\">config</code><a class=\"headerlink\" href=\"#dagster.InputContext.config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The config attached to the input that we\u2019re loading.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.metadata\">\n<code class=\"sig-name descname\">metadata</code><a class=\"headerlink\" href=\"#dagster.InputContext.metadata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dict of metadata that is assigned to the\nInputDefinition that we\u2019re loading for.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.upstream_output\">\n<code class=\"sig-name descname\">upstream_output</code><a class=\"headerlink\" href=\"#dagster.InputContext.upstream_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Info about the output that produced the object\nwe\u2019re loading.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"#dagster.OutputContext\" title=\"dagster.OutputContext\">OutputContext</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.dagster_type\">\n<code class=\"sig-name descname\">dagster_type</code><a class=\"headerlink\" href=\"#dagster.InputContext.dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The type of this input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\">DagsterType</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.log\">\n<code class=\"sig-name descname\">log</code><a class=\"headerlink\" href=\"#dagster.InputContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager to use for this input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"internals#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.resource_config\">\n<code class=\"sig-name descname\">resource_config</code><a class=\"headerlink\" href=\"#dagster.InputContext.resource_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The config associated with the resource that\ninitializes the RootInputManager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InputContext.resources\">\n<code class=\"sig-name descname\">resources</code><a class=\"headerlink\" href=\"#dagster.InputContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The resources required by the resource that initializes the\ninput manager. If using the <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;root_input_manager()</span></code> decorator, these resources\ncorrespond to those requested with the <cite>required_resource_keys</cite> parameter.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>ScopedResources</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.OutputContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">OutputContext</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/system#OutputContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.OutputContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The context object that is available to the <cite>handle_output</cite> method of an <a class=\"reference internal\" href=\"#dagster.IOManager\" title=\"dagster.IOManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOManager</span></code></a>.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.step_key\">\n<code class=\"sig-name descname\">step_key</code><a class=\"headerlink\" href=\"#dagster.OutputContext.step_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The step_key for the compute step that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.name\">\n<code class=\"sig-name descname\">name</code><a class=\"headerlink\" href=\"#dagster.OutputContext.name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the output that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.pipeline_name\">\n<code class=\"sig-name descname\">pipeline_name</code><a class=\"headerlink\" href=\"#dagster.OutputContext.pipeline_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the pipeline definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.run_id\">\n<code class=\"sig-name descname\">run_id</code><a class=\"headerlink\" href=\"#dagster.OutputContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id of the run that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.metadata\">\n<code class=\"sig-name descname\">metadata</code><a class=\"headerlink\" href=\"#dagster.OutputContext.metadata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dict of the metadata that is assigned to the\nOutputDefinition that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.mapping_key\">\n<code class=\"sig-name descname\">mapping_key</code><a class=\"headerlink\" href=\"#dagster.OutputContext.mapping_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The key that identifies a unique mapped output. None for regular outputs.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.config\">\n<code class=\"sig-name descname\">config</code><a class=\"headerlink\" href=\"#dagster.OutputContext.config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The configuration for the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.solid_def\">\n<code class=\"sig-name descname\">solid_def</code><a class=\"headerlink\" href=\"#dagster.OutputContext.solid_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the solid that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.dagster_type\">\n<code class=\"sig-name descname\">dagster_type</code><a class=\"headerlink\" href=\"#dagster.OutputContext.dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The type of this output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\">DagsterType</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.log\">\n<code class=\"sig-name descname\">log</code><a class=\"headerlink\" href=\"#dagster.OutputContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager to use for this output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"internals#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.version\">\n<code class=\"sig-name descname\">version</code><a class=\"headerlink\" href=\"#dagster.OutputContext.version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>(Experimental) The version of the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.OutputContext.resources\">\n<code class=\"sig-name descname\">resources</code><a class=\"headerlink\" href=\"#dagster.OutputContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The resources required by the output manager, specified by the\n<cite>required_resource_keys</cite> parameter.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[ScopedResources]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.OutputContext.get_run_scoped_output_identifier\">\n<code class=\"sig-name descname\">get_run_scoped_output_identifier</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span> &#x2192; List[str]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/system#OutputContext.get_run_scoped_output_identifier\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.OutputContext.get_run_scoped_output_identifier\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility method to get a collection of identifiers that as a whole represent a unique\nstep output.</p>\n<p>The unique identifier collection consists of</p>\n<ul class=\"simple\">\n<li><dl class=\"simple\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code>: the id of the run which generates the output.</dt><dd><p>Note: This method also handles the re-execution memoization logic. If the step that\ngenerates the output is skipped in the re-execution, the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code> will be the id\nof its parent run.</p>\n</dd>\n</dl>\n</li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">step_key</span></code>: the key for a compute step.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>: the name of the output. (default: \u2018result\u2019).</p></li>\n</ul>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>A list of identifiers, i.e. run id, step key, and output name</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>List[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, ..]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"built-in-io-managers\">\n<h2>Built-in IO Managers<a class=\"headerlink\" href=\"#built-in-io-managers\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"dagster.mem_io_manager\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">mem_io_manager</code><em class=\"property\"> IOManagerDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/mem_io_manager#mem_io_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.mem_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in IO manager that stores and retrieves values in memory.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.fs_io_manager\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">fs_io_manager</code><em class=\"property\"> IOManagerDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/fs_io_manager#fs_io_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.fs_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in filesystem IO manager that stores and retrieves values using pickling.</p>\n<p>It allows users to specify a base directory where all the step outputs will be stored. It\nserializes and deserializes output values using pickling and automatically constructs\nthe filepaths for the assets.</p>\n<p>Example usage:</p>\n<p>1. Specify a pipeline-level IO manager using the reserved resource key <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;io_manager&quot;</span></code>,\nwhich will set the given IO manager on all solids across a pipeline.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">solid_a</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">solid_b</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;io_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">fs_io_manager</span><span class=\"p\">})])</span>\n<span class=\"k\">def</span> <span class=\"nf\">pipe</span><span class=\"p\">():</span>\n    <span class=\"n\">solid_b</span><span class=\"p\">(</span><span class=\"n\">solid_a</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<p>2. Specify IO manager on <a class=\"reference internal\" href=\"solids#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputDefinition</span></code></a>, which allows the user to set\ndifferent IO managers on different step outputs.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">io_manager_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_io_manager&quot;</span><span class=\"p\">)])</span>\n<span class=\"k\">def</span> <span class=\"nf\">solid_a</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">solid_b</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;my_io_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">fs_io_manager</span><span class=\"p\">})]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pipe</span><span class=\"p\">():</span>\n    <span class=\"n\">solid_b</span><span class=\"p\">(</span><span class=\"n\">solid_a</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.custom_path_fs_io_manager\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">custom_path_fs_io_manager</code><em class=\"property\"> IOManagerDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/fs_io_manager#custom_path_fs_io_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.custom_path_fs_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in IO manager that allows users to custom output file path per output definition.</p>\n<p>It requires users to specify a base directory where all the step output will be stored in. It\nserializes and deserializes output values (assets) using pickling and stores the pickled object\nin the user-provided file paths.</p>\n<p>Example usage:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">OutputDefinition</span><span class=\"p\">(</span>\n            <span class=\"n\">io_manager_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;io_manager&quot;</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;path/to/sample_output&quot;</span><span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">sample_data</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"n\">my_custom_path_fs_io_manager</span> <span class=\"o\">=</span> <span class=\"n\">custom_path_fs_io_manager</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;base_dir&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;path/to/basedir&quot;</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;io_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_custom_path_fs_io_manager</span><span class=\"p\">})],</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pipe</span><span class=\"p\">():</span>\n    <span class=\"n\">sample_data</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"root-input-managers-experimental\">\n<h2>Root Input Managers (Experimental)<a class=\"headerlink\" href=\"#root-input-managers-experimental\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Root input managers are user-provided objects that specify how to load inputs that aren\u2019t connected\nto upstream outputs.</p>\n<dl class=\"function\">\n<dt id=\"dagster.root_input_manager\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">root_input_manager</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">input_config_schema=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">version=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root_input_manager#root_input_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.root_input_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a root input manager.</p>\n<p>Root input managers load solid inputs that aren\u2019t connected to upstream outputs.</p>\n<p>The decorated function should accept a <a class=\"reference internal\" href=\"#dagster.InputContext\" title=\"dagster.InputContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InputContext</span></code></a> and resource config, and return\na loaded object that will be passed into one of the inputs of a solid.</p>\n<p>The decorator produces an <a class=\"reference internal\" href=\"#dagster.RootInputManagerDefinition\" title=\"dagster.RootInputManagerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RootInputManagerDefinition</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the resource-level config.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the resource.</p></li>\n<li><p><strong>input_config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 A schema for the input-level config. Each\ninput that uses this input manager can be configured separately using this config.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the input\nmanager.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) the version of the input manager definition.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@root_input_manager</span>\n<span class=\"k\">def</span> <span class=\"nf\">csv_loader</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;some/path&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s2\">&quot;input1&quot;</span><span class=\"p\">,</span> <span class=\"n\">root_manager_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;csv_loader_key&quot;</span><span class=\"p\">)])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_solid</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">input1</span><span class=\"p\">):</span>\n    <span class=\"n\">do_stuff</span><span class=\"p\">(</span><span class=\"n\">input1</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;csv_loader_key&quot;</span><span class=\"p\">:</span> <span class=\"n\">csv_loader</span><span class=\"p\">})])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">my_solid</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@root_input_manager</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;base_dir&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">csv_loader</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resource_config</span><span class=\"p\">[</span><span class=\"s2\">&quot;base_dir&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/some/path&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@root_input_manager</span><span class=\"p\">(</span><span class=\"n\">input_config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">csv_loader</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.RootInputManager\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">RootInputManager</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root_input_manager#RootInputManager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RootInputManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RootInputManagers are used to load inputs to solids at the root of a pipeline.</p>\n<p>The easiest way to define an RootInputManager is with the\n<a class=\"reference internal\" href=\"#dagster.root_input_manager\" title=\"dagster.root_input_manager\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;root_input_manager</span></code></a> decorator.</p>\n<dl class=\"method\">\n<dt id=\"dagster.RootInputManager.load_input\">\n<em class=\"property\">abstract </em><code class=\"sig-name descname\">load_input</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">context</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root_input_manager#RootInputManager.load_input\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RootInputManager.load_input\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The user-defined read method that loads data given its metadata.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.InputContext\" title=\"dagster.InputContext\"><em>InputContext</em></a>) \u2013 The context of the step output that produces this asset.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The data object.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.RootInputManagerDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">RootInputManagerDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">resource_fn=None</em>, <em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">input_config_schema=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">version=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root_input_manager#RootInputManagerDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RootInputManagerDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Definition of a root input manager resource.</p>\n<p>Root input managers load solid inputs that aren\u2019t connected to upstream outputs.</p>\n<p>An RootInputManagerDefinition is a <a class=\"reference internal\" href=\"modes-resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a> whose resource_fn returns an\n<a class=\"reference internal\" href=\"#dagster.RootInputManager\" title=\"dagster.RootInputManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RootInputManager</span></code></a>.</p>\n<p>The easiest way to create an RootInputManagerDefinition is with the\n<a class=\"reference internal\" href=\"#dagster.root_input_manager\" title=\"dagster.root_input_manager\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;root_input_manager</span></code></a> decorator.</p>\n<dl class=\"method\">\n<dt id=\"dagster.RootInputManagerDefinition.input_config_schema\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">input_config_schema</code><a class=\"headerlink\" href=\"#dagster.RootInputManagerDefinition.input_config_schema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The schema for per-input configuration for inputs that are managed by this\ninput manager</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/io-managers", "customsidebar": null, "display_toc": true, "meta": {}, "metatags": "", "next": null, "page_source_suffix": ".rst", "parents": [], "prev": null, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/io-managers.rst.txt", "title": "IO Managers", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">IO Managers</a><ul>\n<li><a class=\"reference internal\" href=\"#id1\">IO Managers</a></li>\n<li><a class=\"reference internal\" href=\"#input-and-output-contexts\">Input and Output Contexts</a></li>\n<li><a class=\"reference internal\" href=\"#built-in-io-managers\">Built-in IO Managers</a></li>\n<li><a class=\"reference internal\" href=\"#root-input-managers-experimental\">Root Input Managers (Experimental)</a></li>\n</ul>\n</li>\n</ul>\n"}, "libraries": {"dagster_airflow": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"airflow-dagster-airflow\">\n<h1>Airflow (dagster_airflow)<a class=\"headerlink\" href=\"#airflow-dagster-airflow\" title=\"Permalink to this headline\">\u00b6</a></h1>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_airflow", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_aws/", "title": "AWS (dagster_aws)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../../utilities/", "title": "Utilities"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_aws", "AWS (dagster_aws)", "N", "next"], ["sections/api/apidocs/utilities", "Utilities", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_airflow.rst.txt", "title": "Airflow (dagster_airflow)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Airflow (dagster_airflow)</a></li>\n</ul>\n"}, "dagster_aws": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"aws-dagster-aws\">\n<h1>AWS (dagster_aws)<a class=\"headerlink\" href=\"#aws-dagster-aws\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"s3\">\n<h2>S3<a class=\"headerlink\" href=\"#s3\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster_aws.s3.S3ComputeLogManager\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_aws.s3.</code><code class=\"sig-name descname\">S3ComputeLogManager</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">bucket</em>, <em class=\"sig-param\">local_dir=None</em>, <em class=\"sig-param\">inst_data=None</em>, <em class=\"sig-param\">prefix='dagster'</em>, <em class=\"sig-param\">use_ssl=True</em>, <em class=\"sig-param\">verify=True</em>, <em class=\"sig-param\">verify_cert_path=None</em>, <em class=\"sig-param\">endpoint_url=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/s3/compute_log_manager/#S3ComputeLogManager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.S3ComputeLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logs solid compute function stdout and stderr to S3.</p>\n<p>Users should not instantiate this class directly. Instead, use a YAML block in <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>\nsuch as the following:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">compute_logs</span><span class=\"p\">:</span>\n  <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster_aws.s3.compute_log_manager</span>\n  <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S3ComputeLogManager</span>\n  <span class=\"nt\">config</span><span class=\"p\">:</span>\n    <span class=\"nt\">bucket</span><span class=\"p\">:</span> <span class=\"s\">&quot;mycorp-dagster-compute-logs&quot;</span>\n    <span class=\"nt\">local_dir</span><span class=\"p\">:</span> <span class=\"s\">&quot;/tmp/cool&quot;</span>\n    <span class=\"nt\">prefix</span><span class=\"p\">:</span> <span class=\"s\">&quot;dagster-test-&quot;</span>\n    <span class=\"nt\">use_ssl</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n    <span class=\"nt\">verify</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n    <span class=\"nt\">verify_cert_path</span><span class=\"p\">:</span> <span class=\"s\">&quot;/path/to/cert/bundle.pem&quot;</span>\n    <span class=\"nt\">endpoint_url</span><span class=\"p\">:</span> <span class=\"s\">&quot;http://alternate-s3-host.io&quot;</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>bucket</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the s3 bucket to which to log.</p></li>\n<li><p><strong>local_dir</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Path to the local directory in which to stage logs. Default:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.seven.get_system_temp_directory()</span></code>.</p></li>\n<li><p><strong>prefix</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Prefix for the log file keys.</p></li>\n<li><p><strong>use_ssl</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to use SSL. Default True.</p></li>\n<li><p><strong>verify</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to verify SSL certificates. Default True.</p></li>\n<li><p><strong>verify_cert_path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A filename of the CA cert bundle to use. Only used if\n<cite>verify</cite> set to False.</p></li>\n<li><p><strong>endpoint_url</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Override for the S3 endpoint url.</p></li>\n<li><p><strong>inst_data</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../internals/#dagster.serdes.ConfigurableClassData\" title=\"dagster.serdes.ConfigurableClassData\"><em>ConfigurableClassData</em></a><em>]</em>) \u2013 Serializable representation of the compute\nlog manager when newed up from config.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_aws.s3.S3FileCache\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_aws.s3.</code><code class=\"sig-name descname\">S3FileCache</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">s3_bucket</em>, <em class=\"sig-param\">s3_key</em>, <em class=\"sig-param\">s3_session</em>, <em class=\"sig-param\">overwrite=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/s3/file_cache/#S3FileCache\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileCache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_aws.s3.S3FileHandle\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_aws.s3.</code><code class=\"sig-name descname\">S3FileHandle</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">s3_bucket: str</em>, <em class=\"sig-param\">s3_key: str</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/s3/file_manager/#S3FileHandle\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file on S3.</p>\n<dl class=\"method\">\n<dt id=\"dagster_aws.s3.S3FileHandle.path_desc\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">path_desc</code><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle.path_desc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s S3 URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_aws.s3.S3FileHandle.s3_bucket\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">s3_bucket</code><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle.s3_bucket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the S3 bucket.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_aws.s3.S3FileHandle.s3_key\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">s3_key</code><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle.s3_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The S3 key.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_aws.s3.S3FileHandle.s3_path\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">s3_path</code><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle.s3_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s S3 URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_aws.s3.s3_file_manager\">\n<code class=\"sig-prename descclassname\">dagster_aws.s3.</code><code class=\"sig-name descname\">s3_file_manager</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/s3/resources/#s3_file_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.s3_file_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FileManager that provides abstract access to S3.</p>\n<p>Implements the <a class=\"reference internal\" href=\"../internals/#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> API.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_aws.s3.s3_resource\">\n<code class=\"sig-prename descclassname\">dagster_aws.s3.</code><code class=\"sig-name descname\">s3_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/s3/resources/#s3_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.s3_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resource that gives solids access to S3.</p>\n<p>The underlying S3 session is created by calling <a class=\"reference external\" href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/core/boto3.html#boto3.resource\" title=\"(in Boto 3 Docs v1.11.12)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">boto3.resource('s3')</span></code></a>.\nThe returned resource object is an S3 client, an instance of <cite>botocore.client.S3</cite>.</p>\n<p>Attach this resource definition to a <a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> in order to make it\navailable to your solids.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">execute_solid</span><span class=\"p\">,</span> <span class=\"n\">solid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_aws.s3</span> <span class=\"kn\">import</span> <span class=\"n\">s3_resource</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;s3&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_s3_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">s3</span><span class=\"o\">.</span><span class=\"n\">list_objects_v2</span><span class=\"p\">(</span>\n        <span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"s1\">&#39;my-bucket&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">Prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;some-key&#39;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">execute_solid</span><span class=\"p\">(</span>\n    <span class=\"n\">example_s3_solid</span><span class=\"p\">,</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;s3&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;region_name&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;us-west-1&#39;</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">mode_def</span><span class=\"o\">=</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;s3&#39;</span><span class=\"p\">:</span> <span class=\"n\">s3_resource</span><span class=\"p\">}),</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Note that your solids must also declare that they require this resource with\n<cite>required_resource_keys</cite>, or it will not be initialized for the execution of their compute\nfunctions.</p>\n<p>You may configure this resource as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span>\n  <span class=\"nt\">s3</span><span class=\"p\">:</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">region_name</span><span class=\"p\">:</span> <span class=\"s\">&quot;us-west-1&quot;</span>\n      <span class=\"c1\"># Optional[str]: Specifies a custom region for the S3 session. Default is chosen</span>\n      <span class=\"c1\"># through the ordinary boto credential chain.</span>\n      <span class=\"nt\">use_unsigned_session</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">false</span>\n      <span class=\"c1\"># Optional[bool]: Specifies whether to use an unsigned S3 session. Default: True</span>\n      <span class=\"nt\">endpoint_url</span><span class=\"p\">:</span> <span class=\"s\">&quot;http://localhost&quot;</span>\n      <span class=\"c1\"># Optional[str]: Specifies a custom endpoint for the S3 session. Default is None.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_aws.s3.S3Coordinate\">\n<code class=\"sig-prename descclassname\">dagster_aws.s3.</code><code class=\"sig-name descname\">S3Coordinate</code><em class=\"property\"> DagsterType</em><a class=\"headerlink\" href=\"#dagster_aws.s3.S3Coordinate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference internal\" href=\"../types/#dagster.DagsterType\" title=\"dagster.DagsterType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.DagsterType</span></code></a> intended to make it easier to pass information about files on S3\nfrom solid to solid. Objects of this type should be dicts with <code class=\"docutils literal notranslate\"><span class=\"pre\">'bucket'</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">'key'</span></code> keys,\nand may be hydrated from config in the intuitive way, e.g., for an input with the name\n<code class=\"docutils literal notranslate\"><span class=\"pre\">s3_file</span></code>:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">inputs</span><span class=\"p\">:</span>\n  <span class=\"nt\">s3_file</span><span class=\"p\">:</span>\n    <span class=\"nt\">value</span><span class=\"p\">:</span>\n      <span class=\"nt\">bucket</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-bucket</span>\n      <span class=\"nt\">key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-key</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_aws.s3.s3_pickle_io_manager\">\n<code class=\"sig-prename descclassname\">dagster_aws.s3.</code><code class=\"sig-name descname\">s3_pickle_io_manager</code><em class=\"property\"> IOManagerDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/s3/io_manager/#s3_pickle_io_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.s3_pickle_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Persistent IO manager using S3 for storage.</p>\n<p>Serializes objects via pickling. Suitable for objects storage for distributed executors, so long\nas each execution node has network connectivity and credentials for S3 and the backing bucket.</p>\n<p>Attach this resource definition to a <a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a>\nin order to make it available to your pipeline:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pipeline_def</span> <span class=\"o\">=</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">ModeDefinition</span><span class=\"p\">(</span>\n            <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;io_manager&#39;</span><span class=\"p\">:</span> <span class=\"n\">s3_pickle_io_manager</span><span class=\"p\">,</span> <span class=\"s2\">&quot;s3&quot;</span><span class=\"p\">:</span> <span class=\"n\">s3_resource</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">},</span>\n        <span class=\"p\">),</span> <span class=\"o\">...</span>\n    <span class=\"p\">],</span> <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You may configure this storage as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span>\n    <span class=\"nt\">io_manager</span><span class=\"p\">:</span>\n        <span class=\"nt\">config</span><span class=\"p\">:</span>\n            <span class=\"nt\">s3_bucket</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-cool-bucket</span>\n            <span class=\"nt\">s3_prefix</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">good/prefix-for-files-</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"redshift\">\n<h2>Redshift<a class=\"headerlink\" href=\"#redshift\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"dagster_aws.redshift.redshift_resource\">\n<code class=\"sig-prename descclassname\">dagster_aws.redshift.</code><code class=\"sig-name descname\">redshift_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/redshift/resources/#redshift_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.redshift.redshift_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This resource enables connecting to a Redshift cluster and issuing queries against that\ncluster.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">execute_solid</span><span class=\"p\">,</span> <span class=\"n\">solid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_aws.redshift</span> <span class=\"kn\">import</span> <span class=\"n\">redshift_resource</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;redshift&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_redshift_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">redshift</span><span class=\"o\">.</span><span class=\"n\">execute_query</span><span class=\"p\">(</span><span class=\"s1\">&#39;SELECT 1&#39;</span><span class=\"p\">,</span> <span class=\"n\">fetch_results</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">execute_solid</span><span class=\"p\">(</span>\n    <span class=\"n\">example_redshift_solid</span><span class=\"p\">,</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;redshift&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;host&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;my-redshift-cluster.us-east-1.redshift.amazonaws.com&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;port&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5439</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;user&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dagster&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;password&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dagster&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;database&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dev&#39;</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">mode_def</span><span class=\"o\">=</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;redshift&#39;</span><span class=\"p\">:</span> <span class=\"n\">redshift_resource</span><span class=\"p\">}),</span>\n<span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">output_value</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,)]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<div class=\"section\" id=\"testing\">\n<h3>Testing<a class=\"headerlink\" href=\"#testing\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"data\">\n<dt id=\"dagster_aws.redshift.fake_redshift_resource\">\n<code class=\"sig-prename descclassname\">dagster_aws.redshift.</code><code class=\"sig-name descname\">fake_redshift_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/redshift/resources/#fake_redshift_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.redshift.fake_redshift_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"emr\">\n<h2>EMR<a class=\"headerlink\" href=\"#emr\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"dagster_aws.emr.emr_pyspark_step_launcher\">\n<code class=\"sig-prename descclassname\">dagster_aws.emr.</code><code class=\"sig-name descname\">emr_pyspark_step_launcher</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/emr/pyspark_step_launcher/#emr_pyspark_step_launcher\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.emr_pyspark_step_launcher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li><p><strong>spark_config</strong>:</p></li>\n<li><p><strong>cluster_id</strong>: Name of the job flow (cluster) on which to execute.</p></li>\n<li><p><strong>region_name</strong>: The AWS region that the cluster is in.</p></li>\n<li><p><strong>action_on_failure</strong>: The EMR action to take when the cluster step fails: <a class=\"reference external\" href=\"https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html\">https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html</a></p></li>\n<li><p><strong>staging_bucket</strong>: S3 bucket to use for passing files between the plan process and EMR process.</p></li>\n<li><p><strong>staging_prefix</strong>: S3 key prefix inside the staging_bucket to use for files passed the plan process and EMR process</p></li>\n<li><p><strong>wait_for_logs</strong>: If set, the system will wait for EMR logs to appear on S3. Note that logs are copied every 5 minutes, so enabling this will add several minutes to the job runtime.</p></li>\n<li><p><strong>local_pipeline_package_path</strong>: Absolute path to the package that contains the pipeline definition(s) whose steps will execute remotely on EMR. This is a path on the local fileystem of the process executing the pipeline. The expectation is that this package will also be available on the python path of the launched process running the Spark step on EMR, either deployed on step launch via the deploy_pipeline_package option, referenced on s3 via the s3_pipeline_package_path option, or installed on the cluster via bootstrap actions.</p></li>\n<li><p><strong>deploy_local_pipeline_package</strong>: If set, before every step run, the launcher will zip up all the code in local_pipeline_package_path, upload it to s3, and pass it to spark-submit\u2019s \u2013py-files option. This gives the remote process access to up-to-date user code. If not set, the assumption is that some other mechanism is used for distributing code to the EMR cluster. If this option is set to True, s3_pipeline_package_path should not also be set.</p></li>\n<li><p><strong>s3_pipeline_package_path</strong>: If set, this path will be passed to the \u2013py-files option of spark-submit. This should usually be a path to a zip file.  If this option is set, deploy_local_pipeline_package should not be set to True.</p></li>\n</ul>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_aws.emr.EmrJobRunner\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_aws.emr.</code><code class=\"sig-name descname\">EmrJobRunner</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">region</em>, <em class=\"sig-param\">check_cluster_every=30</em>, <em class=\"sig-param\">aws_access_key_id=None</em>, <em class=\"sig-param\">aws_secret_access_key=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/emr/emr/#EmrJobRunner\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.EmrJobRunner\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_aws.emr.EmrError\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_aws.emr.</code><code class=\"sig-name descname\">EmrError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/emr/emr/#EmrError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.EmrError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_aws.emr.EmrClusterState\">\n<code class=\"sig-prename descclassname\">dagster_aws.emr.</code><code class=\"sig-name descname\">EmrClusterState</code><em class=\"property\"> = &lt;enum 'EmrClusterState'&gt;</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/emr/types/#EmrClusterState\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.EmrClusterState\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An enumeration.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_aws.emr.EmrStepState\">\n<code class=\"sig-prename descclassname\">dagster_aws.emr.</code><code class=\"sig-name descname\">EmrStepState</code><em class=\"property\"> = &lt;enum 'EmrStepState'&gt;</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_aws/emr/types/#EmrStepState\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.EmrStepState\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An enumeration.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cloudwatch\">\n<h2>CloudWatch<a class=\"headerlink\" href=\"#cloudwatch\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"dagster_aws.cloudwatch.cloudwatch_logger\">\n<code class=\"sig-prename descclassname\">dagster_aws.cloudwatch.</code><code class=\"sig-name descname\">cloudwatch_logger</code><em class=\"property\"> LoggerDefinition</em><a class=\"headerlink\" href=\"#dagster_aws.cloudwatch.cloudwatch_logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core class for defining loggers.</p>\n<p>Loggers are pipeline-scoped logging handlers, which will be automatically invoked whenever\nsolids in a pipeline log messages.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>logger_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../loggers/#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><em>InitLoggerContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><em>logging.Logger</em></a><em>]</em>) \u2013 User-provided function to\ninstantiate the logger. This logger will be automatically invoked whenever the methods\non <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code> are called from within solid compute logic.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../config/#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this logger.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_aws", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster_azure/", "title": "Azure (dagster_azure)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_airflow/", "title": "Airflow (dagster_airflow)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_azure", "Azure (dagster_azure)", "N", "next"], ["sections/api/apidocs/libraries/dagster_airflow", "Airflow (dagster_airflow)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_aws.rst.txt", "title": "AWS (dagster_aws)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">AWS (dagster_aws)</a><ul>\n<li><a class=\"reference internal\" href=\"#s3\">S3</a></li>\n<li><a class=\"reference internal\" href=\"#redshift\">Redshift</a><ul>\n<li><a class=\"reference internal\" href=\"#testing\">Testing</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#emr\">EMR</a></li>\n<li><a class=\"reference internal\" href=\"#cloudwatch\">CloudWatch</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster_azure": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"azure-dagster-azure\">\n<h1>Azure (dagster_azure)<a class=\"headerlink\" href=\"#azure-dagster-azure\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Utilities for using Azure Storage Accounts with Dagster. This is mostly aimed at Azure Data Lake\nStorage Gen 2 (ADLS2) but also contains some utilities for Azure Blob Storage.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p><strong>NOTE:</strong> This package is incompatible with <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-snowflake</span></code>! This is due to a version mismatch\nbetween the underlying <code class=\"docutils literal notranslate\"><span class=\"pre\">azure-storage-blob</span></code> package; <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-snowflake</span></code> has a transitive\ndependency on an old version, via <code class=\"docutils literal notranslate\"><span class=\"pre\">snowflake-connector-python</span></code>.</p>\n<dl class=\"data\">\n<dt id=\"dagster_azure.adls2.adls2_resource\">\n<code class=\"sig-prename descclassname\">dagster_azure.adls2.</code><code class=\"sig-name descname\">adls2_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_azure/adls2/resources/#adls2_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.adls2_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resource that gives solids access to Azure Data Lake Storage Gen2.</p>\n<p>The underlying client is a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DataLakeServiceClient</span></code>.</p>\n<p>Attach this resource definition to a <a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> in order to make it\navailable to your solids.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">execute_solid</span><span class=\"p\">,</span> <span class=\"n\">solid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_azure.adls2</span> <span class=\"kn\">import</span> <span class=\"n\">adls2_resource</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;adls2&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_adls2_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">adls2</span><span class=\"o\">.</span><span class=\"n\">adls2_client</span><span class=\"o\">.</span><span class=\"n\">list_file_systems</span><span class=\"p\">())</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">execute_solid</span><span class=\"p\">(</span>\n    <span class=\"n\">example_adls2_solid</span><span class=\"p\">,</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;adls2&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;storage_account&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;my_storage_account&#39;</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">mode_def</span><span class=\"o\">=</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;adls2&#39;</span><span class=\"p\">:</span> <span class=\"n\">adls2_resource</span><span class=\"p\">}),</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Note that your solids must also declare that they require this resource with\n<cite>required_resource_keys</cite>, or it will not be initialized for the execution of their compute\nfunctions.</p>\n<p>You may pass credentials to this resource using either a SAS token or a key, using\nenvironment variables if desired:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span>\n  <span class=\"nt\">adls2</span><span class=\"p\">:</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">storage_account</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my_storage_account</span>\n      <span class=\"c1\"># str: The storage account name.</span>\n      <span class=\"nt\">credential</span><span class=\"p\">:</span>\n        <span class=\"nt\">sas</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my_sas_token</span>\n        <span class=\"c1\"># str: the SAS token for the account.</span>\n        <span class=\"nt\">key</span><span class=\"p\">:</span>\n          <span class=\"nt\">env</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">AZURE_DATA_LAKE_STORAGE_KEY</span>\n        <span class=\"c1\"># str: The shared access key for the account.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_azure.adls2.FakeADLS2Resource\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_azure.adls2.</code><code class=\"sig-name descname\">FakeADLS2Resource</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">account_name</em>, <em class=\"sig-param\">credential='fake-creds'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_azure/adls2/fake_adls2_resource/#FakeADLS2Resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.FakeADLS2Resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Stateful mock of an ADLS2Resource for testing.</p>\n<p>Wraps a <code class=\"docutils literal notranslate\"><span class=\"pre\">mock.MagicMock</span></code>. Containers are implemented using an in-memory dict.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_azure.adls2.adls2_file_cache\">\n<code class=\"sig-prename descclassname\">dagster_azure.adls2.</code><code class=\"sig-name descname\">adls2_file_cache</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_azure/adls2/file_cache/#adls2_file_cache\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.adls2_file_cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_azure.adls2.adls2_intermediate_storage\">\n<code class=\"sig-prename descclassname\">dagster_azure.adls2.</code><code class=\"sig-name descname\">adls2_intermediate_storage</code><em class=\"property\"> IntermediateStorageDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_azure/adls2/system_storage/#adls2_intermediate_storage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.adls2_intermediate_storage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Persistent intermediate storage using Azure Data Lake Storage Gen2 for storage.</p>\n<p>Suitable for intermediates storage for distributed executors, so long as\neach execution node has network connectivity and credentials for ADLS and\nthe backing container.</p>\n<p>Attach this intermediate storage definition, as well as the <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">adls2_resource</span></code>\nit requires, to a <a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> in order to make it available to your\npipeline:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pipeline_def</span> <span class=\"o\">=</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">ModeDefinition</span><span class=\"p\">(</span>\n            <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;adls2&#39;</span><span class=\"p\">:</span> <span class=\"n\">adls2_resource</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">},</span>\n            <span class=\"n\">intermediate_storage_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">adls2_intermediate_storage</span><span class=\"p\">],</span>\n            <span class=\"o\">...</span>\n        <span class=\"p\">),</span> <span class=\"o\">...</span>\n    <span class=\"p\">],</span> <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You may configure this storage as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">intermediate_storage</span><span class=\"p\">:</span>\n  <span class=\"nt\">adls2</span><span class=\"p\">:</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">adls2_sa</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-best-storage-account</span>\n      <span class=\"nt\">adls2_file_system</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-cool-file-system</span>\n      <span class=\"nt\">adls2_prefix</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">good/prefix-for-files-</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_azure.blob.AzureBlobComputeLogManager\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_azure.blob.</code><code class=\"sig-name descname\">AzureBlobComputeLogManager</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">storage_account</em>, <em class=\"sig-param\">container</em>, <em class=\"sig-param\">secret_key</em>, <em class=\"sig-param\">local_dir=None</em>, <em class=\"sig-param\">inst_data=None</em>, <em class=\"sig-param\">prefix='dagster'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_azure/blob/compute_log_manager/#AzureBlobComputeLogManager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_azure.blob.AzureBlobComputeLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logs solid compute function stdout and stderr to Azure Blob Storage.</p>\n<p>This is also compatible with Azure Data Lake Storage.</p>\n<p>Users should not instantiate this class directly. Instead, use a YAML block in <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>\nsuch as the following:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">compute_logs</span><span class=\"p\">:</span>\n  <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster_azure.blob.compute_log_manager</span>\n  <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">AzureBlobComputeLogManager</span>\n  <span class=\"nt\">config</span><span class=\"p\">:</span>\n    <span class=\"nt\">storage_account</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-storage-account</span>\n    <span class=\"nt\">container</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-container</span>\n    <span class=\"nt\">credential</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sas-token-or-secret-key</span>\n    <span class=\"nt\">prefix</span><span class=\"p\">:</span> <span class=\"s\">&quot;dagster-test-&quot;</span>\n    <span class=\"nt\">local_dir</span><span class=\"p\">:</span> <span class=\"s\">&quot;/tmp/cool&quot;</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>storage_account</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The storage account name to which to log.</p></li>\n<li><p><strong>container</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The container (or ADLS2 filesystem) to which to log.</p></li>\n<li><p><strong>secret_key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Secret key for the storage account. SAS tokens are not\nsupported because we need a secret key to generate a SAS token for a download URL.</p></li>\n<li><p><strong>local_dir</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Path to the local directory in which to stage logs. Default:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.seven.get_system_temp_directory()</span></code>.</p></li>\n<li><p><strong>prefix</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Prefix for the log file keys.</p></li>\n<li><p><strong>inst_data</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../internals/#dagster.serdes.ConfigurableClassData\" title=\"dagster.serdes.ConfigurableClassData\"><em>ConfigurableClassData</em></a><em>]</em>) \u2013 Serializable representation of the compute\nlog manager when newed up from config.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_azure.adls2.adls2_file_manager\">\n<code class=\"sig-prename descclassname\">dagster_azure.adls2.</code><code class=\"sig-name descname\">adls2_file_manager</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_azure/adls2/resources/#adls2_file_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.adls2_file_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FileManager that provides abstract access to ADLS2.</p>\n<p>Implements the <a class=\"reference internal\" href=\"../internals/#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> API.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_azure.adls2.</code><code class=\"sig-name descname\">ADLS2FileHandle</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">account: str</em>, <em class=\"sig-param\">file_system: str</em>, <em class=\"sig-param\">key: str</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_azure/adls2/file_manager/#ADLS2FileHandle\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file on ADLS2.</p>\n<dl class=\"method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.account\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">account</code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.account\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the ADLS2 account.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.adls2_path\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">adls2_path</code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.adls2_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s ADLS2 URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.file_system\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">file_system</code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.file_system\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the ADLS2 file system.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.key\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">key</code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The ADLS2 key.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.path_desc\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">path_desc</code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.path_desc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s ADLS2 URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_azure.adls2.adls2_pickle_io_manager\">\n<code class=\"sig-prename descclassname\">dagster_azure.adls2.</code><code class=\"sig-name descname\">adls2_pickle_io_manager</code><em class=\"property\"> IOManagerDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_azure/adls2/io_manager/#adls2_pickle_io_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.adls2_pickle_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Persistent IO manager using Azure Data Lake Storage Gen2 for storage.</p>\n<p>Serializes objects via pickling. Suitable for objects storage for distributed executors, so long\nas each execution node has network connectivity and credentials for ADLS and the backing\ncontainer.</p>\n<p>Attach this resource definition to a <a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a>\nin order to make it available to your pipeline:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pipeline_def</span> <span class=\"o\">=</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">ModeDefinition</span><span class=\"p\">(</span>\n            <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s1\">&#39;io_manager&#39;</span><span class=\"p\">:</span> <span class=\"n\">adls2_pickle_io_manager</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;adls2&#39;</span><span class=\"p\">:</span> <span class=\"n\">adls2_resource</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">},</span>\n        <span class=\"p\">),</span> <span class=\"o\">...</span>\n    <span class=\"p\">],</span> <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You may configure this storage as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span>\n    <span class=\"nt\">io_manager</span><span class=\"p\">:</span>\n        <span class=\"nt\">config</span><span class=\"p\">:</span>\n            <span class=\"nt\">adls2_file_system</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-cool-file-system</span>\n            <span class=\"nt\">adls2_prefix</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">good/prefix-for-files-</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_azure", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_celery/", "title": "Celery (dagster_celery)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_aws/", "title": "AWS (dagster_aws)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_celery", "Celery (dagster_celery)", "N", "next"], ["sections/api/apidocs/libraries/dagster_aws", "AWS (dagster_aws)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_azure.rst.txt", "title": "Azure (dagster_azure)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Azure (dagster_azure)</a></li>\n</ul>\n"}, "dagster_celery": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"celery-dagster-celery\">\n<h1>Celery (dagster_celery)<a class=\"headerlink\" href=\"#celery-dagster-celery\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"quickstart\">\n<h2>Quickstart<a class=\"headerlink\" href=\"#quickstart\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>To get a local rabbitmq broker started and available via the default\n<code class=\"docutils literal notranslate\"><span class=\"pre\">pyamqp://guest&#64;localhost:5672</span></code>, in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster/python_modules/libraries/dagster-celery/</span></code>\ndirectory run:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>docker-compose up\n</pre></div>\n</div>\n<p>To run a celery worker:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>celery -A dagster_celery.app worker -l info\n</pre></div>\n</div>\n<p>To start multiple workers in the background, run:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>celery multi start w2 -A dagster_celery.app -l info\n</pre></div>\n</div>\n<p>To execute a pipeline using the celery-backed executor, you\u2019ll need to add the celery executor to\na mode definition on the pipeline:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">default_executors</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_celery</span> <span class=\"kn\">import</span> <span class=\"n\">celery_executor</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">executor_defs</span><span class=\"o\">=</span><span class=\"n\">default_executors</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">celery_executor</span><span class=\"p\">])])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Then you can use config like the following to execute the pipeline:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span>\n  <span class=\"nt\">celery</span><span class=\"p\">:</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"monitoring-your-celery-tasks\">\n<h3>Monitoring your Celery tasks<a class=\"headerlink\" href=\"#monitoring-your-celery-tasks\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>We advise using [Flower](<a class=\"reference external\" href=\"https://celery.readthedocs.io/en/latest/userguide/monitoring.html#flower-real-time-celery-web-monitor\">https://celery.readthedocs.io/en/latest/userguide/monitoring.html#flower-real-time-celery-web-monitor</a>):</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>celery -A dagster_celery.app flower\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"customizing-the-celery-broker-backend-and-other-app-configuration\">\n<h3>Customizing the Celery broker, backend, and other app configuration<a class=\"headerlink\" href=\"#customizing-the-celery-broker-backend-and-other-app-configuration\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>By default this will use <code class=\"docutils literal notranslate\"><span class=\"pre\">amqp://guest:**&#64;localhost:5672//</span></code> as the Celery broker URL and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">rpc://</span></code> as the results backend. In production, you will want to change these values. Pending the\nintroduction of a dagster_celery CLI, that would entail writing a Python module <code class=\"docutils literal notranslate\"><span class=\"pre\">my_module</span></code> as\nfollows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">celery</span> <span class=\"kn\">import</span> <span class=\"n\">Celery</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_celery.tasks</span> <span class=\"kn\">import</span> <span class=\"n\">create_task</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Celery</span><span class=\"p\">(</span><span class=\"s1\">&#39;dagster&#39;</span><span class=\"p\">,</span> <span class=\"n\">broker_url</span><span class=\"o\">=</span><span class=\"s1\">&#39;some://custom@value&#39;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"n\">execute_plan</span> <span class=\"o\">=</span> <span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">worker_main</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>You can then run the celery worker using:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>celery -A my_module worker --loglevel<span class=\"o\">=</span>info\n</pre></div>\n</div>\n<p>This customization mechanism is used to implement <cite>dagster_celery_k8s</cite> and <cite>dagster_celery_k8s</cite> which delegate the execution of steps to ephemeral kubernetes pods and docker containers, respectively.</p>\n</div>\n<div class=\"section\" id=\"celery-best-practices\">\n<h3>Celery best practices<a class=\"headerlink\" href=\"#celery-best-practices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Celery is a rich and full-featured system. We\u2019ve found the following resources helpful:</p>\n<ul class=\"simple\">\n<li><p>Deni Bertovi\u0107\u2019s [Celery best practices](<a class=\"reference external\" href=\"https://denibertovic.com/posts/celery-best-practices/\">https://denibertovic.com/posts/celery-best-practices/</a>)</p></li>\n<li><p>Pawel Zadrozny\u2019s [series of articles](<a class=\"reference external\" href=\"https://pawelzny.com/python/celery/2017/08/14/celery-4-tasks-best-practices/\">https://pawelzny.com/python/celery/2017/08/14/celery-4-tasks-best-practices/</a>) on Celery best practices</p></li>\n<li><p>Balthazar Rouberol\u2019s [Celery best practices](<a class=\"reference external\" href=\"https://blog.balthazar-rouberol.com/celery-best-practices\">https://blog.balthazar-rouberol.com/celery-best-practices</a>)</p></li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"api\">\n<h2>API<a class=\"headerlink\" href=\"#api\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"dagster_celery.celery_executor\">\n<code class=\"sig-prename descclassname\">dagster_celery.</code><code class=\"sig-name descname\">celery_executor</code><em class=\"property\"> ExecutorDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_celery/executor/#celery_executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_celery.celery_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Celery-based executor.</p>\n<p>The Celery executor exposes config settings for the underlying Celery app under\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> key. This config corresponds to the \u201cnew lowercase settings\u201d introduced\nin Celery version 4.0 and the object constructed from config will be passed to the\n<a class=\"reference external\" href=\"http://docs.celeryproject.org/en/latest/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor as its <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> argument.\n(See <a class=\"reference external\" href=\"https://docs.celeryproject.org/en/latest/userguide/configuration.html\">https://docs.celeryproject.org/en/latest/userguide/configuration.html</a> for details.)</p>\n<p>The executor also exposes the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code>, <cite>backend</cite>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">include</span></code> arguments to the\n<a class=\"reference external\" href=\"http://docs.celeryproject.org/en/latest/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor.</p>\n<p>In the most common case, you may want to modify the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> (e.g., to use\nRedis instead of RabbitMQ). We expect that <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> will be less frequently\nmodified, but that when solid executions are especially fast or slow, or when there are\ndifferent requirements around idempotence or retry, it may make sense to execute pipelines\nwith variations on these settings.</p>\n<p>If you\u2019d like to configure a celery executor in addition to the\n<a class=\"reference internal\" href=\"../execution/#dagster.default_executors\" title=\"dagster.default_executors\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">default_executors</span></code></a>, you should add it to the <code class=\"docutils literal notranslate\"><span class=\"pre\">executor_defs</span></code> defined on a\n<a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">default_executors</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_celery</span> <span class=\"kn\">import</span> <span class=\"n\">celery_executor</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">executor_defs</span><span class=\"o\">=</span><span class=\"n\">default_executors</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">celery_executor</span><span class=\"p\">])])</span>\n<span class=\"k\">def</span> <span class=\"nf\">celery_enabled_pipeline</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Then you can configure the executor as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span>\n  <span class=\"nt\">celery</span><span class=\"p\">:</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">broker</span><span class=\"p\">:</span> <span class=\"s\">&#39;pyamqp://guest@localhost//&#39;</span>  <span class=\"c1\"># Optional[str]: The URL of the Celery broker</span>\n      <span class=\"nt\">backend</span><span class=\"p\">:</span> <span class=\"s\">&#39;rpc://&#39;</span> <span class=\"c1\"># Optional[str]: The URL of the Celery results backend</span>\n      <span class=\"nt\">include</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;my_module&#39;</span><span class=\"p p-Indicator\">]</span> <span class=\"c1\"># Optional[List[str]]: Modules every worker should import</span>\n      <span class=\"nt\">config_source</span><span class=\"p\">:</span> <span class=\"c1\"># Dict[str, Any]: Any additional parameters to pass to the</span>\n          <span class=\"c1\">#...       # Celery workers. This dict will be passed as the `config_source`</span>\n          <span class=\"c1\">#...       # argument of celery.Celery().</span>\n</pre></div>\n</div>\n<p>Note that the YAML you provide here must align with the configuration with which the Celery\nworkers on which you hope to run were started. If, for example, you point the executor at a\ndifferent broker than the one your workers are listening to, the workers will never be able to\npick up tasks for execution.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cli\">\n<h2>CLI<a class=\"headerlink\" href=\"#cli\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-celery</span></code> CLI lets you start, monitor, and terminate workers.</p>\n<div class=\"section\" id=\"dagster-celery-worker-start\">\n<h3>dagster-celery worker start<a class=\"headerlink\" href=\"#dagster-celery-worker-start\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Start a dagster celery worker.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-celery worker start <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>ADDITIONAL_ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-n\">\n<code class=\"sig-name descname\">-n</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--name</code><code class=\"sig-prename descclassname\"> &lt;name&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-n\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the worker. Defaults to a unique name prefixed with \u201cdagster-\u201d and ending with the hostname.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-y\">\n<code class=\"sig-name descname\">-y</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--config-yaml</code><code class=\"sig-prename descclassname\"> &lt;config_yaml&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify the path to a config YAML file with options for the worker. This is the same config block that you provide to dagster_celery.celery_executor when configuring a pipeline for execution with Celery, with, e.g., the URL of the broker to use.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-q\">\n<code class=\"sig-name descname\">-q</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--queue</code><code class=\"sig-prename descclassname\"> &lt;queue&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-q\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Names of the queues on which this worker should listen for tasks.  Provide multiple -q arguments to specify multiple queues. Note that each celery worker may listen on no more than four queues.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-d\">\n<code class=\"sig-name descname\">-d</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--background</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set this flag to run the worker in the background.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-i\">\n<code class=\"sig-name descname\">-i</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--includes</code><code class=\"sig-prename descclassname\"> &lt;includes&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-i\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Python modules the worker should import. Provide multiple -i arguments to specify multiple modules.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-l\">\n<code class=\"sig-name descname\">-l</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--loglevel</code><code class=\"sig-prename descclassname\"> &lt;loglevel&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log level for the worker.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-a\">\n<code class=\"sig-name descname\">-A</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--app</code><code class=\"sig-prename descclassname\"> &lt;app&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-arg-additional-args\">\n<code class=\"sig-name descname\">ADDITIONAL_ARGS</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-arg-additional-args\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-celery-worker-list\">\n<h3>dagster-celery worker list<a class=\"headerlink\" href=\"#dagster-celery-worker-list\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>List running dagster-celery workers. Note that we use the broker to contact the workers.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-celery worker list <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-list-y\">\n<code class=\"sig-name descname\">-y</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--config-yaml</code><code class=\"sig-prename descclassname\"> &lt;config_yaml&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-list-y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify the path to a config YAML file with options for the workers you are trying to manage. This is the same config block that you provide to dagster_celery.celery_executor when configuring a pipeline for execution with Celery, with, e.g., the URL of the broker to use. Without this config file, you will not be able to find your workers (since the CLI won\u2019t know how to reach the broker).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-celery-worker-terminate\">\n<h3>dagster-celery worker terminate<a class=\"headerlink\" href=\"#dagster-celery-worker-terminate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Shut down dagster-celery workers. Note that we use the broker to send signals to the workers to terminate \u2013 if the broker is not running, this command is a no-op. Provide the argument NAME to terminate a specific worker by name.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-celery worker terminate <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>NAME<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-terminate-a\">\n<code class=\"sig-name descname\">-a</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--all</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-terminate-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set this flag to terminate all running workers.</p>\n</dd></dl>\n\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-terminate-y\">\n<code class=\"sig-name descname\">-y</code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\">, </code><code class=\"sig-name descname\">--config-yaml</code><code class=\"sig-prename descclassname\"> &lt;config_yaml&gt;</code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-terminate-y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify the path to a config YAML file with options for the workers you are trying to manage. This is the same config block that you provide to dagster_celery.celery_executor when configuring a pipeline for execution with Celery, with, e.g., the URL of the broker to use. Without this config file, you will not be able to terminate your workers (since the CLI won\u2019t know how to reach the broker).</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"option\">\n<dt id=\"cmdoption-dagster-celery-worker-terminate-arg-name\">\n<code class=\"sig-name descname\">NAME</code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-terminate-arg-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument</p>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_celery", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster_celery_docker/", "title": "Orchestration on Celery + Docker"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_azure/", "title": "Azure (dagster_azure)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_celery_docker", "Orchestration on Celery + Docker", "N", "next"], ["sections/api/apidocs/libraries/dagster_azure", "Azure (dagster_azure)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_celery.rst.txt", "title": "Celery (dagster_celery)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Celery (dagster_celery)</a><ul>\n<li><a class=\"reference internal\" href=\"#quickstart\">Quickstart</a><ul>\n<li><a class=\"reference internal\" href=\"#monitoring-your-celery-tasks\">Monitoring your Celery tasks</a></li>\n<li><a class=\"reference internal\" href=\"#customizing-the-celery-broker-backend-and-other-app-configuration\">Customizing the Celery broker, backend, and other app configuration</a></li>\n<li><a class=\"reference internal\" href=\"#celery-best-practices\">Celery best practices</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#api\">API</a></li>\n<li><a class=\"reference internal\" href=\"#cli\">CLI</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-celery-worker-start\">dagster-celery worker start</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-celery-worker-list\">dagster-celery worker list</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-celery-worker-terminate\">dagster-celery worker terminate</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "dagster_celery_docker": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"orchestration-on-celery-docker\">\n<h1>Orchestration on Celery + Docker<a class=\"headerlink\" href=\"#orchestration-on-celery-docker\" title=\"Permalink to this headline\">\u00b6</a></h1>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"data\">\n<dt id=\"dagster_celery_docker.celery_docker_executor\">\n<code class=\"sig-prename descclassname\">dagster_celery_docker.</code><code class=\"sig-name descname\">celery_docker_executor</code><em class=\"property\"> ExecutorDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_celery_docker/executor/#celery_docker_executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_celery_docker.celery_docker_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Celery-based executor which launches tasks in docker containers.</p>\n<p>The Celery executor exposes config settings for the underlying Celery app under\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> key. This config corresponds to the \u201cnew lowercase settings\u201d introduced\nin Celery version 4.0 and the object constructed from config will be passed to the\n<a class=\"reference external\" href=\"http://docs.celeryproject.org/en/latest/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor as its <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> argument.\n(See <a class=\"reference external\" href=\"https://docs.celeryproject.org/en/latest/userguide/configuration.html\">https://docs.celeryproject.org/en/latest/userguide/configuration.html</a> for details.)</p>\n<p>The executor also exposes the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code>, <cite>backend</cite>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">include</span></code> arguments to the\n<a class=\"reference external\" href=\"http://docs.celeryproject.org/en/latest/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor.</p>\n<p>In the most common case, you may want to modify the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> (e.g., to use\nRedis instead of RabbitMQ). We expect that <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> will be less frequently\nmodified, but that when solid executions are especially fast or slow, or when there are\ndifferent requirements around idempotence or retry, it may make sense to execute pipelines\nwith variations on these settings.</p>\n<p>If you\u2019d like to configure a Celery Docker executor in addition to the\n<a class=\"reference internal\" href=\"../execution/#dagster.default_executors\" title=\"dagster.default_executors\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">default_executors</span></code></a>, you should add it to the <code class=\"docutils literal notranslate\"><span class=\"pre\">executor_defs</span></code> defined on a\n<a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">default_executors</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_celery_docker.executor</span> <span class=\"kn\">import</span> <span class=\"n\">celery_docker_executor</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">executor_defs</span><span class=\"o\">=</span><span class=\"n\">default_executors</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">celery_docker_executor</span><span class=\"p\">])</span>\n<span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">celery_enabled_pipeline</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Then you can configure the executor as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span>\n  <span class=\"nt\">celery-docker</span><span class=\"p\">:</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n\n      <span class=\"nt\">docker</span><span class=\"p\">:</span>\n        <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"s\">&#39;my_repo.com/image_name:latest&#39;</span>\n        <span class=\"nt\">registry</span><span class=\"p\">:</span>\n          <span class=\"nt\">url</span><span class=\"p\">:</span> <span class=\"s\">&#39;my_repo.com&#39;</span>\n          <span class=\"nt\">username</span><span class=\"p\">:</span> <span class=\"s\">&#39;my_user&#39;</span>\n          <span class=\"nt\">password</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">{</span><span class=\"nt\">env</span><span class=\"p\">:</span> <span class=\"s\">&#39;DOCKER_PASSWORD&#39;</span><span class=\"p p-Indicator\">}</span>\n        <span class=\"nt\">env_vars</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;DAGSTER_HOME&quot;</span><span class=\"p p-Indicator\">]</span> <span class=\"c1\"># environment vars to pass from celery worker to docker</span>\n\n      <span class=\"nt\">broker</span><span class=\"p\">:</span> <span class=\"s\">&#39;pyamqp://guest@localhost//&#39;</span>  <span class=\"c1\"># Optional[str]: The URL of the Celery broker</span>\n      <span class=\"nt\">backend</span><span class=\"p\">:</span> <span class=\"s\">&#39;rpc://&#39;</span> <span class=\"c1\"># Optional[str]: The URL of the Celery results backend</span>\n      <span class=\"nt\">include</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;my_module&#39;</span><span class=\"p p-Indicator\">]</span> <span class=\"c1\"># Optional[List[str]]: Modules every worker should import</span>\n      <span class=\"nt\">config_source</span><span class=\"p\">:</span> <span class=\"c1\"># Dict[str, Any]: Any additional parameters to pass to the</span>\n          <span class=\"c1\">#...       # Celery workers. This dict will be passed as the `config_source`</span>\n          <span class=\"c1\">#...       # argument of celery.Celery().</span>\n</pre></div>\n</div>\n<p>Note that the YAML you provide here must align with the configuration with which the Celery\nworkers on which you hope to run were started. If, for example, you point the executor at a\ndifferent broker than the one your workers are listening to, the workers will never be able to\npick up tasks for execution.</p>\n<p>In deployments where the celery_k8s_job_executor is used all appropriate celery and dagster_celery\ncommands must be invoked with the <cite>-A dagster_celery_docker.app</cite> argument.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_celery_docker", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster_celery_k8s/", "title": "Orchestration on Celery + Kubernetes"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_celery/", "title": "Celery (dagster_celery)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_celery_k8s", "Orchestration on Celery + Kubernetes", "N", "next"], ["sections/api/apidocs/libraries/dagster_celery", "Celery (dagster_celery)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_celery_docker.rst.txt", "title": "Orchestration on Celery + Docker", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Orchestration on Celery + Docker</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a></li>\n</ul>\n"}, "dagster_celery_k8s": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"orchestration-on-celery-kubernetes\">\n<h1>Orchestration on Celery + Kubernetes<a class=\"headerlink\" href=\"#orchestration-on-celery-kubernetes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster_celery_k8s.CeleryK8sRunLauncher\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_celery_k8s.</code><code class=\"sig-name descname\">CeleryK8sRunLauncher</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">instance_config_map</em>, <em class=\"sig-param\">dagster_home</em>, <em class=\"sig-param\">postgres_password_secret</em>, <em class=\"sig-param\">load_incluster_config=True</em>, <em class=\"sig-param\">kubeconfig_file=None</em>, <em class=\"sig-param\">broker=None</em>, <em class=\"sig-param\">backend=None</em>, <em class=\"sig-param\">include=None</em>, <em class=\"sig-param\">config_source=None</em>, <em class=\"sig-param\">retries=None</em>, <em class=\"sig-param\">inst_data=None</em>, <em class=\"sig-param\">k8s_client_batch_api=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_celery_k8s/launcher/#CeleryK8sRunLauncher\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_celery_k8s.CeleryK8sRunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>In contrast to the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">K8sRunLauncher</span></code>, which launches pipeline runs as single K8s\nJobs, this run launcher is intended for use in concert with\n<a class=\"reference internal\" href=\"#dagster_celery_k8s.celery_k8s_job_executor\" title=\"dagster_celery_k8s.celery_k8s_job_executor\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dagster_celery_k8s.celery_k8s_job_executor()</span></code></a>.</p>\n<p>With this run launcher, execution is delegated to:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>A run worker Kubernetes Job, which traverses the pipeline run execution plan and\nsubmits steps to Celery queues for execution;</p></li>\n<li><p>The step executions which are submitted to Celery queues are picked up by Celery workers,\nand each step execution spawns a step execution Kubernetes Job. See the implementation\ndefined in <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dagster_celery_k8.executor.create_k8s_job_task()</span></code>.</p></li>\n</ol>\n</div></blockquote>\n<p>You may configure a Dagster instance to use this RunLauncher by adding a section to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> like the following:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_launcher</span><span class=\"p\">:</span>\n  <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster_k8s.launcher</span>\n  <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">CeleryK8sRunLauncher</span>\n  <span class=\"nt\">config</span><span class=\"p\">:</span>\n    <span class=\"nt\">instance_config_map</span><span class=\"p\">:</span> <span class=\"s\">&quot;dagster-k8s-instance-config-map&quot;</span>\n    <span class=\"nt\">dagster_home</span><span class=\"p\">:</span> <span class=\"s\">&quot;/some/path&quot;</span>\n    <span class=\"nt\">postgres_password_secret</span><span class=\"p\">:</span> <span class=\"s\">&quot;dagster-k8s-pg-password&quot;</span>\n    <span class=\"nt\">broker</span><span class=\"p\">:</span> <span class=\"s\">&quot;some_celery_broker_url&quot;</span>\n    <span class=\"nt\">backend</span><span class=\"p\">:</span> <span class=\"s\">&quot;some_celery_backend_url&quot;</span>\n</pre></div>\n</div>\n<p>As always when using a <a class=\"reference internal\" href=\"../internals/#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a>, the values\nunder the <code class=\"docutils literal notranslate\"><span class=\"pre\">config</span></code> key of this YAML block will be passed to the constructor. The full list\nof acceptable values is given below by the constructor args.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>instance_config_map</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> of an existing Volume to mount into the pod in\norder to provide a ConfigMap for the Dagster instance. This Volume should contain a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> with appropriate values for run storage, event log storage, etc.</p></li>\n<li><p><strong>dagster_home</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The location of DAGSTER_HOME in the Job container; this is where the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file will be mounted from the instance ConfigMap specified above.</p></li>\n<li><p><strong>postgres_password_secret</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the Kubernetes Secret where the postgres\npassword can be retrieved. Will be mounted and supplied as an environment variable to\nthe Job Pod.</p></li>\n<li><p><strong>load_incluster_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Set this value if you are running the launcher\nwithin a k8s cluster. If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, we assume the launcher is running within the target\ncluster and load config using <code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_incluster_config</span></code>. Otherwise,\nwe will use the k8s config specified in <code class=\"docutils literal notranslate\"><span class=\"pre\">kubeconfig_file</span></code> (using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_kube_config</span></code>) or fall back to the default kubeconfig. Default:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>kubeconfig_file</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The kubeconfig file from which to load config. Defaults to\nNone (using the default kubeconfig).</p></li>\n<li><p><strong>broker</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The URL of the Celery broker.</p></li>\n<li><p><strong>backend</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The URL of the Celery backend.</p></li>\n<li><p><strong>include</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 List of includes for the Celery workers</p></li>\n<li><p><strong>config_source</strong> \u2013 (Optional[dict]): Additional settings for the Celery app.</p></li>\n<li><p><strong>retries</strong> \u2013 (Optional[dict]): Default retry configuration for Celery tasks.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_celery_k8s.celery_k8s_job_executor\">\n<code class=\"sig-prename descclassname\">dagster_celery_k8s.</code><code class=\"sig-name descname\">celery_k8s_job_executor</code><em class=\"property\"> ExecutorDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_celery_k8s/executor/#celery_k8s_job_executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_celery_k8s.celery_k8s_job_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Celery-based executor which launches tasks as Kubernetes Jobs.</p>\n<p>The Celery executor exposes config settings for the underlying Celery app under\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> key. This config corresponds to the \u201cnew lowercase settings\u201d introduced\nin Celery version 4.0 and the object constructed from config will be passed to the\n<a class=\"reference external\" href=\"http://docs.celeryproject.org/en/latest/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor as its <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> argument.\n(See <a class=\"reference external\" href=\"https://docs.celeryproject.org/en/latest/userguide/configuration.html\">https://docs.celeryproject.org/en/latest/userguide/configuration.html</a> for details.)</p>\n<p>The executor also exposes the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code>, <cite>backend</cite>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">include</span></code> arguments to the\n<a class=\"reference external\" href=\"http://docs.celeryproject.org/en/latest/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor.</p>\n<p>In the most common case, you may want to modify the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> (e.g., to use\nRedis instead of RabbitMQ). We expect that <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> will be less frequently\nmodified, but that when solid executions are especially fast or slow, or when there are\ndifferent requirements around idempotence or retry, it may make sense to execute pipelines\nwith variations on these settings.</p>\n<p>If you\u2019d like to configure a Celery Kubernetes Job executor in addition to the\n<a class=\"reference internal\" href=\"../execution/#dagster.default_executors\" title=\"dagster.default_executors\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">default_executors</span></code></a>, you should add it to the <code class=\"docutils literal notranslate\"><span class=\"pre\">executor_defs</span></code> defined on a\n<a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> as follows:</p>\n<p>Then you can configure the executor as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span>\n  <span class=\"nt\">celery-k8s</span><span class=\"p\">:</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">job_image</span><span class=\"p\">:</span> <span class=\"s\">&#39;my_repo.com/image_name:latest&#39;</span>\n      <span class=\"nt\">job_namespace</span><span class=\"p\">:</span> <span class=\"s\">&#39;some-namespace&#39;</span>\n      <span class=\"nt\">broker</span><span class=\"p\">:</span> <span class=\"s\">&#39;pyamqp://guest@localhost//&#39;</span>  <span class=\"c1\"># Optional[str]: The URL of the Celery broker</span>\n      <span class=\"nt\">backend</span><span class=\"p\">:</span> <span class=\"s\">&#39;rpc://&#39;</span> <span class=\"c1\"># Optional[str]: The URL of the Celery results backend</span>\n      <span class=\"nt\">include</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;my_module&#39;</span><span class=\"p p-Indicator\">]</span> <span class=\"c1\"># Optional[List[str]]: Modules every worker should import</span>\n      <span class=\"nt\">config_source</span><span class=\"p\">:</span> <span class=\"c1\"># Dict[str, Any]: Any additional parameters to pass to the</span>\n          <span class=\"c1\">#...       # Celery workers. This dict will be passed as the `config_source`</span>\n          <span class=\"c1\">#...       # argument of celery.Celery().</span>\n</pre></div>\n</div>\n<p>Note that the YAML you provide here must align with the configuration with which the Celery\nworkers on which you hope to run were started. If, for example, you point the executor at a\ndifferent broker than the one your workers are listening to, the workers will never be able to\npick up tasks for execution.</p>\n<p>In deployments where the celery_k8s_job_executor is used all appropriate celery and dagster_celery\ncommands must be invoked with the <cite>-A dagster_celery_k8s.app</cite> argument.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_celery_k8s", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster_cron/", "title": "Cron (dagster_cron)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_celery_docker/", "title": "Orchestration on Celery + Docker"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_cron", "Cron (dagster_cron)", "N", "next"], ["sections/api/apidocs/libraries/dagster_celery_docker", "Orchestration on Celery + Docker", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_celery_k8s.rst.txt", "title": "Orchestration on Celery + Kubernetes", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Orchestration on Celery + Kubernetes</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a></li>\n</ul>\n"}, "dagster_cron": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"cron-dagster-cron\">\n<h1>Cron (dagster_cron)<a class=\"headerlink\" href=\"#cron-dagster-cron\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster_cron.SystemCronScheduler\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_cron.</code><code class=\"sig-name descname\">SystemCronScheduler</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_cron/cron_scheduler/#SystemCronScheduler\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_cron.SystemCronScheduler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Scheduler implementation that uses the local systems cron. Only works on unix systems that\nhave cron.</p>\n<p>Enable this scheduler by adding it to your <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_cron", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_dask/", "title": "Dask (dagster_dask)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_celery_k8s/", "title": "Orchestration on Celery + Kubernetes"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_dask", "Dask (dagster_dask)", "N", "next"], ["sections/api/apidocs/libraries/dagster_celery_k8s", "Orchestration on Celery + Kubernetes", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_cron.rst.txt", "title": "Cron (dagster_cron)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Cron (dagster_cron)</a></li>\n</ul>\n"}, "dagster_dask": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dask-dagster-dask\">\n<h1>Dask (dagster_dask)<a class=\"headerlink\" href=\"#dask-dagster-dask\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>See also the <a class=\"reference external\" href=\"https://docs.dagster.io/deploying/dask/\">Dask deployment guide</a>.</p>\n<dl class=\"data\">\n<dt id=\"dagster_dask.dask_executor\">\n<code class=\"sig-prename descclassname\">dagster_dask.</code><code class=\"sig-name descname\">dask_executor</code><em class=\"property\"> ExecutorDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_dask/executor/#dask_executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dask.dask_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Dask-based executor.</p>\n<p>The \u2018cluster\u2019 can be one of the following:\n(\u2018existing\u2019, \u2018local\u2019, \u2018yarn\u2019, \u2018ssh\u2019, \u2018pbs\u2019, \u2018moab\u2019, \u2018sge\u2019, \u2018lsf\u2019, \u2018slurm\u2019, \u2018oar\u2019, \u2018kube\u2019).</p>\n<p>If the Dask executor is used without providing executor-specific config, a local Dask cluster\nwill be created (as when calling <a class=\"reference external\" href=\"https://distributed.dask.org/en/latest/api.html#distributed.Client\" title=\"(in Dask.distributed v2.8.1+13.g447b2c2a)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dask.distributed.Client()</span></code></a>\nwith <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dask.distributed.LocalCluster()</span></code>).</p>\n<p>The Dask executor optionally takes the following config:</p>\n<div class=\"highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>cluster:\n    {\n        local?: # takes distributed.LocalCluster parameters\n            {\n                timeout?: 5,  # Timeout duration for initial connection to the scheduler\n                n_workers?: 4  # Number of workers to start\n                threads_per_worker?: 1 # Number of threads per each worker\n            }\n    }\n</pre></div>\n</div>\n<p>If you\u2019d like to configure a dask executor in addition to the\n<a class=\"reference internal\" href=\"../execution/#dagster.default_executors\" title=\"dagster.default_executors\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">default_executors</span></code></a>, you should add it to the <code class=\"docutils literal notranslate\"><span class=\"pre\">executor_defs</span></code> defined on a\n<a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">default_executors</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dask</span> <span class=\"kn\">import</span> <span class=\"n\">dask_executor</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">executor_defs</span><span class=\"o\">=</span><span class=\"n\">default_executors</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">dask_executor</span><span class=\"p\">])])</span>\n<span class=\"k\">def</span> <span class=\"nf\">dask_enabled_pipeline</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_dask", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_databricks/", "title": "Databricks (dagster_databricks)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_cron/", "title": "Cron (dagster_cron)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_databricks", "Databricks (dagster_databricks)", "N", "next"], ["sections/api/apidocs/libraries/dagster_cron", "Cron (dagster_cron)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_dask.rst.txt", "title": "Dask (dagster_dask)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Dask (dagster_dask)</a></li>\n</ul>\n"}, "dagster_databricks": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"databricks-dagster-databricks\">\n<h1>Databricks (dagster_databricks)<a class=\"headerlink\" href=\"#databricks-dagster-databricks\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster_databricks</span></code> package provides two main pieces of functionality:</p>\n<ul class=\"simple\">\n<li><p>A resource, <code class=\"docutils literal notranslate\"><span class=\"pre\">databricks_pyspark_step_launcher</span></code>, which will execute a solid within a Databricks\ncontext on a cluster, such that the <code class=\"docutils literal notranslate\"><span class=\"pre\">pyspark</span></code> resource uses the cluster\u2019s Spark instance.</p></li>\n<li><p>A function, <code class=\"docutils literal notranslate\"><span class=\"pre\">create_databricks_job_solid</span></code>, which creates a solid that submits an external\nconfigurable job to Databricks using the \u2018Run Now\u2019 API.</p></li>\n</ul>\n<p>Note that, for the <code class=\"docutils literal notranslate\"><span class=\"pre\">databricks_pyspark_step_launcher</span></code>, either S3 or Azure Data Lake Storage config\n<strong>must</strong> be specified for solids to succeed, and the credentials for this storage must also be\nstored as a Databricks Secret and stored in the resource config so that the Databricks cluster can\naccess storage.</p>\n<dl class=\"function\">\n<dt id=\"dagster_databricks.create_databricks_job_solid\">\n<code class=\"sig-prename descclassname\">dagster_databricks.</code><code class=\"sig-name descname\">create_databricks_job_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name='databricks_job'</em>, <em class=\"sig-param\">num_inputs=1</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">required_resource_keys=frozenset({'databricks_client'})</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_databricks/solids/#create_databricks_job_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_databricks.create_databricks_job_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a solid that launches a databricks job.</p>\n<p>As config, the solid accepts a blob of the form described in Databricks\u2019 job API:\n<a class=\"reference external\" href=\"https://docs.databricks.com/dev-tools/api/latest/jobs.html\">https://docs.databricks.com/dev-tools/api/latest/jobs.html</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>A solid definition.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../solids/#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_databricks.databricks_pyspark_step_launcher\">\n<code class=\"sig-prename descclassname\">dagster_databricks.</code><code class=\"sig-name descname\">databricks_pyspark_step_launcher</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_databricks/databricks_pyspark_step_launcher/#databricks_pyspark_step_launcher\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_databricks.databricks_pyspark_step_launcher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resource for running solids as a Databricks Job.</p>\n<p>When this resource is used, the solid will be executed in Databricks using the \u2018Run Submit\u2019\nAPI. Pipeline code will be zipped up and copied to a directory in DBFS along with the solid\u2019s\nexecution context.</p>\n<p>Use the \u2018run_config\u2019 configuration to specify the details of the Databricks cluster used, and\nthe \u2018storage\u2019 key to configure persistent storage on that cluster. Storage is accessed by\nsetting the credentials in the Spark context, as documented <a class=\"reference external\" href=\"https://docs.databricks.com/data/data-sources/aws/amazon-s3.html#alternative-1-set-aws-keys-in-the-spark-context\">here for S3</a> and <a class=\"reference external\" href=\"https://docs.microsoft.com/en-gb/azure/databricks/data/data-sources/azure/azure-datalake-gen2#--access-directly-using-the-storage-account-access-key\">here for ADLS</a>.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_databricks.DatabricksError\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_databricks.</code><code class=\"sig-name descname\">DatabricksError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster_databricks/databricks/#DatabricksError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_databricks.DatabricksError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_databricks", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_datadog/", "title": "Datadog (dagster_datadog)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_dask/", "title": "Dask (dagster_dask)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_datadog", "Datadog (dagster_datadog)", "N", "next"], ["sections/api/apidocs/libraries/dagster_dask", "Dask (dagster_dask)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_databricks.rst.txt", "title": "Databricks (dagster_databricks)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Databricks (dagster_databricks)</a></li>\n</ul>\n"}, "dagster_datadog": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"datadog-dagster-datadog\">\n<h1>Datadog (dagster_datadog)<a class=\"headerlink\" href=\"#datadog-dagster-datadog\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with Datadog, to support publishing metrics to Datadog from\nwithin Dagster solids.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>We use the Python <a class=\"reference external\" href=\"https://github.com/DataDog/datadogpy\">datadogpy</a> library. To use it, you\u2019ll\nfirst need to create a DataDog account and get both <a class=\"reference external\" href=\"https://docs.datadoghq.com/account_management/api-app-keys/\">API and Application keys</a>.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>The integration uses <a class=\"reference external\" href=\"https://docs.datadoghq.com/developers/dogstatsd/\">DogStatsD</a>, so you\u2019ll need\nto ensure the datadog agent is running on the host you\u2019re sending metrics from.</p>\n<dl class=\"data\">\n<dt id=\"dagster_datadog.datadog_resource\">\n<code class=\"sig-prename descclassname\">dagster_datadog.</code><code class=\"sig-name descname\">datadog_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_datadog/resources/#datadog_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_datadog.datadog_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This resource is a thin wrapper over the\n<a class=\"reference external\" href=\"https://datadogpy.readthedocs.io/en/latest/\">dogstatsd library</a>.</p>\n<p>As such, we directly mirror the public API methods of DogStatsd here; you can refer to the\n<a class=\"reference external\" href=\"https://docs.datadoghq.com/developers/dogstatsd/\">DataDog documentation</a> for how to use this\nresource.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;datadog&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">datadog_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">dd</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">datadog</span>\n\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"s1\">&#39;Man down!&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;This server needs assistance.&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">gauge</span><span class=\"p\">(</span><span class=\"s1\">&#39;users.online&#39;</span><span class=\"p\">,</span> <span class=\"mi\">1001</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;protocol:http&quot;</span><span class=\"p\">])</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">increment</span><span class=\"p\">(</span><span class=\"s1\">&#39;page.views&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">decrement</span><span class=\"p\">(</span><span class=\"s1\">&#39;page.views&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">histogram</span><span class=\"p\">(</span><span class=\"s1\">&#39;album.photo.count&#39;</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;gender:female&quot;</span><span class=\"p\">])</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">distribution</span><span class=\"p\">(</span><span class=\"s1\">&#39;album.photo.count&#39;</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;color:blue&quot;</span><span class=\"p\">])</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;visitors.uniques&#39;</span><span class=\"p\">,</span> <span class=\"mi\">999</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;browser:ie&quot;</span><span class=\"p\">])</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">service_check</span><span class=\"p\">(</span><span class=\"s1\">&#39;svc.check_name&#39;</span><span class=\"p\">,</span> <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">)</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">timing</span><span class=\"p\">(</span><span class=\"s2\">&quot;query.response.time&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1234</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Use timed decorator</span>\n    <span class=\"nd\">@dd</span><span class=\"o\">.</span><span class=\"n\">timed</span><span class=\"p\">(</span><span class=\"s1\">&#39;run_fn&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">run_fn</span><span class=\"p\">():</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"n\">run_fn</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;datadog&#39;</span><span class=\"p\">:</span> <span class=\"n\">datadog_resource</span><span class=\"p\">})])</span>\n<span class=\"k\">def</span> <span class=\"nf\">dd_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">datadog_solid</span><span class=\"p\">()</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">execute_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">dd_pipeline</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;datadog&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;api_key&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;YOUR_KEY&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;app_key&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;YOUR_KEY&#39;</span><span class=\"p\">}}}},</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_datadog", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_dbt/", "title": "dbt (dagster_dbt)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_databricks/", "title": "Databricks (dagster_databricks)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_dbt", "dbt (dagster_dbt)", "N", "next"], ["sections/api/apidocs/libraries/dagster_databricks", "Databricks (dagster_databricks)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_datadog.rst.txt", "title": "Datadog (dagster_datadog)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Datadog (dagster_datadog)</a></li>\n</ul>\n"}, "dagster_dbt": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dbt-dagster-dbt\">\n<h1>dbt (dagster_dbt)<a class=\"headerlink\" href=\"#dbt-dagster-dbt\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides a Dagster integration with <a class=\"reference external\" href=\"https://getdbt.com/\">dbt</a> (data build tool), created by <a class=\"reference external\" href=\"https://www.fishtownanalytics.com/\">Fishtown Analytics</a>.</p>\n<div class=\"section\" id=\"cli\">\n<h2>CLI<a class=\"headerlink\" href=\"#cli\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_cli_compile\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_cli_compile</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/cli/solids/#dbt_cli_compile\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_compile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">compile</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_cli_run\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_cli_run</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/cli/solids/#dbt_cli_run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_cli_run_operation\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_cli_run_operation</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/cli/solids/#dbt_cli_run_operation\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_run_operation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run-operation</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_cli_snapshot\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_cli_snapshot</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/cli/solids/#dbt_cli_snapshot\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_snapshot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">snapshot</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_cli_snapshot_freshness\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_cli_snapshot_freshness</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/cli/solids/#dbt_cli_snapshot_freshness\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_snapshot_freshness\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">source</span> <span class=\"pre\">snapshot-freshness</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_cli_test\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_cli_test</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/cli/solids/#dbt_cli_test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">test</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_dbt.DbtCliOutput\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DbtCliOutput</code><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/cli/types/#DbtCliOutput\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The results of executing a dbt command, along with additional metadata about the dbt CLI\nprocess that was run.</p>\n<p>Note that users should not construct instances of this class directly. This class is intended\nto be constructed from the JSON output of dbt commands.</p>\n<p>If the executed dbt command is either <code class=\"docutils literal notranslate\"><span class=\"pre\">run</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">test</span></code>, then the <code class=\"docutils literal notranslate\"><span class=\"pre\">.num_*</span></code> attributes will\ncontain non-<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> integer values. Otherwise, they will be <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.command\">\n<code class=\"sig-name descname\">command</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.command\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full shell command that was executed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.return_code\">\n<code class=\"sig-name descname\">return_code</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.return_code\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The return code of the dbt CLI process.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.raw_output\">\n<code class=\"sig-name descname\">raw_output</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.raw_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The raw output (<code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code>) of the dbt CLI process.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.num_pass\">\n<code class=\"sig-name descname\">num_pass</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.num_pass\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The number of dbt nodes (models) that passed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.num_warn\">\n<code class=\"sig-name descname\">num_warn</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.num_warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The number of dbt nodes (models) that emitted warnings.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.num_error\">\n<code class=\"sig-name descname\">num_error</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.num_error\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The number of dbt nodes (models) that emitted errors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.num_skip\">\n<code class=\"sig-name descname\">num_skip</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.num_skip\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The number of dbt nodes (models) that were skipped.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.num_total\">\n<code class=\"sig-name descname\">num_total</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.num_total\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The total number of dbt nodes (models) that were processed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtCliOutput.from_dict\">\n<em class=\"property\">classmethod </em><code class=\"sig-name descname\">from_dict</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">d: Dict[str, Any]</em><span class=\"sig-paren\">)</span> &#x2192; dagster_dbt.cli.types.DbtCliOutput<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/cli/types/#DbtCliOutput.from_dict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.from_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs an instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> from a\ndictionary.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>d</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 A dictionary with key-values to construct a <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a>.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a>.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"rpc\">\n<h2>RPC<a class=\"headerlink\" href=\"#rpc\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster_dbt.create_dbt_rpc_run_sql_solid\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">create_dbt_rpc_run_sql_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name: str</em>, <em class=\"sig-param\">output_def: Optional[dagster.core.definitions.output.OutputDefinition] = None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; Callable<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#create_dbt_rpc_run_sql_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.create_dbt_rpc_run_sql_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is a factory which constructs a solid that will copy the results of a SQL query\nrun within the context of a dbt project to a pandas <code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code>.</p>\n<p>Any kwargs passed to this function will be passed along to the underlying <a class=\"reference internal\" href=\"../solids/#dagster.solid\" title=\"dagster.solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;solid</span></code></a> decorator. However, note that overriding <code class=\"docutils literal notranslate\"><span class=\"pre\">config_schema</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">input_defs</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">required_resource_keys</span></code> is not allowed and will throw a <a class=\"reference internal\" href=\"../errors/#dagster.DagsterInvalidDefinitionError\" title=\"dagster.DagsterInvalidDefinitionError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInvalidDefinitionError</span></code></a>.</p>\n<p>If you would like to configure this solid with different config fields, you could consider using\n<a class=\"reference internal\" href=\"../solids/#dagster.composite_solid\" title=\"dagster.composite_solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;composite_solid</span></code></a> to wrap this solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this solid.</p></li>\n<li><p><strong>output_def</strong> (<a class=\"reference internal\" href=\"../solids/#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>, </em><em>optional</em>) \u2013 The <a class=\"reference internal\" href=\"../solids/#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputDefinition</span></code></a> for the solid. This value should always be a representation\nof a pandas <code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code>. If not specified, the solid will default to an\n<a class=\"reference internal\" href=\"../solids/#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputDefinition</span></code></a> named \u201cdf\u201d with a <code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code>\ndagster type.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Returns the constructed solid definition.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../solids/#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_compile_sql\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_compile_sql</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_compile_sql\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_compile_sql\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">compile</span></code> command to a dbt RPC server and returns the request\ntoken.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_run\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_run</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run</span></code> command to a dbt RPC server and returns the request token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_run_and_wait\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_run_and_wait</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_run_and_wait\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_run_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run</span></code> command to a dbt RPC server and returns the result of the\nexecuted dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_run_operation\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_run_operation</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_run_operation\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_run_operation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run-operation</span></code> command to a dbt RPC server and returns the\nrequest token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_run_operation_and_wait\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_run_operation_and_wait</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_run_operation_and_wait\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_run_operation_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run-operation</span></code> command to a dbt RPC server and returns the\nresult of the executed dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_snapshot\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_snapshot</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_snapshot\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_snapshot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">snapshot</span></code> command to a dbt RPC server and returns the\nrequest token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_snapshot_and_wait\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_snapshot_and_wait</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_snapshot_and_wait\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_snapshot_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">snapshot</span></code> command to a dbt RPC server and returns the result of\nthe executed dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_snapshot_freshness\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_snapshot_freshness</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_snapshot_freshness\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_snapshot_freshness\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">source</span> <span class=\"pre\">snapshot-freshness</span></code> command to a dbt RPC server and\nreturns the request token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_snapshot_freshness_and_wait\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_snapshot_freshness_and_wait</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_snapshot_freshness_and_wait\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_snapshot_freshness_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">source</span> <span class=\"pre\">snapshot</span></code> command to a dbt RPC server and returns the\nresult of the executed dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_test\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_test</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">test</span></code> command to a dbt RPC server and returns the request token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_dbt.dbt_rpc_test_and_wait\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_test_and_wait</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/solids/#dbt_rpc_test_and_wait\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_test_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">test</span></code> command to a dbt RPC server and returns the result of the\nexecuted dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_dbt.dbt_rpc_resource\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">dbt_rpc_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#dbt_rpc_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This resource defines a dbt RPC client.</p>\n<p>To configure this resource, we recommend using the <a class=\"reference external\" href=\"https://docs.dagster.io/overview/configuration#configured\">configured</a> method.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">custom_dbt_rpc_resource</span> <span class=\"o\">=</span> <span class=\"n\">dbt_rpc_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">({</span><span class=\"s2\">&quot;host&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;80.80.80.80&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;port&quot;</span><span class=\"p\">:</span> <span class=\"mi\">8080</span><span class=\"p\">,})</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt_rpc&quot;</span><span class=\"p\">:</span> <span class=\"n\">custom_dbt_rpc_resource</span><span class=\"p\">})])</span>\n<span class=\"k\">def</span> <span class=\"nf\">dbt_rpc_pipeline</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Run solids with `required_resource_keys={&quot;dbt_rpc&quot;, ...}`.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_dbt.local_dbt_rpc_resource\">\n<code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">local_dbt_rpc_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"headerlink\" href=\"#dagster_dbt.local_dbt_rpc_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This resource defines a dbt RPC client for an RPC server running\non 0.0.0.0:8580.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_dbt.DbtRpcClient\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DbtRpcClient</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">host: str = '0.0.0.0'</em>, <em class=\"sig-param\">port: int = 8580</em>, <em class=\"sig-param\">jsonrpc_version: str = '2.0'</em>, <em class=\"sig-param\">logger: Optional[Any] = None</em>, <em class=\"sig-param\">**_</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A client for a dbt RPC server.</p>\n<p>If you are need a dbt RPC server as a Dagster resource, we recommend that you use\n<a class=\"reference internal\" href=\"#dagster_dbt.dbt_rpc_resource\" title=\"dagster_dbt.dbt_rpc_resource\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dbt_rpc_resource</span></code></a>.</p>\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.cli\">\n<code class=\"sig-name descname\">cli</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">cli: str</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.cli\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.cli\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with CLI syntax to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#running-a-task-with-cli-syntax\">running CLI commands via RPC</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>cli</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 a dbt command in CLI syntax.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.compile\">\n<code class=\"sig-name descname\">compile</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">models: List[str] = None</em>, <em class=\"sig-param\">exclude: List[str] = None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.compile\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.compile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">compile</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#compile-a-project\">compiling projects via RPC</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in compilation.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em><em>, </em><em>optional</em>) \u2013 the models to exclude from compilation.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.compile_sql\">\n<code class=\"sig-name descname\">compile_sql</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">sql: str</em>, <em class=\"sig-param\">name: str</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.compile_sql\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.compile_sql\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">compile_sql</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc#compiling-a-query\">compiling SQL via RPC</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>sql</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the SQL to compile in base-64 encoding.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 a name for the compiled SQL.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.generate_docs\">\n<code class=\"sig-name descname\">generate_docs</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">models: List[str] = None</em>, <em class=\"sig-param\">exclude: List[str] = None</em>, <em class=\"sig-param\">compile: bool = False</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.generate_docs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.generate_docs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">docs.generate</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#generate-docs\">docs.generate</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in docs generation.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to exclude from docs generation.</p></li>\n<li><p><strong>compile</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), then compile the project before\ngenerating docs.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.host\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">host</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The IP address of the host of the dbt RPC server.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.jsonrpc_version\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">jsonrpc_version</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.jsonrpc_version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The JSON-RPC version to send in RPC requests.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.kill\">\n<code class=\"sig-name descname\">kill</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">task_id: str</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.kill\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.kill\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">kill</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#kill\">kill</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>task_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the ID of the task to terminate.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.logger\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">logger</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A property for injecting a logger dependency.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.poll\">\n<code class=\"sig-name descname\">poll</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">request_token: str</em>, <em class=\"sig-param\">logs: bool = False</em>, <em class=\"sig-param\">logs_start: int = 0</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.poll\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.poll\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">poll</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#poll\">poll</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>request_token</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the token to poll responses for.</p></li>\n<li><p><strong>logs</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether logs should be returned in the response. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p></li>\n<li><p><strong>logs_start</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The zero-indexed log line to fetch logs from. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.port\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">port</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The port of the dbt RPC server.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.ps\">\n<code class=\"sig-name descname\">ps</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">completed: bool = False</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.ps\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.ps\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#ps\">ps</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>compelted</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then also return completed tasks. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.run\">\n<code class=\"sig-name descname\">run</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">models: List[str] = None</em>, <em class=\"sig-param\">exclude: List[str] = None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.run\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">run</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#run-models\">run</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em><em>, </em><em>optional</em>) \u2013 the models to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.run_operation\">\n<code class=\"sig-name descname\">run_operation</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">macro: str</em>, <em class=\"sig-param\">args: Optional[Dict[str</em>, <em class=\"sig-param\">Any]] = None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.run_operation\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.run_operation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">run-operation</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for the command <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/run-operation\">run-operation</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>macro</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the dbt macro to invoke.</p></li>\n<li><p><strong>args</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>, </em><em>optional</em>) \u2013 the keyword arguments to be supplied to the macro.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.run_sql\">\n<code class=\"sig-name descname\">run_sql</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">sql: str</em>, <em class=\"sig-param\">name: str</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.run_sql\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.run_sql\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">run_sql</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc#executing-a-query\">running SQL via RPC</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>sql</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the SQL to run in base-64 encoding.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 a name for the compiled SQL.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.seed\">\n<code class=\"sig-name descname\">seed</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">show: bool = False</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.seed\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.seed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">seed</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#run-seed\">seed</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>show</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then show a sample of the seeded data in the\nresponse. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.snapshot\">\n<code class=\"sig-name descname\">snapshot</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">select: List[str] = None</em>, <em class=\"sig-param\">exclude: List[str] = None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.snapshot\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.snapshot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">snapshot</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for the command <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/snapshot\">snapshot</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.snapshot_freshness\">\n<code class=\"sig-name descname\">snapshot_freshness</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">select: Optional[List[str]] = None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.snapshot_freshness\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.snapshot_freshness\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">snapshot-freshness</span></code> to the dbt RPC server, and returns\nthe response. For more details, see the dbt docs for the command <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/source#dbt-source-snapshot-freshness\">source snapshot-freshness</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in calculating snapshot freshness.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.status\">\n<code class=\"sig-name descname\">status</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.status\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.status\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">status</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#status\">status</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.test\">\n<code class=\"sig-name descname\">test</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*</em>, <em class=\"sig-param\">models: List[str] = None</em>, <em class=\"sig-param\">exclude: List[str] = None</em>, <em class=\"sig-param\">data: bool = True</em>, <em class=\"sig-param\">schema: bool = True</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span> &#x2192; requests.models.Response<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/resources/#DbtRpcClient.test\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">test</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#run-test\">test</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in testing.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to exclude from testing.</p></li>\n<li><p><strong>data</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), then run data tests.</p></li>\n<li><p><strong>schema</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), then run schema tests.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcClient.url\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">url</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcClient.url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The URL for sending dbt RPC requests.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_dbt.DbtRpcOutput\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DbtRpcOutput</code><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/types/#DbtRpcOutput\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The output from executing a dbt command via the dbt RPC server.</p>\n<p>Note that users should not construct instances of this class directly. This class is intended to be\nconstructed from the JSON output of dbt commands.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtRpcOutput.result\">\n<code class=\"sig-name descname\">result</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput.result\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The dbt results from the executed command.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtResult\" title=\"dagster_dbt.DbtResult\">DbtResult</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtRpcOutput.state\">\n<code class=\"sig-name descname\">state</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput.state\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The state of the polled dbt process.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtRpcOutput.start\">\n<code class=\"sig-name descname\">start</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput.start\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An ISO string timestamp of when the dbt process started.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtRpcOutput.end\">\n<code class=\"sig-name descname\">end</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput.end\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An ISO string timestamp of when the dbt process ended.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtRpcOutput.elapsed\">\n<code class=\"sig-name descname\">elapsed</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput.elapsed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The duration (in seconds) for which the dbt process was running.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtRpcOutput.from_dict\">\n<em class=\"property\">classmethod </em><code class=\"sig-name descname\">from_dict</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">d: Dict[str, Any]</em><span class=\"sig-paren\">)</span> &#x2192; dagster_dbt.rpc.types.DbtRpcOutput<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/rpc/types/#DbtRpcOutput.from_dict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput.from_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs an instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtRpcOutput\" title=\"dagster_dbt.DbtRpcOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtRpcOutput</span></code></a> from a\ndictionary.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>d</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 A dictionary with key-values to construct a <a class=\"reference internal\" href=\"#dagster_dbt.DbtRpcOutput\" title=\"dagster_dbt.DbtRpcOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtRpcOutput</span></code></a>.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtRpcOutput\" title=\"dagster_dbt.DbtRpcOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtRpcOutput</span></code></a>.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtRpcOutput\" title=\"dagster_dbt.DbtRpcOutput\">DbtRpcOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"types\">\n<h2>Types<a class=\"headerlink\" href=\"#types\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster_dbt.DbtResult\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DbtResult</code><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/types/#DbtResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The results of executing a dbt command.</p>\n<p>Note that users should not construct instances of this class directly. This class is intended to be\nconstructed from the JSON output of dbt commands.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtResult.logs\">\n<code class=\"sig-name descname\">logs</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtResult.logs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>JSON log output from the dbt process.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtResult.results\">\n<code class=\"sig-name descname\">results</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtResult.results\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Details about each executed dbt node (model) in the run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster_dbt.NodeResult\" title=\"dagster_dbt.NodeResult\">NodeResult</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtResult.generated_at\">\n<code class=\"sig-name descname\">generated_at</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtResult.generated_at\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An ISO string timestamp of when the run result was generated by dbt.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.DbtResult.elapsed_time\">\n<code class=\"sig-name descname\">elapsed_time</code><a class=\"headerlink\" href=\"#dagster_dbt.DbtResult.elapsed_time\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The execution duration (in seconds) of the run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.DbtResult.from_dict\">\n<em class=\"property\">classmethod </em><code class=\"sig-name descname\">from_dict</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">d: Dict[str, Any]</em><span class=\"sig-paren\">)</span> &#x2192; dagster_dbt.types.DbtResult<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/types/#DbtResult.from_dict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResult.from_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs an instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtResult\" title=\"dagster_dbt.DbtResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtResult</span></code></a> from a dictionary.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>d</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 A dictionary with key-values to construct a <a class=\"reference internal\" href=\"#dagster_dbt.DbtResult\" title=\"dagster_dbt.DbtResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtResult</span></code></a>.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtResult\" title=\"dagster_dbt.DbtResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtResult</span></code></a>.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtResult\" title=\"dagster_dbt.DbtResult\">DbtResult</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_dbt.NodeResult\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">NodeResult</code><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/types/#NodeResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The result of executing a dbt node (model).</p>\n<p>Note that users should not construct instances of this class directly. This class is intended to be\nconstructed from the JSON output of dbt commands.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.node\">\n<code class=\"sig-name descname\">node</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.node\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Details about the executed dbt node (model).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.error\">\n<code class=\"sig-name descname\">error</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.error\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An error message if an error occurred.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.fail\">\n<code class=\"sig-name descname\">fail</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.fail\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">fail</span></code> field from the results of the executed dbt node.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.warn\">\n<code class=\"sig-name descname\">warn</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">warn</span></code> field from the results of the executed dbt node.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.skip\">\n<code class=\"sig-name descname\">skip</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.skip\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">skip</span></code> field from the results of the executed dbt node.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.status\">\n<code class=\"sig-name descname\">status</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.status\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The status of the executed dbt node (model).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>,<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.execution_time\">\n<code class=\"sig-name descname\">execution_time</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.execution_time\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The execution duration (in seconds) of the dbt node (model).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.thread_id\">\n<code class=\"sig-name descname\">thread_id</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.thread_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The dbt thread identifier that executed the dbt node (model).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.step_timings\">\n<code class=\"sig-name descname\">step_timings</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.step_timings\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The timings for each step in the executed dbt node\n(model).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster_dbt.StepTiming\" title=\"dagster_dbt.StepTiming\">StepTiming</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.NodeResult.table\">\n<code class=\"sig-name descname\">table</code><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Details about the table/view that is created from executing a\n<a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc#executing-a-query\">run_sql</a>\ncommand on an dbt RPC server.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.NodeResult.from_dict\">\n<em class=\"property\">classmethod </em><code class=\"sig-name descname\">from_dict</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">d: Dict[str, Any]</em><span class=\"sig-paren\">)</span> &#x2192; dagster_dbt.types.NodeResult<a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/types/#NodeResult.from_dict\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.NodeResult.from_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs an instance of <a class=\"reference internal\" href=\"#dagster_dbt.NodeResult\" title=\"dagster_dbt.NodeResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NodeResult</span></code></a> from a dictionary.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>d</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 A dictionary with key-values to construct a <a class=\"reference internal\" href=\"#dagster_dbt.NodeResult\" title=\"dagster_dbt.NodeResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NodeResult</span></code></a>.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.NodeResult\" title=\"dagster_dbt.NodeResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NodeResult</span></code></a>.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.NodeResult\" title=\"dagster_dbt.NodeResult\">NodeResult</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_dbt.StepTiming\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">StepTiming</code><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/types/#StepTiming\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.StepTiming\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The timing information of an executed step for a dbt node (model).</p>\n<p>Note that users should not construct instances of this class directly. This class is intended to be\nconstructed from the JSON output of dbt commands.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.StepTiming.name\">\n<code class=\"sig-name descname\">name</code><a class=\"headerlink\" href=\"#dagster_dbt.StepTiming.name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the executed step.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.StepTiming.started_at\">\n<code class=\"sig-name descname\">started_at</code><a class=\"headerlink\" href=\"#dagster_dbt.StepTiming.started_at\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An ISO string timestamp of when the step started executing.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\">datetime.datetime</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster_dbt.StepTiming.completed_at\">\n<code class=\"sig-name descname\">completed_at</code><a class=\"headerlink\" href=\"#dagster_dbt.StepTiming.completed_at\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An ISO string timestamp of when the step completed\nexecution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\">datetime.datetime</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_dbt.StepTiming.duration\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">duration</code><a class=\"headerlink\" href=\"#dagster_dbt.StepTiming.duration\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The execution duration of the step.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timedelta\" title=\"(in Python v3.8)\">datetime.timedelta</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"errors\">\n<h2>Errors<a class=\"headerlink\" href=\"#errors\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"exception\">\n<dt id=\"dagster_dbt.DagsterDbtError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DagsterDbtError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">metadata_entries=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/errors/#DagsterDbtError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The base exception of the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-dbt</span></code> library.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliRuntimeError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DagsterDbtCliRuntimeError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">description: str, logs: List[Dict[str, Any]], raw_output: str</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/errors/#DagsterDbtCliRuntimeError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliRuntimeError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents an error while executing a dbt CLI command.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliFatalRuntimeError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DagsterDbtCliFatalRuntimeError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">logs: List[Dict[str, Any]], raw_output: str</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/errors/#DagsterDbtCliFatalRuntimeError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliFatalRuntimeError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a fatal error in the dbt CLI (return code 2).</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliHandledRuntimeError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DagsterDbtCliHandledRuntimeError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">logs: List[Dict[str, Any]], raw_output: str</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/errors/#DagsterDbtCliHandledRuntimeError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliHandledRuntimeError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a model error reported by the dbt CLI at runtime (return code 1).</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliOutputsNotFoundError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DagsterDbtCliOutputsNotFoundError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">path: str</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/errors/#DagsterDbtCliOutputsNotFoundError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliOutputsNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a problem in finding the <code class=\"docutils literal notranslate\"><span class=\"pre\">target/run_results.json</span></code> artifact when executing a dbt\nCLI command.</p>\n<p>For more details on <code class=\"docutils literal notranslate\"><span class=\"pre\">target/run_results.json</span></code>, see\n<a class=\"reference external\" href=\"https://docs.getdbt.com/reference/dbt-artifacts#run_resultsjson\">https://docs.getdbt.com/reference/dbt-artifacts#run_resultsjson</a>.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliUnexpectedOutputError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DagsterDbtCliUnexpectedOutputError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">invalid_line_nos: List[int]</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/errors/#DagsterDbtCliUnexpectedOutputError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliUnexpectedOutputError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents an error when parsing the output of a dbt CLI command.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster_dbt.DagsterDbtRpcUnexpectedPollOutputError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster_dbt.</code><code class=\"sig-name descname\">DagsterDbtRpcUnexpectedPollOutputError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">metadata_entries=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_dbt/errors/#DagsterDbtRpcUnexpectedPollOutputError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtRpcUnexpectedPollOutputError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents an unexpected response when polling the dbt RPC server.</p>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_dbt", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster_gcp/", "title": "GCP (dagster_gcp)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_datadog/", "title": "Datadog (dagster_datadog)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_gcp", "GCP (dagster_gcp)", "N", "next"], ["sections/api/apidocs/libraries/dagster_datadog", "Datadog (dagster_datadog)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_dbt.rst.txt", "title": "dbt (dagster_dbt)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">dbt (dagster_dbt)</a><ul>\n<li><a class=\"reference internal\" href=\"#cli\">CLI</a></li>\n<li><a class=\"reference internal\" href=\"#rpc\">RPC</a></li>\n<li><a class=\"reference internal\" href=\"#types\">Types</a></li>\n<li><a class=\"reference internal\" href=\"#errors\">Errors</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster_docker": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"orchestration-on-docker\">\n<h1>Orchestration on Docker<a class=\"headerlink\" href=\"#orchestration-on-docker\" title=\"Permalink to this headline\">\u00b6</a></h1>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster_docker.DockerRunLauncher\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_docker.</code><code class=\"sig-name descname\">DockerRunLauncher</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">inst_data=None</em>, <em class=\"sig-param\">image=None</em>, <em class=\"sig-param\">registry=None</em>, <em class=\"sig-param\">env_vars=None</em>, <em class=\"sig-param\">network=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_docker/docker_run_launcher/#DockerRunLauncher\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_docker.DockerRunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Launches runs in a Docker container.</p>\n<p>image (Optional[str]): The docker image to be used if the repository does not specify one.\nregistry (Optional[Dict[str, str]]): Information for using a non-local docker registry.</p>\n<blockquote>\n<div><p>If set, should include <code class=\"docutils literal notranslate\"><span class=\"pre\">url</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">username</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">password</span></code> keys.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>env_vars (Optional[List[str]]): The list of environment variables names to forward to the</dt><dd><p>docker container.</p>\n</dd>\n<dt>network (Optional[str]): Name of the network this container to which to connect the</dt><dd><p>launched container at creation time.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_docker", "customsidebar": null, "display_toc": true, "meta": {}, "metatags": "", "next": null, "page_source_suffix": ".rst", "parents": [], "prev": null, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_docker.rst.txt", "title": "Orchestration on Docker", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Orchestration on Docker</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a></li>\n</ul>\n"}, "dagster_gcp": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"gcp-dagster-gcp\">\n<h1>GCP (dagster_gcp)<a class=\"headerlink\" href=\"#gcp-dagster-gcp\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"bigquery\">\n<h2>BigQuery<a class=\"headerlink\" href=\"#bigquery\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster_gcp.BigQueryError\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">BigQueryError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/bigquery/types/#BigQueryError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.BigQueryError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_gcp.bigquery_resource\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">bigquery_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/bigquery/resources/#bigquery_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.bigquery_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_gcp.bq_create_dataset\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">bq_create_dataset</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/bigquery/solids/#bq_create_dataset\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.bq_create_dataset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>BigQuery Create Dataset.</p>\n<p>This solid encapsulates creating a BigQuery dataset.</p>\n<p>Expects a BQ client to be provisioned in resources as context.resources.bigquery.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_gcp.bq_delete_dataset\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">bq_delete_dataset</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/bigquery/solids/#bq_delete_dataset\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.bq_delete_dataset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>BigQuery Delete Dataset.</p>\n<p>This solid encapsulates deleting a BigQuery dataset.</p>\n<p>Expects a BQ client to be provisioned in resources as context.resources.bigquery.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_gcp.bq_solid_for_queries\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">bq_solid_for_queries</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">sql_queries</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/bigquery/solids/#bq_solid_for_queries\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.bq_solid_for_queries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Executes BigQuery SQL queries.</p>\n<p>Expects a BQ client to be provisioned in resources as context.resources.bigquery.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_gcp.import_df_to_bq\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">import_df_to_bq</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/bigquery/solids/#import_df_to_bq\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.import_df_to_bq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_gcp.import_file_to_bq\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">import_file_to_bq</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/bigquery/solids/#import_file_to_bq\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.import_file_to_bq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_gcp.import_gcs_paths_to_bq\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">import_gcs_paths_to_bq</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/bigquery/solids/#import_gcs_paths_to_bq\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.import_gcs_paths_to_bq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"dataproc\">\n<h2>Dataproc<a class=\"headerlink\" href=\"#dataproc\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster_gcp.dataproc_solid\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">dataproc_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/dataproc/solids/#dataproc_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.dataproc_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_gcp.dataproc_resource\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">dataproc_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/dataproc/resources/#dataproc_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.dataproc_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"gcs\">\n<h2>GCS<a class=\"headerlink\" href=\"#gcs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"dagster_gcp.gcs.gcs_intermediate_storage\">\n<code class=\"sig-prename descclassname\">dagster_gcp.gcs.</code><code class=\"sig-name descname\">gcs_intermediate_storage</code><em class=\"property\"> IntermediateStorageDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/gcs/system_storage/#gcs_intermediate_storage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.gcs.gcs_intermediate_storage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_gcp.gcs_resource\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">gcs_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/gcs/resources/#gcs_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.gcs_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_gcp.GCSFileHandle\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">GCSFileHandle</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">gcs_bucket: str</em>, <em class=\"sig-param\">gcs_key: str</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/gcs/file_manager/#GCSFileHandle\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file on GCS.</p>\n<dl class=\"method\">\n<dt id=\"dagster_gcp.GCSFileHandle.gcs_bucket\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">gcs_bucket</code><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle.gcs_bucket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the GCS bucket.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_gcp.GCSFileHandle.gcs_key\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">gcs_key</code><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle.gcs_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The GCS key.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_gcp.GCSFileHandle.gcs_path\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">gcs_path</code><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle.gcs_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s GCS URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_gcp.GCSFileHandle.path_desc\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">path_desc</code><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle.path_desc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s GCS URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_gcp.gcs_file_manager\">\n<code class=\"sig-prename descclassname\">dagster_gcp.</code><code class=\"sig-name descname\">gcs_file_manager</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/gcs/resources/#gcs_file_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.gcs_file_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FileManager that provides abstract access to GCS.</p>\n<p>Implements the <a class=\"reference internal\" href=\"../internals/#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> API.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_gcp.gcs.gcs_pickle_io_manager\">\n<code class=\"sig-prename descclassname\">dagster_gcp.gcs.</code><code class=\"sig-name descname\">gcs_pickle_io_manager</code><em class=\"property\"> IOManagerDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_gcp/gcs/io_manager/#gcs_pickle_io_manager\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_gcp.gcs.gcs_pickle_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Persistent IO manager using GCS for storage.</p>\n<p>Serializes objects via pickling. Suitable for objects storage for distributed executors, so long\nas each execution node has network connectivity and credentials for GCS and the backing bucket.</p>\n<p>Attach this resource definition to a <a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a>\nin order to make it available to your pipeline:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pipeline_def</span> <span class=\"o\">=</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">ModeDefinition</span><span class=\"p\">(</span>\n            <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;io_manager&#39;</span><span class=\"p\">:</span> <span class=\"n\">gcs_pickle_io_manager</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gcs&#39;</span><span class=\"p\">:</span> <span class=\"n\">gcs_resource</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">},</span>\n        <span class=\"p\">),</span> <span class=\"o\">...</span>\n    <span class=\"p\">],</span> <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You may configure this storage as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span>\n    <span class=\"nt\">io_manager</span><span class=\"p\">:</span>\n        <span class=\"nt\">config</span><span class=\"p\">:</span>\n            <span class=\"nt\">gcs_bucket</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-cool-bucket</span>\n            <span class=\"nt\">gcs_prefix</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">good/prefix-for-files-</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_gcp", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster_ge/", "title": "Great Expectations (dagster_ge)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_dbt/", "title": "dbt (dagster_dbt)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_ge", "Great Expectations (dagster_ge)", "N", "next"], ["sections/api/apidocs/libraries/dagster_dbt", "dbt (dagster_dbt)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_gcp.rst.txt", "title": "GCP (dagster_gcp)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">GCP (dagster_gcp)</a><ul>\n<li><a class=\"reference internal\" href=\"#bigquery\">BigQuery</a></li>\n<li><a class=\"reference internal\" href=\"#dataproc\">Dataproc</a></li>\n<li><a class=\"reference internal\" href=\"#gcs\">GCS</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster_ge": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"great-expectations-dagster-ge\">\n<h1>Great Expectations (dagster_ge)<a class=\"headerlink\" href=\"#great-expectations-dagster-ge\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"function\">\n<dt id=\"dagster_ge.ge_validation_solid_factory\">\n<code class=\"sig-prename descclassname\">dagster_ge.</code><code class=\"sig-name descname\">ge_validation_solid_factory</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">datasource_name</em>, <em class=\"sig-param\">suite_name</em>, <em class=\"sig-param\">validation_operator_name=None</em>, <em class=\"sig-param\">input_dagster_type=&lt;dagster.core.types.dagster_type.DagsterType object&gt;</em>, <em class=\"sig-param\">batch_kwargs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_ge/factory/#ge_validation_solid_factory\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_ge.ge_validation_solid_factory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\n<div><p>Generates solids for interacting with GE.</p>\n</div></blockquote>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of the solid</p></li>\n<li><p><strong>datasource_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of your DataSource, see your great_expectations.yml</p></li>\n<li><p><strong>suite_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of your expectation suite, see your great_expectations.yml</p></li>\n<li><p><strong>validation_operator_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 what validation operator to run  \u2013 defaults to None,\nwhich generates an ephemeral validator.\nIf you want to save data docs, use \u2018action_list_operator\u2019.\nSee <a class=\"reference external\" href=\"https://docs.greatexpectations.io/en/latest/reference/core_concepts/validation_operators_and_actions.html\">https://docs.greatexpectations.io/en/latest/reference/core_concepts/validation_operators_and_actions.html</a></p></li>\n<li><p><strong>input_dagster_type</strong> (<a class=\"reference internal\" href=\"../types/#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a>) \u2013 the Dagster type used to type check the input to the\nsolid. Defaults to <cite>dagster_pandas.DataFrame</cite>.</p></li>\n<li><p><strong>batch_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 overrides the <cite>batch_kwargs</cite> parameter when calling the\n<cite>ge_data_context</cite>\u2019s <cite>get_batch</cite> method. Defaults to <cite>{\u201cdataset\u201d: dataset}</cite>,\nwhere <cite>dataset</cite> is the input to the generated solid.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A solid that takes in a set of data and yields both an expectation with relevant metadata\nand an output with all the metadata (for user processing)</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_ge", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_github/", "title": "GitHub (dagster_github)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_gcp/", "title": "GCP (dagster_gcp)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_github", "GitHub (dagster_github)", "N", "next"], ["sections/api/apidocs/libraries/dagster_gcp", "GCP (dagster_gcp)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_ge.rst.txt", "title": "Great Expectations (dagster_ge)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Great Expectations (dagster_ge)</a></li>\n</ul>\n"}, "dagster_github": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"github-dagster-github\">\n<h1>GitHub (dagster_github)<a class=\"headerlink\" href=\"#github-dagster-github\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with GitHub Apps, to support performing various automation\noperations within your github repositories and with the tighter permissions scopes that github apps\nallow for vs using a personal token.</p>\n<p>Presently, it provides a thin wrapper on the <a class=\"reference external\" href=\"https://developer.github.com/v4/\">github v4 graphql API</a>.</p>\n<p>To use this integration, you\u2019ll first need to create a GitHub App for it.</p>\n<ol class=\"arabic simple\">\n<li><p><strong>Create App</strong>: Follow the instructions in\n<a class=\"reference external\" href=\"https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/\">https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/</a>, You will end up with a private key and App ID, which will be used when configuring the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-github</span></code> resource. <strong>Note</strong> you will need to grant your app the relevent permissions\nfor the API requests you want to make, for example to post issues it will need read/write access\nfor the issues repository permission, more info on GitHub application permissions can be found\n<a class=\"reference external\" href=\"https://developer.github.com/v3/apps/permissions/\">here</a></p></li>\n<li><p><strong>Install App</strong>: Follow the instructions in\n<a class=\"reference external\" href=\"https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/#step-7-install-the-app-on-your-account\">https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/#step-7-install-the-app-on-your-account</a></p></li>\n<li><p><strong>Find your installation_id</strong>: You can pull this from the GitHub app administration page,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">https://github.com/apps/&lt;app-name&gt;/installations/&lt;installation_id&gt;</span></code>. <strong>Note</strong> if your app is\ninstalled more than once you can also programatically retrieve these IDs.</p></li>\n</ol>\n<p>Sharing your App ID and Installation ID is fine, but make sure that the Private Key for your app is\nstored securily.</p>\n</div>\n<div class=\"section\" id=\"posting-issues\">\n<h1>Posting Issues<a class=\"headerlink\" href=\"#posting-issues\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Now, you can create issues in GitHub from Dagster with the GitHub resource:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">solid</span><span class=\"p\">,</span> <span class=\"n\">execute_pipeline</span><span class=\"p\">,</span> <span class=\"n\">ModeDefinition</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_github</span> <span class=\"kn\">import</span> <span class=\"n\">github_resource</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">github_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">create_issue</span><span class=\"p\">(</span>\n        <span class=\"n\">repo_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;dagster&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">repo_owner</span><span class=\"o\">=</span><span class=\"s1\">&#39;dagster-io&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Dagster</span><span class=\"se\">\\&#39;</span><span class=\"s1\">s first github issue&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s1\">&#39;this open source thing seems like a pretty good idea&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">:</span> <span class=\"n\">github_resource</span><span class=\"p\">})],</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">github_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">github_solid</span><span class=\"p\">()</span>\n\n<span class=\"n\">execute_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">github_pipeline</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;github_app_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_APP_ID&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_app_private_rsa_key&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_PRIVATE_KEY&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_installation_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_INSTALLATION_ID&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">}}}}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Run the above code, and you\u2019ll see the issue appear in GitHub:\n<span class=\"raw-html-m2r\"><img width=\"636\" src=\"https://user-images.githubusercontent.com/5943242/72079909-c6012300-32c9-11ea-8acc-19e6f5f3d067.png\"></span></p>\n<p>By provisioning <code class=\"docutils literal notranslate\"><span class=\"pre\">github_resource</span></code> as a Dagster pipeline resource, you can post to GitHub from\nwithin any solid execution.</p>\n</div>\n<div class=\"section\" id=\"executing-graphql-queries\">\n<h1>Executing GraphQL queries<a class=\"headerlink\" href=\"#executing-graphql-queries\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">solid</span><span class=\"p\">,</span> <span class=\"n\">execute_pipeline</span><span class=\"p\">,</span> <span class=\"n\">ModeDefinition</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_github</span> <span class=\"kn\">import</span> <span class=\"n\">github_resource</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">github_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n        <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">        query get_repo_id($repo_name: String!, $repo_owner: String!) {</span>\n<span class=\"s2\">            repository(name: $repo_name, owner: $repo_owner) {</span>\n<span class=\"s2\">                id</span>\n<span class=\"s2\">            }</span>\n<span class=\"s2\">        }</span>\n<span class=\"s2\">        &quot;&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;repo_name&quot;</span><span class=\"p\">:</span> <span class=\"n\">repo_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;repo_owner&quot;</span><span class=\"p\">:</span> <span class=\"n\">repo_owner</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">:</span> <span class=\"n\">github_resource</span><span class=\"p\">})],</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">github_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">github_solid</span><span class=\"p\">()</span>\n\n<span class=\"n\">execute_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">github_pipeline</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;github_app_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_APP_ID&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_app_private_rsa_key&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_PRIVATE_KEY&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_installation_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_INSTALLATION_ID&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">}}}}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_github", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster_k8s/", "title": "Kubernetes (dagster_k8s)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_ge/", "title": "Great Expectations (dagster_ge)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_k8s", "Kubernetes (dagster_k8s)", "N", "next"], ["sections/api/apidocs/libraries/dagster_ge", "Great Expectations (dagster_ge)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_github.rst.txt", "title": "GitHub (dagster_github)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">GitHub (dagster_github)</a></li>\n<li><a class=\"reference internal\" href=\"#posting-issues\">Posting Issues</a></li>\n<li><a class=\"reference internal\" href=\"#executing-graphql-queries\">Executing GraphQL queries</a></li>\n</ul>\n"}, "dagster_k8s": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"kubernetes-dagster-k8s\">\n<h1>Kubernetes (dagster_k8s)<a class=\"headerlink\" href=\"#kubernetes-dagster-k8s\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>See also the <a class=\"reference external\" href=\"https://docs.dagster.io/deploying/kubernetes/\">Kubernetes deployment guide</a>.</p>\n<p>This library contains utilities for running Dagster with Kubernetes. This includes a Python API\nallowing Dagit to launch runs as Kubernetes Jobs, as well as a Helm chart you can use as the basis\nfor a Dagster deployment on a Kubernetes cluster.</p>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster_k8s.K8sRunLauncher\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_k8s.</code><code class=\"sig-name descname\">K8sRunLauncher</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">service_account_name</em>, <em class=\"sig-param\">instance_config_map</em>, <em class=\"sig-param\">postgres_password_secret</em>, <em class=\"sig-param\">dagster_home</em>, <em class=\"sig-param\">job_image=None</em>, <em class=\"sig-param\">image_pull_policy='Always'</em>, <em class=\"sig-param\">image_pull_secrets=None</em>, <em class=\"sig-param\">load_incluster_config=True</em>, <em class=\"sig-param\">kubeconfig_file=None</em>, <em class=\"sig-param\">inst_data=None</em>, <em class=\"sig-param\">job_namespace='default'</em>, <em class=\"sig-param\">env_config_maps=None</em>, <em class=\"sig-param\">env_secrets=None</em>, <em class=\"sig-param\">k8s_client_batch_api=None</em>, <em class=\"sig-param\">k8s_client_core_api=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_k8s/launcher/#K8sRunLauncher\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_k8s.K8sRunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RunLauncher that starts a Kubernetes Job for each pipeline run.</p>\n<p>Encapsulates each pipeline run in a separate, isolated invocation of <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code>.</p>\n<p>You may configure a Dagster instance to use this RunLauncher by adding a section to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> like the following:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_launcher</span><span class=\"p\">:</span>\n    <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster_k8s.launcher</span>\n    <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">K8sRunLauncher</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n        <span class=\"nt\">service_account_name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">pipeline_run_service_account</span>\n        <span class=\"nt\">job_image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my_project/dagster_image:latest</span>\n        <span class=\"nt\">instance_config_map</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster-instance</span>\n        <span class=\"nt\">postgres_password_secret</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster-postgresql-secret</span>\n</pre></div>\n</div>\n<p>As always when using a <a class=\"reference internal\" href=\"../internals/#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a>, the values\nunder the <code class=\"docutils literal notranslate\"><span class=\"pre\">config</span></code> key of this YAML block will be passed to the constructor. The full list\nof acceptable values is given below by the constructor args.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>service_account_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the Kubernetes service account under which to run\nthe Job.</p></li>\n<li><p><strong>job_image</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> of the image to use for the Job\u2019s Dagster container.\nThis image will be run with the command\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster</span> <span class=\"pre\">api</span> <span class=\"pre\">execute_run</span></code>.\nWhen using user code deployments, the image should not be specified.</p></li>\n<li><p><strong>instance_config_map</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> of an existing Volume to mount into the pod in\norder to provide a ConfigMap for the Dagster instance. This Volume should contain a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> with appropriate values for run storage, event log storage, etc.</p></li>\n<li><p><strong>postgres_password_secret</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the Kubernetes Secret where the postgres\npassword can be retrieved. Will be mounted and supplied as an environment variable to\nthe Job Pod.</p></li>\n<li><p><strong>dagster_home</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The location of DAGSTER_HOME in the Job container; this is where the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file will be mounted from the instance ConfigMap specified above.</p></li>\n<li><p><strong>load_incluster_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Set this value if you are running the launcher\nwithin a k8s cluster. If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, we assume the launcher is running within the target\ncluster and load config using <code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_incluster_config</span></code>. Otherwise,\nwe will use the k8s config specified in <code class=\"docutils literal notranslate\"><span class=\"pre\">kubeconfig_file</span></code> (using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_kube_config</span></code>) or fall back to the default kubeconfig. Default:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>kubeconfig_file</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The kubeconfig file from which to load config. Defaults to\nNone (using the default kubeconfig).</p></li>\n<li><p><strong>image_pull_secrets</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Optionally, a list of dicts, each of\nwhich corresponds to a Kubernetes <code class=\"docutils literal notranslate\"><span class=\"pre\">LocalObjectReference</span></code> (e.g.,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">{'name':</span> <span class=\"pre\">'myRegistryName'}</span></code>). This allows you to specify the <code class=\"docutils literal notranslate\"><span class=\"pre\">`imagePullSecrets</span></code> on\na pod basis. Typically, these will be provided through the service account, when needed,\nand you will not need to pass this argument.\nSee:\n<a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod\">https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod</a>\nand <a class=\"reference external\" href=\"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#podspec-v1-core\">https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#podspec-v1-core</a>.</p></li>\n<li><p><strong>image_pull_policy</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Allows the image pull policy to be overridden, e.g. to\nfacilitate local testing with <a class=\"reference external\" href=\"https://kind.sigs.k8s.io/\">kind</a>. Default:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Always&quot;</span></code>. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/containers/images/#updating-images\">https://kubernetes.io/docs/concepts/containers/images/#updating-images</a>.</p></li>\n<li><p><strong>job_namespace</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The namespace into which to launch new jobs. Note that any\nother Kubernetes resources the Job requires (such as the service account) must be\npresent in this namespace. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;default&quot;</span></code></p></li>\n<li><p><strong>env_config_maps</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of custom ConfigMapEnvSource names from which to\ndraw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:\n<a class=\"reference external\" href=\"https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container\">https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container</a></p></li>\n<li><p><strong>env_secrets</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of custom Secret names from which to\ndraw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:\n<a class=\"reference external\" href=\"https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables\">https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables</a></p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_k8s.K8sScheduler\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_k8s.</code><code class=\"sig-name descname\">K8sScheduler</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">dagster_home</em>, <em class=\"sig-param\">service_account_name</em>, <em class=\"sig-param\">instance_config_map</em>, <em class=\"sig-param\">postgres_password_secret</em>, <em class=\"sig-param\">job_image</em>, <em class=\"sig-param\">load_incluster_config=True</em>, <em class=\"sig-param\">scheduler_namespace='default'</em>, <em class=\"sig-param\">image_pull_policy='Always'</em>, <em class=\"sig-param\">image_pull_secrets=None</em>, <em class=\"sig-param\">kubeconfig_file=None</em>, <em class=\"sig-param\">inst_data=None</em>, <em class=\"sig-param\">env_config_maps=None</em>, <em class=\"sig-param\">env_secrets=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_k8s/scheduler/#K8sScheduler\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_k8s.K8sScheduler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Scheduler implementation on top of Kubernetes CronJob.</p>\n<p>Enable this scheduler by adding it to your dagster.yaml, or by configuring the scheduler\nsection of the Helm chart\n<a class=\"reference external\" href=\"https://github.com/dagster-io/dagster/tree/master/helm\">https://github.com/dagster-io/dagster/tree/master/helm</a></p>\n</dd></dl>\n\n<div class=\"section\" id=\"python-api\">\n<h2>Python API<a class=\"headerlink\" href=\"#python-api\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">K8sRunLauncher</span></code> allows Dagit instances to be configured to launch new runs by starting per-run\nKubernetes Jobs. To configure the <code class=\"docutils literal notranslate\"><span class=\"pre\">K8sRunLauncher</span></code>, your <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> should include a section\nlike:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_launcher</span><span class=\"p\">:</span>\n  <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster_k8s.launcher</span>\n  <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">K8sRunLauncher</span>\n  <span class=\"nt\">config</span><span class=\"p\">:</span>\n    <span class=\"nt\">image_pull_secrets</span><span class=\"p\">:</span>\n    <span class=\"nt\">service_account_name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster</span>\n    <span class=\"nt\">job_image</span><span class=\"p\">:</span> <span class=\"s\">&quot;my-company.com/image:latest&quot;</span>\n    <span class=\"nt\">dagster_home</span><span class=\"p\">:</span> <span class=\"s\">&quot;/opt/dagster/dagster_home&quot;</span>\n    <span class=\"nt\">postgres_password_secret</span><span class=\"p\">:</span> <span class=\"s\">&quot;dagster-postgresql-secret&quot;</span>\n    <span class=\"nt\">image_pull_policy</span><span class=\"p\">:</span> <span class=\"s\">&quot;IfNotPresent&quot;</span>\n    <span class=\"nt\">job_namespace</span><span class=\"p\">:</span> <span class=\"s\">&quot;dagster&quot;</span>\n    <span class=\"nt\">instance_config_map</span><span class=\"p\">:</span> <span class=\"s\">&quot;dagster-instance&quot;</span>\n    <span class=\"nt\">env_config_maps</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"s\">&quot;dagster-k8s-job-runner-env&quot;</span>\n    <span class=\"nt\">env_secrets</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"s\">&quot;dagster-k8s-some-secret&quot;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"helm-chart\">\n<h2>Helm chart<a class=\"headerlink\" href=\"#helm-chart\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>For local dev (e.g., on kind or minikube):</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>helm install <span class=\"se\">\\</span>\n    --set dagit.image.repository<span class=\"o\">=</span><span class=\"s2\">&quot;dagster.io/buildkite-test-image&quot;</span> <span class=\"se\">\\</span>\n    --set dagit.image.tag<span class=\"o\">=</span><span class=\"s2\">&quot;py37-latest&quot;</span> <span class=\"se\">\\</span>\n    --set job_runner.image.repository<span class=\"o\">=</span><span class=\"s2\">&quot;dagster.io/buildkite-test-image&quot;</span> <span class=\"se\">\\</span>\n    --set job_runner.image.tag<span class=\"o\">=</span><span class=\"s2\">&quot;py37-latest&quot;</span> <span class=\"se\">\\</span>\n    --set <span class=\"nv\">imagePullPolicy</span><span class=\"o\">=</span><span class=\"s2\">&quot;IfNotPresent&quot;</span> <span class=\"se\">\\</span>\n    dagster <span class=\"se\">\\</span>\n    helm/dagster/\n</pre></div>\n</div>\n<p>Upon installation, the Helm chart will provide instructions for port forwarding Dagit and Flower (if\nconfigured).</p>\n</div>\n<div class=\"section\" id=\"running-tests\">\n<h2>Running tests<a class=\"headerlink\" href=\"#running-tests\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>To run the unit tests:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pytest</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"s2\">&quot;not integration&quot;</span>\n</pre></div>\n</div>\n<p>To run the integration tests, you must have <a class=\"reference external\" href=\"https://docs.docker.com/install/\">Docker</a>,\n<a class=\"reference external\" href=\"https://kind.sigs.k8s.io/docs/user/quick-start#installation\">kind</a>,\nand <a class=\"reference external\" href=\"https://helm.sh/docs/intro/install/\">helm</a> installed.</p>\n<p>On macOS:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">brew</span> <span class=\"n\">install</span> <span class=\"n\">kind</span>\n<span class=\"n\">brew</span> <span class=\"n\">install</span> <span class=\"n\">helm</span>\n</pre></div>\n</div>\n<p>Docker must be running.</p>\n<p>You may experience slow first test runs thanks to image pulls (run <code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span> <span class=\"pre\">-svv</span> <span class=\"pre\">--fulltrace</span></code> for\nvisibility). Building images and loading them to the kind cluster is slow, and there is\nno visibility into the progress of the load.</p>\n<p><strong>NOTE:</strong> This process is quite slow, as it requires bootstrapping a local <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code> cluster with Docker images and the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-k8s</span></code> Helm chart. For faster development, you can either:</p>\n<ol class=\"arabic simple\">\n<li><p>Keep a warm kind cluster</p></li>\n<li><p>Use a remote K8s cluster, e.g. via AWS EKS or GCP GKE</p></li>\n</ol>\n<p>Instructions are below.</p>\n<div class=\"section\" id=\"faster-local-development-with-kind\">\n<h3>Faster local development (with kind)<a class=\"headerlink\" href=\"#faster-local-development-with-kind\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You may find that the kind cluster creation, image loading, and kind cluster creation loop\nis too slow for effective local dev.</p>\n<p>You may bypass cluster creation and image loading in the following way. First add the <code class=\"docutils literal notranslate\"><span class=\"pre\">--no-cleanup</span></code>\nflag to your pytest invocation:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>pytest --no-cleanup -s -vvv -m <span class=\"s2\">&quot;not integration&quot;</span>\n</pre></div>\n</div>\n<p>The tests will run as before, but the kind cluster will be left running after the tests are completed.</p>\n<p>For subsequent test runs, you can run:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>pytest --kind-cluster<span class=\"o\">=</span><span class=\"s2\">&quot;cluster-d9971c84d44d47f382a2928c8c161faa&quot;</span> --existing-helm-namespace<span class=\"o\">=</span><span class=\"s2\">&quot;dagster-test-95590a&quot;</span> -s -vvv -m <span class=\"s2\">&quot;not integration&quot;</span>\n</pre></div>\n</div>\n<p>This will bypass cluster creation, image loading, and Helm chart installation, for much faster tests.</p>\n<p>The kind cluster name and Helm namespace for this command can be found in the logs, or retrieved via the respective CLIs, using <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span> <span class=\"pre\">get</span> <span class=\"pre\">clusters</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">kubectl</span> <span class=\"pre\">get</span> <span class=\"pre\">namespaces</span></code>. Note that for <code class=\"docutils literal notranslate\"><span class=\"pre\">kubectl</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code> to work correctly with a kind cluster, you should override your kubeconfig file location with:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>kind get kubeconfig --name kind-test &gt; /tmp/kubeconfig\n<span class=\"nb\">export</span> <span class=\"nv\">KUBECONFIG</span><span class=\"o\">=</span>/tmp/kubeconfig\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"manual-kind-cluster-setup\">\n<h3>Manual kind cluster setup<a class=\"headerlink\" href=\"#manual-kind-cluster-setup\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The test fixtures provided by <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-k8s</span></code> automate the process described below, but sometimes its useful to manually configure a kind cluster and load images onto it.</p>\n<p>First, ensure you have a Docker image appropriate for your Python version. Run, from the root of\nthe repo:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>./python_modules/dagster-test/dagster_test/test_project/build.sh <span class=\"m\">3</span>.7.6 <span class=\"se\">\\</span>\n    dagster.io.priv/buildkite-test-image:py37-latest\n</pre></div>\n</div>\n<p>In the above invocation, the Python majmin version should be appropriate for your desired tests.</p>\n<p>Then run the following commands to create the cluster and load the image. Note that there is no\nfeedback from the loading process.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>kind create cluster --name kind-test\nkind load docker-image --name kind-test dagster.io/dagster-docker-buildkite:py37-latest\n</pre></div>\n</div>\n<p>If you are deploying the Helm chart with an in-cluster Postgres (rather than an external database),\nand/or with dagster-celery workers (and a RabbitMQ), you\u2019ll also want to have images present for\nrabbitmq and postgresql:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>docker pull docker.io/bitnami/rabbitmq\ndocker pull docker.io/bitnami/postgresql\n\nkind load docker-image --name kind-test docker.io/bitnami/rabbitmq:latest\nkind load docker-image --name kind-test docker.io/bitnami/postgresql:latest\n</pre></div>\n</div>\n<p>Then you can run pytest as follows:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>pytest --kind-cluster<span class=\"o\">=</span>kind-test\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"faster-local-development-with-an-existing-k8s-cluster\">\n<h2>Faster local development (with an existing K8s cluster)<a class=\"headerlink\" href=\"#faster-local-development-with-an-existing-k8s-cluster\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>If you already have a development K8s cluster available, you can run tests on that cluster vs. running locally in <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code>.</p>\n<p>For this to work, first build and deploy the test image to a registry available to your cluster. For example, with ECR:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>./python_modules/dagster-test/dagster_test/test_project/build.sh 3.7.6\ndocker tag dagster-docker-buildkite:latest $AWS_ACCOUNT_ID.dkr.ecr.us-west-1.amazonaws.com/dagster-k8s-tests:2020-04-21T21-04-06\n\naws ecr get-login --no-include-email --region us-west-1 | sh\ndocker push $AWS_ACCOUNT_ID.dkr.ecr.us-west-1.amazonaws.com/dagster-k8s-tests:2020-04-21T21-04-06\n</pre></div>\n</div>\n<p>Then, you can run tests on EKS with:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">export</span> <span class=\"n\">DAGSTER_DOCKER_IMAGE_TAG</span><span class=\"o\">=</span><span class=\"s2\">&quot;2020-04-21T21-04-06&quot;</span>\n<span class=\"n\">export</span> <span class=\"n\">DAGSTER_DOCKER_REPOSITORY</span><span class=\"o\">=</span><span class=\"s2\">&quot;$AWS_ACCOUNT_ID.dkr.ecr.us-west-1.amazonaws.com&quot;</span>\n<span class=\"n\">export</span> <span class=\"n\">DAGSTER_DOCKER_IMAGE</span><span class=\"o\">=</span><span class=\"s2\">&quot;dagster-k8s-tests&quot;</span>\n\n<span class=\"c1\"># First run with --no-cleanup to leave Helm chart in place</span>\n<span class=\"n\">pytest</span> <span class=\"o\">--</span><span class=\"n\">cluster</span><span class=\"o\">-</span><span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;kubeconfig&quot;</span> <span class=\"o\">--</span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">cleanup</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"o\">-</span><span class=\"n\">vvv</span>\n\n<span class=\"c1\"># Subsequent runs against existing Helm chart</span>\n<span class=\"n\">pytest</span> <span class=\"o\">--</span><span class=\"n\">cluster</span><span class=\"o\">-</span><span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;kubeconfig&quot;</span> <span class=\"o\">--</span><span class=\"n\">existing</span><span class=\"o\">-</span><span class=\"n\">helm</span><span class=\"o\">-</span><span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"s2\">&quot;dagster-test-&lt;some id&gt;&quot;</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"o\">-</span><span class=\"n\">vvv</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"validating-helm-charts\">\n<h2>Validating Helm charts<a class=\"headerlink\" href=\"#validating-helm-charts\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>To test / validate Helm charts, you can run:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>helm install dagster --dry-run --debug helm/dagster\nhelm lint\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"enabling-gcr-access-from-minikube\">\n<h2>Enabling GCR access from Minikube<a class=\"headerlink\" href=\"#enabling-gcr-access-from-minikube\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>To enable GCR access from Minikube:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>kubectl create secret docker-registry element-dev-key <span class=\"se\">\\</span>\n    --docker-server<span class=\"o\">=</span>https://gcr.io <span class=\"se\">\\</span>\n    --docker-username<span class=\"o\">=</span>oauth2accesstoken <span class=\"se\">\\</span>\n    --docker-password<span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"k\">$(</span>gcloud auth print-access-token<span class=\"k\">)</span><span class=\"s2\">&quot;</span> <span class=\"se\">\\</span>\n    --docker-email<span class=\"o\">=</span>my@email.com\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"a-note-about-pvcs\">\n<h2>A note about PVCs<a class=\"headerlink\" href=\"#a-note-about-pvcs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Both the Postgres and the RabbitMQ Helm charts will store credentials using Persistent Volume\nClaims, which will outlive test invocations and calls to <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span> <span class=\"pre\">uninstall</span></code>. These must be deleted if\nyou want to change credentials. To view your pvcs, run:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">kubectl</span> <span class=\"n\">get</span> <span class=\"n\">pvc</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"testing-redis\">\n<h2>Testing Redis<a class=\"headerlink\" href=\"#testing-redis\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The Redis Helm chart installs w/ a randomly-generated password by default; turn this off:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">helm</span> <span class=\"n\">install</span> <span class=\"n\">dagredis</span> <span class=\"n\">stable</span><span class=\"o\">/</span><span class=\"n\">redis</span> <span class=\"o\">--</span><span class=\"nb\">set</span> <span class=\"n\">usePassword</span><span class=\"o\">=</span><span class=\"n\">false</span>\n</pre></div>\n</div>\n<p>Then, to connect to your database from outside the cluster execute the following commands:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">kubectl</span> <span class=\"n\">port</span><span class=\"o\">-</span><span class=\"n\">forward</span> <span class=\"o\">--</span><span class=\"n\">namespace</span> <span class=\"n\">default</span> <span class=\"n\">svc</span><span class=\"o\">/</span><span class=\"n\">dagredis</span><span class=\"o\">-</span><span class=\"n\">master</span> <span class=\"mi\">6379</span><span class=\"p\">:</span><span class=\"mi\">6379</span>\n<span class=\"n\">redis</span><span class=\"o\">-</span><span class=\"n\">cli</span> <span class=\"o\">-</span><span class=\"n\">h</span> <span class=\"mf\">127.0</span><span class=\"o\">.</span><span class=\"mf\">0.1</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"mi\">6379</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_k8s", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster_pagerduty/", "title": "PagerDuty (dagster_pagerduty)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_github/", "title": "GitHub (dagster_github)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_pagerduty", "PagerDuty (dagster_pagerduty)", "N", "next"], ["sections/api/apidocs/libraries/dagster_github", "GitHub (dagster_github)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_k8s.rst.txt", "title": "Kubernetes (dagster_k8s)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Kubernetes (dagster_k8s)</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a><ul>\n<li><a class=\"reference internal\" href=\"#python-api\">Python API</a></li>\n<li><a class=\"reference internal\" href=\"#helm-chart\">Helm chart</a></li>\n<li><a class=\"reference internal\" href=\"#running-tests\">Running tests</a><ul>\n<li><a class=\"reference internal\" href=\"#faster-local-development-with-kind\">Faster local development (with kind)</a></li>\n<li><a class=\"reference internal\" href=\"#manual-kind-cluster-setup\">Manual kind cluster setup</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#faster-local-development-with-an-existing-k8s-cluster\">Faster local development (with an existing K8s cluster)</a></li>\n<li><a class=\"reference internal\" href=\"#validating-helm-charts\">Validating Helm charts</a></li>\n<li><a class=\"reference internal\" href=\"#enabling-gcr-access-from-minikube\">Enabling GCR access from Minikube</a></li>\n<li><a class=\"reference internal\" href=\"#a-note-about-pvcs\">A note about PVCs</a></li>\n<li><a class=\"reference internal\" href=\"#testing-redis\">Testing Redis</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster_pagerduty": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"pagerduty-dagster-pagerduty\">\n<h1>PagerDuty (dagster_pagerduty)<a class=\"headerlink\" href=\"#pagerduty-dagster-pagerduty\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with PagerDuty, to support creating alerts from your Dagster\ncode.</p>\n<p>Presently, it provides a thin wrapper on the <a class=\"reference external\" href=\"https://v2.developer.pagerduty.com/docs/events-api-v2\">Events V2 API</a>.</p>\n</div>\n<div class=\"section\" id=\"getting-started\">\n<h1>Getting Started<a class=\"headerlink\" href=\"#getting-started\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>You can install this library with:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dagster_pagerduty</span>\n</pre></div>\n</div>\n<p>To use this integration, you\u2019ll first need to create a PagerDuty integration. There are instructions\n<a class=\"reference external\" href=\"https://support.pagerduty.com/docs/services-and-integrations#section-events-api-v2\">here</a> for\ncreating a new PagerDuty service &amp; integration.</p>\n<p>As noted in the PagerDuty documentation, you\u2019ll find an integration key (also referred to as a\n\u201crouting key\u201d) on the Integrations tab for your new service. This key is used to authorize events\ncreated from the PagerDuty events API.</p>\n<p>Once your service/integration is created, you can provision a PagerDuty resource and issue PagerDuty\nalerts from within your solids.</p>\n<dl class=\"data\">\n<dt id=\"dagster_pagerduty.pagerduty_resource\">\n<code class=\"sig-prename descclassname\">dagster_pagerduty.</code><code class=\"sig-name descname\">pagerduty_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_pagerduty/resources/#pagerduty_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pagerduty.pagerduty_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A resource for posting events (alerts) to PagerDuty.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;pagerduty&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">pagerduty_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">pagerduty</span><span class=\"o\">.</span><span class=\"n\">EventV2_create</span><span class=\"p\">(</span>\n        <span class=\"n\">summary</span><span class=\"o\">=</span><span class=\"s1\">&#39;alert from dagster&#39;</span>\n        <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">&#39;localhost&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">severity</span><span class=\"o\">=</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">event_action</span><span class=\"o\">=</span><span class=\"s1\">&#39;trigger&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;pagerduty&#39;</span><span class=\"p\">:</span> <span class=\"n\">pagerduty_resource</span><span class=\"p\">})],</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pd_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">pagerduty_solid</span><span class=\"p\">()</span>\n\n<span class=\"n\">execute_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">pd_pipeline</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;pagerduty&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;routing_key&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;0123456789abcdef0123456789abcdef&#39;</span><span class=\"p\">}}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_pagerduty", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster_pandas/", "title": "Pandas (dagster_pandas)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_k8s/", "title": "Kubernetes (dagster_k8s)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_pandas", "Pandas (dagster_pandas)", "N", "next"], ["sections/api/apidocs/libraries/dagster_k8s", "Kubernetes (dagster_k8s)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_pagerduty.rst.txt", "title": "PagerDuty (dagster_pagerduty)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">PagerDuty (dagster_pagerduty)</a></li>\n<li><a class=\"reference internal\" href=\"#getting-started\">Getting Started</a></li>\n</ul>\n"}, "dagster_pandas": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"pandas-dagster-pandas\">\n<h1>Pandas (dagster_pandas)<a class=\"headerlink\" href=\"#pandas-dagster-pandas\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The <cite>dagster_pandas</cite> library provides utilities for using pandas with Dagster and for implementing\nvalidation on pandas <cite>DataFrames</cite>. A good place to start with <cite>dagster_pandas</cite> is the <a class=\"reference external\" href=\"/overview/packages/dagster_pandas\">validation\nguide</a>.</p>\n<dl class=\"function\">\n<dt id=\"dagster_pandas.create_dagster_pandas_dataframe_type\">\n<code class=\"sig-prename descclassname\">dagster_pandas.</code><code class=\"sig-name descname\">create_dagster_pandas_dataframe_type</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">columns=None</em>, <em class=\"sig-param\">event_metadata_fn=None</em>, <em class=\"sig-param\">dataframe_constraints=None</em>, <em class=\"sig-param\">loader=None</em>, <em class=\"sig-param\">materializer=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/data_frame/#create_dagster_pandas_dataframe_type\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.create_dagster_pandas_dataframe_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs a custom pandas dataframe dagster type.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the dagster pandas type.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A markdown-formatted string, displayed in tooling.</p></li>\n<li><p><strong>columns</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster_pandas.PandasColumn\" title=\"dagster_pandas.PandasColumn\"><em>PandasColumn</em></a><em>]</em><em>]</em>) \u2013 A list of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PandasColumn</span></code> objects\nwhich express dataframe column schemas and constraints.</p></li>\n<li><p><strong>event_metadata_fn</strong> (<em>Optional</em><em>[</em><em>func</em><em>]</em>) \u2013 A callable which takes your dataframe and returns a list of EventMetadata\nwhich allow you to express things like summary statistics during runtime.</p></li>\n<li><p><strong>dataframe_constraints</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>DataFrameConstraint</em><em>]</em><em>]</em>) \u2013 A list of objects that inherit from\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DataFrameConstraint</span></code>. This allows you to express dataframe-level constraints.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><em>DagsterTypeLoader</em><em>]</em>) \u2013 An instance of a class that\ninherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code>. If None, we will default\nto using <cite>dataframe_loader</cite>.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><em>DagsterTypeMaterializer</em><em>]</em>) \u2013 An instance of a class\nthat inherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code>. If None, we will\ndefault to using <cite>dataframe_materializer</cite>.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_pandas.RowCountConstraint\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_pandas.</code><code class=\"sig-name descname\">RowCountConstraint</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">num_allowed_rows</em>, <em class=\"sig-param\">error_tolerance=0</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/constraints/#RowCountConstraint\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.RowCountConstraint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dataframe constraint that validates the expected count of rows.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>num_allowed_rows</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The number of allowed rows in your dataframe.</p></li>\n<li><p><strong>error_tolerance</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The acceptable threshold if you are not completely certain. Defaults to 0.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_pandas.StrictColumnsConstraint\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_pandas.</code><code class=\"sig-name descname\">StrictColumnsConstraint</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">strict_column_list</em>, <em class=\"sig-param\">enforce_ordering=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/constraints/#StrictColumnsConstraint\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.StrictColumnsConstraint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dataframe constraint that validates column existence and ordering.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>strict_column_list</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The exact list of columns that your dataframe must have.</p></li>\n<li><p><strong>enforce_ordering</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, will enforce that the ordering of column names must match.\nDefault is False.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_pandas.PandasColumn\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_pandas.</code><code class=\"sig-name descname\">PandasColumn</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">constraints=None</em>, <em class=\"sig-param\">is_required=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/validation/#PandasColumn\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The main API for expressing column level schemas and constraints for your custom dataframe\ntypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf th column exists, the validate function will validate the column. Defaults to True.</p></li>\n<li><p><strong>constraints</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Constraint</em><em>]</em><em>]</em>) \u2013 List of constraint objects that indicate the\nvalidation rules for the pandas column.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster_pandas.PandasColumn.boolean_column\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">boolean_column</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">non_nullable=False</em>, <em class=\"sig-param\">unique=False</em>, <em class=\"sig-param\">ignore_missing_vals=False</em>, <em class=\"sig-param\">is_required=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/validation/#PandasColumn.boolean_column\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.boolean_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses boolean constraints on boolean dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_pandas.PandasColumn.categorical_column\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">categorical_column</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">categories</em>, <em class=\"sig-param\">of_types='object'</em>, <em class=\"sig-param\">non_nullable=False</em>, <em class=\"sig-param\">unique=False</em>, <em class=\"sig-param\">ignore_missing_vals=False</em>, <em class=\"sig-param\">is_required=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/validation/#PandasColumn.categorical_column\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.categorical_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses categorical constraints on specified dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>categories</strong> (<em>List</em><em>[</em><em>Any</em><em>]</em>) \u2013 The valid set of buckets that all values in the column must match.</p></li>\n<li><p><strong>of_types</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The expected dtype[s] that your categories and values must\nabide by.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in\nthe column ought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the\nconstraint will only evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_pandas.PandasColumn.datetime_column\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">datetime_column</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">min_datetime=Timestamp('1677-09-21 00:12:43.145225')</em>, <em class=\"sig-param\">max_datetime=Timestamp('2262-04-11 23:47:16.854775807')</em>, <em class=\"sig-param\">non_nullable=False</em>, <em class=\"sig-param\">unique=False</em>, <em class=\"sig-param\">ignore_missing_vals=False</em>, <em class=\"sig-param\">is_required=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/validation/#PandasColumn.datetime_column\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.datetime_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses datetime constraints on \u2018datetime64[ns]\u2019 dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>min_datetime</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The lower bound for values you expect in this column.\nDefaults to pandas.Timestamp.min.</p></li>\n<li><p><strong>max_datetime</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The upper bound for values you expect in this column.\nDefaults to pandas.Timestamp.max.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_pandas.PandasColumn.exists\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">exists</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">non_nullable=False</em>, <em class=\"sig-param\">unique=False</em>, <em class=\"sig-param\">ignore_missing_vals=False</em>, <em class=\"sig-param\">is_required=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/validation/#PandasColumn.exists\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.exists\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses existence constraints.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_pandas.PandasColumn.float_column\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">float_column</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">min_value=-inf</em>, <em class=\"sig-param\">max_value=inf</em>, <em class=\"sig-param\">non_nullable=False</em>, <em class=\"sig-param\">unique=False</em>, <em class=\"sig-param\">ignore_missing_vals=False</em>, <em class=\"sig-param\">is_required=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/validation/#PandasColumn.float_column\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.float_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses numeric constraints on float dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>min_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The lower bound for values you expect in this column. Defaults to -float(\u2018inf\u2019)</p></li>\n<li><p><strong>max_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The upper bound for values you expect in this column. Defaults to float(\u2018inf\u2019)</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_pandas.PandasColumn.integer_column\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">integer_column</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">min_value=-inf</em>, <em class=\"sig-param\">max_value=inf</em>, <em class=\"sig-param\">non_nullable=False</em>, <em class=\"sig-param\">unique=False</em>, <em class=\"sig-param\">ignore_missing_vals=False</em>, <em class=\"sig-param\">is_required=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/validation/#PandasColumn.integer_column\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.integer_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses numeric constraints on integer dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>min_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The lower bound for values you expect in this column. Defaults to -float(\u2018inf\u2019)</p></li>\n<li><p><strong>max_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The upper bound for values you expect in this column. Defaults to float(\u2018inf\u2019)</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_pandas.PandasColumn.numeric_column\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">numeric_column</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">min_value=-inf</em>, <em class=\"sig-param\">max_value=inf</em>, <em class=\"sig-param\">non_nullable=False</em>, <em class=\"sig-param\">unique=False</em>, <em class=\"sig-param\">ignore_missing_vals=False</em>, <em class=\"sig-param\">is_required=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/validation/#PandasColumn.numeric_column\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.numeric_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses numeric constraints numeric dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>min_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The lower bound for values you expect in this column. Defaults to -float(\u2018inf\u2019)</p></li>\n<li><p><strong>max_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The upper bound for values you expect in this column. Defaults to float(\u2018inf\u2019)</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_pandas.PandasColumn.string_column\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">string_column</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">non_nullable=False</em>, <em class=\"sig-param\">unique=False</em>, <em class=\"sig-param\">ignore_missing_vals=False</em>, <em class=\"sig-param\">is_required=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_pandas/validation/#PandasColumn.string_column\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.string_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses constraints on string dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_pandas.DataFrame\">\n<code class=\"sig-prename descclassname\">dagster_pandas.</code><code class=\"sig-name descname\">DataFrame</code><em class=\"property\"> = &lt;dagster.core.types.dagster_type.DagsterType object&gt;</em><a class=\"headerlink\" href=\"#dagster_pandas.DataFrame\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a type in dagster. These can be used in the inputs and outputs of solids.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>type_check_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../execution/#dagster.TypeCheckContext\" title=\"dagster.TypeCheckContext\"><em>TypeCheckContext</em></a><em>, </em><em>Any</em><em>]</em><em>, </em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><a class=\"reference internal\" href=\"../solids/#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><em>TypeCheck</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The function that defines the type check. It takes the value flowing\nthrough the input or output of the solid. If it passes, return either\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or a <a class=\"reference internal\" href=\"../solids/#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. If it fails,\nreturn either <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> or a <a class=\"reference internal\" href=\"../solids/#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.\nThe first argument must be named <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> (or, if unused, <code class=\"docutils literal notranslate\"><span class=\"pre\">_</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">_context</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">context_</span></code>).\nUse <code class=\"docutils literal notranslate\"><span class=\"pre\">required_resource_keys</span></code> for access to resources.</p></li>\n<li><p><strong>key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 <p>The unique key to identify types programatically.\nThe key property always has a value. If you omit key to the argument\nto the init function, it instead receives the value of <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>. If\nneither <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> nor <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> is provided, a <code class=\"docutils literal notranslate\"><span class=\"pre\">CheckError</span></code> is thrown.</p>\n<p>In the case of a generic type such as <code class=\"docutils literal notranslate\"><span class=\"pre\">List</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">Optional</span></code>, this is\ngenerated programatically based on the type parameters.</p>\n<p>For most use cases, name should be set and the key argument should\nnot be specified.</p>\n</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A unique name given by a user. If <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code>\nbecomes this value. Name is not given in a case where the user does\nnot specify a unique name for this type, such as a generic class.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A markdown-formatted string, displayed in tooling.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><em>DagsterTypeLoader</em><em>]</em>) \u2013 An instance of a class that\ninherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code> and can map config data to a value of\nthis type. Specify this argument if you will need to shim values of this type using the\nconfig machinery. As a rule, you should use the\n<a class=\"reference internal\" href=\"../types/#dagster.dagster_type_loader\" title=\"dagster.dagster_type_loader\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_loader</span></code></a> decorator to construct\nthese arguments.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><em>DagsterTypeMaterializer</em><em>]</em>) \u2013 An instance of a class\nthat inherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code> and can persist values of\nthis type. As a rule, you should use the\n<a class=\"reference internal\" href=\"../types/#dagster.dagster_type_materializer\" title=\"dagster.dagster_type_materializer\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_materializer</span></code></a>\ndecorator to construct these arguments.</p></li>\n<li><p><strong>serialization_strategy</strong> (<em>Optional</em><em>[</em><em>SerializationStrategy</em><em>]</em>) \u2013 An instance of a class that\ninherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SerializationStrategy</span></code>. The default strategy for serializing\nthis value when automatically persisting it between execution steps. You should set\nthis value if the ordinary serialization machinery (e.g., pickle) will not be adequate\nfor this type.</p></li>\n<li><p><strong>auto_plugins</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Type</em><em>[</em><em>TypeStoragePlugin</em><em>]</em><em>]</em><em>]</em>) \u2013 If types must be serialized differently\ndepending on the storage being used for intermediates, they should specify this\nargument. In these cases the serialization_strategy argument is not sufficient because\nserialization requires specialized API calls, e.g. to call an S3 API directly instead\nof using a generic file object. See <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster_pyspark.DataFrame</span></code> for an example.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Resource keys required by the <code class=\"docutils literal notranslate\"><span class=\"pre\">type_check_fn</span></code>.</p></li>\n<li><p><strong>is_builtin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Defaults to False. This is used by tools to display or\nfilter built-in types (such as <a class=\"reference internal\" href=\"../types/#dagster.String\" title=\"dagster.String\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">String</span></code></a>, <a class=\"reference internal\" href=\"../types/#dagster.Int\" title=\"dagster.Int\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Int</span></code></a>) to visually distinguish\nthem from user-defined types. Meant for internal use.</p></li>\n<li><p><strong>kind</strong> (<em>DagsterTypeKind</em>) \u2013 Defaults to None. This is used to determine the kind of runtime type\nfor InputDefinition and OutputDefinition type checking.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_pandas", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_papertrail/", "title": "Papertrail (dagster_papertrail)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_pagerduty/", "title": "PagerDuty (dagster_pagerduty)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_papertrail", "Papertrail (dagster_papertrail)", "N", "next"], ["sections/api/apidocs/libraries/dagster_pagerduty", "PagerDuty (dagster_pagerduty)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_pandas.rst.txt", "title": "Pandas (dagster_pandas)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Pandas (dagster_pandas)</a></li>\n</ul>\n"}, "dagster_papertrail": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"papertrail-dagster-papertrail\">\n<h1>Papertrail (dagster_papertrail)<a class=\"headerlink\" href=\"#papertrail-dagster-papertrail\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with <a class=\"reference external\" href=\"https://papertrailapp.com\">Papertrail</a> for logging.</p>\n<p>You can easily set up your Dagster pipeline to log to Papertrail. You\u2019ll need an active Papertrail\naccount, and have your papertrail URL and port handy.</p>\n<dl class=\"data\">\n<dt id=\"dagster_papertrail.papertrail_logger\">\n<code class=\"sig-prename descclassname\">dagster_papertrail.</code><code class=\"sig-name descname\">papertrail_logger</code><em class=\"property\"> LoggerDefinition</em><a class=\"headerlink\" href=\"#dagster_papertrail.papertrail_logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core class for defining loggers.</p>\n<p>Loggers are pipeline-scoped logging handlers, which will be automatically invoked whenever\nsolids in a pipeline log messages.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>logger_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../loggers/#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><em>InitLoggerContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><em>logging.Logger</em></a><em>]</em>) \u2013 User-provided function to\ninstantiate the logger. This logger will be automatically invoked whenever the methods\non <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code> are called from within solid compute logic.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../config/#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this logger.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_papertrail", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_postgres/", "title": "PostgreSQL (dagster_postgres)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_pandas/", "title": "Pandas (dagster_pandas)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_postgres", "PostgreSQL (dagster_postgres)", "N", "next"], ["sections/api/apidocs/libraries/dagster_pandas", "Pandas (dagster_pandas)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_papertrail.rst.txt", "title": "Papertrail (dagster_papertrail)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Papertrail (dagster_papertrail)</a></li>\n</ul>\n"}, "dagster_postgres": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"postgresql-dagster-postgres\">\n<h1>PostgreSQL (dagster_postgres)<a class=\"headerlink\" href=\"#postgresql-dagster-postgres\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster_postgres.PostgresEventLogStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_postgres.</code><code class=\"sig-name descname\">PostgresEventLogStorage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">postgres_url</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_postgres/event_log/event_log/#PostgresEventLogStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_postgres.PostgresEventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Postgres-backed event log storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>To use Postgres for event log storage, you can add a block such as the following to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<p>Note that the fields in this config are <a class=\"reference internal\" href=\"../config/#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a> and\n<a class=\"reference internal\" href=\"../config/#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a> and can be configured from environment variables.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_postgres.PostgresRunStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_postgres.</code><code class=\"sig-name descname\">PostgresRunStorage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">postgres_url</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_postgres/run_storage/run_storage/#PostgresRunStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_postgres.PostgresRunStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Postgres-backed run storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>To use Postgres for run storage, you can add a block such as the following to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<p>Note that the fields in this config are <a class=\"reference internal\" href=\"../config/#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a> and\n<a class=\"reference internal\" href=\"../config/#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a> and can be configured from environment variables.</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_postgres.PostgresScheduleStorage\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_postgres.</code><code class=\"sig-name descname\">PostgresScheduleStorage</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">postgres_url</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_postgres/schedule_storage/schedule_storage/#PostgresScheduleStorage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_postgres.PostgresScheduleStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Postgres-backed run storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>To use Postgres for schedule storage, you can add a block such as the following to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<p>Note that the fields in this config are <a class=\"reference internal\" href=\"../config/#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a> and\n<a class=\"reference internal\" href=\"../config/#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a> and can be configured from environment variables.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_postgres", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_prometheus/", "title": "Prometheus (dagster_prometheus)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_papertrail/", "title": "Papertrail (dagster_papertrail)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_prometheus", "Prometheus (dagster_prometheus)", "N", "next"], ["sections/api/apidocs/libraries/dagster_papertrail", "Papertrail (dagster_papertrail)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_postgres.rst.txt", "title": "PostgreSQL (dagster_postgres)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">PostgreSQL (dagster_postgres)</a></li>\n</ul>\n"}, "dagster_prometheus": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"prometheus-dagster-prometheus\">\n<h1>Prometheus (dagster_prometheus)<a class=\"headerlink\" href=\"#prometheus-dagster-prometheus\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster_prometheus.resources.PrometheusResource\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_prometheus.resources.</code><code class=\"sig-name descname\">PrometheusResource</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">gateway</em>, <em class=\"sig-param\">timeout</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_prometheus/resources/#PrometheusResource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_prometheus.resources.PrometheusResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Integrates with Prometheus via the prometheus_client library.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_prometheus.prometheus_resource\">\n<code class=\"sig-prename descclassname\">dagster_prometheus.</code><code class=\"sig-name descname\">prometheus_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_prometheus/resources/#prometheus_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_prometheus.prometheus_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_prometheus", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_pyspark/", "title": "Pyspark (dagster_pyspark)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_postgres/", "title": "PostgreSQL (dagster_postgres)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_pyspark", "Pyspark (dagster_pyspark)", "N", "next"], ["sections/api/apidocs/libraries/dagster_postgres", "PostgreSQL (dagster_postgres)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_prometheus.rst.txt", "title": "Prometheus (dagster_prometheus)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Prometheus (dagster_prometheus)</a></li>\n</ul>\n"}, "dagster_pyspark": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"pyspark-dagster-pyspark\">\n<h1>Pyspark (dagster_pyspark)<a class=\"headerlink\" href=\"#pyspark-dagster-pyspark\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"data\">\n<dt id=\"dagster_pyspark.pyspark_resource\">\n<code class=\"sig-prename descclassname\">dagster_pyspark.</code><code class=\"sig-name descname\">pyspark_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_pyspark/resources/#pyspark_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_pyspark.pyspark_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This resource provides access to a PySpark SparkSession for executing PySpark code within\nDagster.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;pyspark&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">spark_session</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">pyspark</span><span class=\"o\">.</span><span class=\"n\">spark_session</span>\n    <span class=\"n\">dataframe</span> <span class=\"o\">=</span> <span class=\"n\">spark_session</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">(</span><span class=\"s2\">&quot;examples/src/main/resources/people.json&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">my_pyspark_resource</span> <span class=\"o\">=</span> <span class=\"n\">pyspark_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;spark_conf&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;spark.executor.memory&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2g&quot;</span><span class=\"p\">}}</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;pyspark&quot;</span><span class=\"p\">})])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">my_solid</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_pyspark", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_shell/", "title": "Shell (dagster_shell)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_prometheus/", "title": "Prometheus (dagster_prometheus)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_shell", "Shell (dagster_shell)", "N", "next"], ["sections/api/apidocs/libraries/dagster_prometheus", "Prometheus (dagster_prometheus)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_pyspark.rst.txt", "title": "Pyspark (dagster_pyspark)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Pyspark (dagster_pyspark)</a></li>\n</ul>\n"}, "dagster_shell": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"shell-dagster-shell\">\n<h1>Shell (dagster_shell)<a class=\"headerlink\" href=\"#shell-dagster-shell\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The Dagster shell library provides solid factories for executing inline shell scripts or script files.</p>\n<dl class=\"function\">\n<dt id=\"dagster_shell.create_shell_command_solid\">\n<code class=\"sig-prename descclassname\">dagster_shell.</code><code class=\"sig-name descname\">create_shell_command_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">shell_command</em>, <em class=\"sig-param\">name</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">tags=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_shell/solids/#create_shell_command_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_shell.create_shell_command_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is a factory that constructs solids to execute a shell command.</p>\n<p>Note that you can only use <cite>shell_command_solid</cite> if you know the command you\u2019d like to execute\nat pipeline construction time. If you\u2019d like to construct shell commands dynamically during\npipeline execution and pass them between solids, you should use <cite>shell_solid</cite> instead.</p>\n<p>Examples:</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>shell_command</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The shell command that the constructed solid will execute.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the constructed solid.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of this solid.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resource handles required by this solid.\nSetting this ensures that resource spin up for the required resources will occur before\nthe shell command is executed.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the solid. Frameworks may\nexpect and require certain metadata to be attached to a solid. Users should generally\nnot set metadata directly. Values that are not strings will be json encoded and must meet\nthe criteria that <cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../solids/#dagster.Failure\" title=\"dagster.Failure\"><strong>Failure</strong></a> \u2013 Raised when the shell command returns a non-zero exit code.</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>Returns the constructed solid definition.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../solids/#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_shell.create_shell_script_solid\">\n<code class=\"sig-prename descclassname\">dagster_shell.</code><code class=\"sig-name descname\">create_shell_script_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">shell_script_path</em>, <em class=\"sig-param\">name='create_shell_script_solid'</em>, <em class=\"sig-param\">input_defs=None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_shell/solids/#create_shell_script_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_shell.create_shell_script_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is a factory which constructs a solid that will execute a shell command read\nfrom a script file.</p>\n<p>Any kwargs passed to this function will be passed along to the underlying <a class=\"reference internal\" href=\"../solids/#dagster.solid\" title=\"dagster.solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;solid</span></code></a> decorator. However, note that overriding <code class=\"docutils literal notranslate\"><span class=\"pre\">config</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">output_defs</span></code> is not\nsupported.</p>\n<p>You might consider using <a class=\"reference internal\" href=\"../solids/#dagster.composite_solid\" title=\"dagster.composite_solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;composite_solid</span></code></a> to wrap this solid\nin the cases where you\u2019d like to configure the shell solid with different config fields.</p>\n<p>Examples:</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>shell_script_path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The script file to execute.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>optional</em>) \u2013 The name of this solid. Defaults to \u201ccreate_shell_script_solid\u201d.</p></li>\n<li><p><strong>input_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"../solids/#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 input definitions for the solid. Defaults to\na single Nothing input.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../solids/#dagster.Failure\" title=\"dagster.Failure\"><strong>Failure</strong></a> \u2013 Raised when the shell command returns a non-zero exit code.</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>Returns the constructed solid definition.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../solids/#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_shell.shell_solid\">\n<code class=\"sig-prename descclassname\">dagster_shell.</code><code class=\"sig-name descname\">shell_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_shell/solids/#shell_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_shell.shell_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This solid executes a shell command it receives as input.</p>\n<p>This solid is suitable for uses where the command to execute is generated dynamically by\nupstream solids. If you know the command to execute at pipeline construction time, consider\n<cite>shell_command_solid</cite> instead.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_shell", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_slack/", "title": "Slack (dagster_slack)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_pyspark/", "title": "Pyspark (dagster_pyspark)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_slack", "Slack (dagster_slack)", "N", "next"], ["sections/api/apidocs/libraries/dagster_pyspark", "Pyspark (dagster_pyspark)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_shell.rst.txt", "title": "Shell (dagster_shell)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Shell (dagster_shell)</a></li>\n</ul>\n"}, "dagster_slack": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"slack-dagster-slack\">\n<h1>Slack (dagster_slack)<a class=\"headerlink\" href=\"#slack-dagster-slack\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><span class=\"raw-html-m2r\"><img src=\"https://user-images.githubusercontent.com/609349/57994610-c581f680-7a72-11e9-85cd-41fd649cc26d.png\" /></span></p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>This library provides an integration with Slack, to support posting messages in your company\u2019s Slack workspace.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>Presently, it provides a thin wrapper on the Slack client API <a class=\"reference external\" href=\"https://api.slack.com/methods/chat.postMessage\">chat.postMessage</a>.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>To use this integration, you\u2019ll first need to create a Slack App for it.</p>\n<ol class=\"arabic\">\n<li><p><strong>Create App</strong>: Go to <a class=\"reference external\" href=\"https://api.slack.com/apps\">https://api.slack.com/apps</a> and click \u201cCreate New App\u201d:</p>\n<p><span class=\"raw-html-m2r\"><img width=200px src=\"https://user-images.githubusercontent.com/609349/57993925-d3824800-7a6f-11e9-8618-bdd1611f15a4.png\" /></span></p>\n</li>\n<li><p><strong>Install App</strong>: After creating an app, on the left-hand side of the app configuration, click \u201cBot Users\u201d, and then create a bot user. Then, click \u201cInstall App\u201d on the left hand side, and finally \u201cInstall App to Workspace\u201d.</p></li>\n<li><p><strong>Bot Token</strong>: Once finished, this will create a new bot token for your bot/workspace:</p>\n<p><span class=\"raw-html-m2r\"><img width=600px src=\"https://user-images.githubusercontent.com/609349/57994422-ed248f00-7a71-11e9-9cbc-f6869ed33315.png\" /></span></p>\n</li>\n</ol>\n<p>Copy this bot token and put it somewhere safe; see <a class=\"reference external\" href=\"https://api.slack.com/docs/oauth-safety\">Safely Storing Credentials</a> for more on this topic.</p>\n<dl class=\"data\">\n<dt id=\"dagster_slack.slack_resource\">\n<code class=\"sig-prename descclassname\">dagster_slack.</code><code class=\"sig-name descname\">slack_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_slack/resources/#slack_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_slack.slack_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This resource is for connecting to Slack.</p>\n<p>The resource object is a <cite>slack.WebClient</cite>.</p>\n<p>By configuring this Slack resource, you can post messages to Slack from any Dagster solid:</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">solid</span><span class=\"p\">,</span> <span class=\"n\">execute_pipeline</span><span class=\"p\">,</span> <span class=\"n\">ModeDefinition</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_slack</span> <span class=\"kn\">import</span> <span class=\"n\">slack_resource</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">slack_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">slack</span><span class=\"o\">.</span><span class=\"n\">chat_postMessage</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s1\">&#39;#noise&#39;</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">&#39;:wave: hey there!&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">:</span> <span class=\"n\">slack_resource</span><span class=\"p\">})],</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">slack_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">slack_solid</span><span class=\"p\">()</span>\n\n<span class=\"n\">execute_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">slack_pipeline</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;SLACK_TOKEN&#39;</span><span class=\"p\">)}}}}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_slack", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_snowflake/", "title": "Snowflake (dagster_snowflake)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_shell/", "title": "Shell (dagster_shell)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_snowflake", "Snowflake (dagster_snowflake)", "N", "next"], ["sections/api/apidocs/libraries/dagster_shell", "Shell (dagster_shell)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_slack.rst.txt", "title": "Slack (dagster_slack)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Slack (dagster_slack)</a></li>\n</ul>\n"}, "dagster_snowflake": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"snowflake-dagster-snowflake\">\n<h1>Snowflake (dagster_snowflake)<a class=\"headerlink\" href=\"#snowflake-dagster-snowflake\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with the <a class=\"reference external\" href=\"https://www.snowflake.com/\">Snowflake</a> data\nwarehouse.</p>\n<p>Presently, it provides a <code class=\"docutils literal notranslate\"><span class=\"pre\">snowflake_resource</span></code>, which is a Dagster resource for configuring\nSnowflake connections and issuing queries.</p>\n<p>To use this library, you should first ensure that you have an appropriate <a class=\"reference external\" href=\"https://docs.snowflake.net/manuals/user-guide/admin-user-management.html\">Snowflake user</a> configured to access\nyour data warehouse.</p>\n<dl class=\"data\">\n<dt id=\"dagster_snowflake.snowflake_resource\">\n<code class=\"sig-prename descclassname\">dagster_snowflake.</code><code class=\"sig-name descname\">snowflake_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_snowflake/resources/#snowflake_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_snowflake.snowflake_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A resource for connecting to the Snowflake data warehouse.</p>\n<p>A simple example of loading data into Snowflake and subsequently querying that data is shown below:</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">execute_pipeline</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span><span class=\"p\">,</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">,</span> <span class=\"n\">ModeDefinition</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_snowflake</span> <span class=\"kn\">import</span> <span class=\"n\">snowflake_resource</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;snowflake&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_one</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">snowflake</span><span class=\"o\">.</span><span class=\"n\">execute_query</span><span class=\"p\">(</span><span class=\"s1\">&#39;SELECT 1&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;snowflake&#39;</span><span class=\"p\">:</span> <span class=\"n\">snowflake_resource</span><span class=\"p\">})],</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">snowflake_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">get_one</span><span class=\"p\">()</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">execute_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">snowflake_pipeline</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;snowflake&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;account&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_ACCOUNT&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;user&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_USER&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;password&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_PASSWORD&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;database&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_DATABASE&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;schema&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_SCHEMA&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;warehouse&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_WAREHOUSE&#39;</span><span class=\"p\">},</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster_snowflake.SnowflakeConnection\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_snowflake.</code><code class=\"sig-name descname\">SnowflakeConnection</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">context</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_snowflake/resources/#SnowflakeConnection\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"method\">\n<dt id=\"dagster_snowflake.SnowflakeConnection.execute_queries\">\n<code class=\"sig-name descname\">execute_queries</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">sql_queries</em>, <em class=\"sig-param\">parameters=None</em>, <em class=\"sig-param\">fetch_results=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_snowflake/resources/#SnowflakeConnection.execute_queries\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection.execute_queries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_snowflake.SnowflakeConnection.execute_query\">\n<code class=\"sig-name descname\">execute_query</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">sql</em>, <em class=\"sig-param\">parameters=None</em>, <em class=\"sig-param\">fetch_results=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_snowflake/resources/#SnowflakeConnection.execute_query\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection.execute_query\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_snowflake.SnowflakeConnection.get_connection\">\n<code class=\"sig-name descname\">get_connection</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">raw_conn=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_snowflake/resources/#SnowflakeConnection.get_connection\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection.get_connection\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster_snowflake.SnowflakeConnection.load_table_from_local_parquet\">\n<code class=\"sig-name descname\">load_table_from_local_parquet</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">src</em>, <em class=\"sig-param\">table</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_snowflake/resources/#SnowflakeConnection.load_table_from_local_parquet\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection.load_table_from_local_parquet\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_snowflake", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_spark/", "title": "Spark (dagster_spark)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_slack/", "title": "Slack (dagster_slack)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_spark", "Spark (dagster_spark)", "N", "next"], ["sections/api/apidocs/libraries/dagster_slack", "Slack (dagster_slack)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_snowflake.rst.txt", "title": "Snowflake (dagster_snowflake)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Snowflake (dagster_snowflake)</a></li>\n</ul>\n"}, "dagster_spark": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"spark-dagster-spark\">\n<h1>Spark (dagster_spark)<a class=\"headerlink\" href=\"#spark-dagster-spark\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster_spark.SparkSolidError\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_spark.</code><code class=\"sig-name descname\">SparkSolidError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster_spark/types/#SparkSolidError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_spark.SparkSolidError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_spark.define_spark_config\">\n<code class=\"sig-prename descclassname\">dagster_spark.</code><code class=\"sig-name descname\">define_spark_config</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_spark/configs/#define_spark_config\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_spark.define_spark_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spark configuration.</p>\n<dl class=\"simple\">\n<dt>See the Spark documentation for reference:</dt><dd><p><a class=\"reference external\" href=\"https://spark.apache.org/docs/latest/submitting-applications.html\">https://spark.apache.org/docs/latest/submitting-applications.html</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_spark.create_spark_solid\">\n<code class=\"sig-prename descclassname\">dagster_spark.</code><code class=\"sig-name descname\">create_spark_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">main_class</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">required_resource_keys=frozenset({'spark'})</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_spark/solids/#create_spark_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_spark.create_spark_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_spark.construct_spark_shell_command\">\n<code class=\"sig-prename descclassname\">dagster_spark.</code><code class=\"sig-name descname\">construct_spark_shell_command</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">application_jar</em>, <em class=\"sig-param\">main_class</em>, <em class=\"sig-param\">master_url=None</em>, <em class=\"sig-param\">spark_conf=None</em>, <em class=\"sig-param\">deploy_mode=None</em>, <em class=\"sig-param\">application_arguments=None</em>, <em class=\"sig-param\">spark_home=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_spark/utils/#construct_spark_shell_command\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_spark.construct_spark_shell_command\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs the spark-submit command for a Spark job.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_spark.spark_resource\">\n<code class=\"sig-prename descclassname\">dagster_spark.</code><code class=\"sig-name descname\">spark_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_spark/resources/#spark_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_spark.spark_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_spark", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_ssh/", "title": "SSH / SFTP (dagster_ssh)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_snowflake/", "title": "Snowflake (dagster_snowflake)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_ssh", "SSH / SFTP (dagster_ssh)", "N", "next"], ["sections/api/apidocs/libraries/dagster_snowflake", "Snowflake (dagster_snowflake)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_spark.rst.txt", "title": "Spark (dagster_spark)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Spark (dagster_spark)</a></li>\n</ul>\n"}, "dagster_ssh": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"ssh-sftp-dagster-ssh\">\n<h1>SSH / SFTP (dagster_ssh)<a class=\"headerlink\" href=\"#ssh-sftp-dagster-ssh\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with SSH and SFTP.</p>\n<dl class=\"class\">\n<dt id=\"dagster_ssh.SSHResource\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster_ssh.</code><code class=\"sig-name descname\">SSHResource</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">remote_host</em>, <em class=\"sig-param\">remote_port</em>, <em class=\"sig-param\">username=None</em>, <em class=\"sig-param\">password=None</em>, <em class=\"sig-param\">key_file=None</em>, <em class=\"sig-param\">key_string=None</em>, <em class=\"sig-param\">timeout=10</em>, <em class=\"sig-param\">keepalive_interval=30</em>, <em class=\"sig-param\">compress=True</em>, <em class=\"sig-param\">no_host_key_check=True</em>, <em class=\"sig-param\">allow_host_key_change=False</em>, <em class=\"sig-param\">logger=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_ssh/resources/#SSHResource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_ssh.SSHResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resource for ssh remote execution using Paramiko.\nref: <a class=\"reference external\" href=\"https://github.com/paramiko/paramiko\">https://github.com/paramiko/paramiko</a></p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster_ssh.ssh_resource\">\n<code class=\"sig-prename descclassname\">dagster_ssh.</code><code class=\"sig-name descname\">ssh_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_ssh/resources/#ssh_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_ssh.ssh_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_ssh", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster_twilio/", "title": "Twilio (dagster_twilio)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_spark/", "title": "Spark (dagster_spark)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_twilio", "Twilio (dagster_twilio)", "N", "next"], ["sections/api/apidocs/libraries/dagster_spark", "Spark (dagster_spark)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_ssh.rst.txt", "title": "SSH / SFTP (dagster_ssh)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">SSH / SFTP (dagster_ssh)</a></li>\n</ul>\n"}, "dagster_twilio": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"twilio-dagster-twilio\">\n<h1>Twilio (dagster_twilio)<a class=\"headerlink\" href=\"#twilio-dagster-twilio\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with Twilio.</p>\n<dl class=\"data\">\n<dt id=\"dagster_twilio.twilio_resource\">\n<code class=\"sig-prename descclassname\">dagster_twilio.</code><code class=\"sig-name descname\">twilio_resource</code><em class=\"property\"> ResourceDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster_twilio/resources/#twilio_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_twilio.twilio_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster_twilio", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagstermill/", "title": "Dagstermill"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_ssh/", "title": "SSH / SFTP (dagster_ssh)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagstermill", "Dagstermill", "N", "next"], ["sections/api/apidocs/libraries/dagster_ssh", "SSH / SFTP (dagster_ssh)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster_twilio.rst.txt", "title": "Twilio (dagster_twilio)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Twilio (dagster_twilio)</a></li>\n</ul>\n"}, "dagstermill": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dagstermill\">\n<h1>Dagstermill<a class=\"headerlink\" href=\"#dagstermill\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"function\">\n<dt id=\"dagstermill.define_dagstermill_solid\">\n<code class=\"sig-prename descclassname\">dagstermill.</code><code class=\"sig-name descname\">define_dagstermill_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">notebook_path</em>, <em class=\"sig-param\">input_defs=None</em>, <em class=\"sig-param\">output_defs=None</em>, <em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">output_notebook=None</em>, <em class=\"sig-param\">asset_key_prefix=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">tags=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagstermill/solids/#define_dagstermill_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagstermill.define_dagstermill_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wrap a Jupyter notebook in a solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid.</p></li>\n<li><p><strong>notebook_path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Path to the backing notebook.</p></li>\n<li><p><strong>input_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"../solids/#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>]</em>) \u2013 The solid\u2019s inputs.</p></li>\n<li><p><strong>output_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"../solids/#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em><em>]</em>) \u2013 The solid\u2019s outputs. Your notebook should\ncall <a class=\"reference internal\" href=\"#dagstermill.yield_result\" title=\"dagstermill.yield_result\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">yield_result()</span></code></a> to yield each of these outputs.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The string names of any required resources.</p></li>\n<li><p><strong>output_notebook</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 If set, will be used as the name of an injected output of\ntype <a class=\"reference internal\" href=\"../types/#dagster.FileHandle\" title=\"dagster.FileHandle\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileHandle</span></code></a> that will point to the executed notebook (in\naddition to the <a class=\"reference internal\" href=\"../solids/#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetMaterialization</span></code></a> that is always created). This\nrespects the <a class=\"reference internal\" href=\"../internals/#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> configured on\nthe pipeline resources via the \u201cfile_manager\u201d resource key, so, e.g.,\nif <a class=\"reference internal\" href=\"../dagster_aws/#dagster_aws.s3.s3_file_manager\" title=\"dagster_aws.s3.s3_file_manager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">s3_file_manager</span></code></a> is configured, the output will be a :\npy:class:<cite>~dagster_aws.s3.S3FileHandle</cite>.</p></li>\n<li><p><strong>asset_key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 If set, will be used to prefix the\nasset keys for materialized notebooks.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 If set, description used for solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 If set, additional tags used to annotate solid.\nDagster uses the tag keys <cite>notebook_path</cite> and <cite>kind</cite>, which cannot be\noverwritten by the user.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../solids/#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SolidDefinition</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagstermill.get_context\">\n<code class=\"sig-prename descclassname\">dagstermill.</code><code class=\"sig-name descname\">get_context</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid_config=None</em>, <em class=\"sig-param\">mode_def=None</em>, <em class=\"sig-param\">run_config=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagstermill.get_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a dagstermill execution context for interactive exploration and development.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid_config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 If specified, this value will be made available on the\ncontext as its <code class=\"docutils literal notranslate\"><span class=\"pre\">solid_config</span></code> property.</p></li>\n<li><p><strong>mode_def</strong> (Optional[<a class=\"reference internal\" href=\"../modes-resources/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.ModeDefinition</span></code></a>]) \u2013 If specified, defines the mode to\nuse to construct the context. Specify this if you would like a context constructed\nwith specific <code class=\"docutils literal notranslate\"><span class=\"pre\">resource_defs</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">logger_defs</span></code>. By default, an ephemeral mode\nwith a console logger will be constructed.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment config dict with which to construct\nthe context.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#dagstermill.DagstermillExecutionContext\" title=\"dagstermill.DagstermillExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagstermillExecutionContext</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagstermill.yield_event\">\n<code class=\"sig-prename descclassname\">dagstermill.</code><code class=\"sig-name descname\">yield_event</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">dagster_event</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagstermill.yield_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Yield a dagster event directly from notebook code.</p>\n<p>When called interactively or in development, returns its input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>dagster_event</strong> (Union[<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.Materialization</span></code>, <a class=\"reference internal\" href=\"../solids/#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.ExpectationResult</span></code></a>, <a class=\"reference internal\" href=\"../solids/#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.TypeCheck</span></code></a>, <a class=\"reference internal\" href=\"../solids/#dagster.Failure\" title=\"dagster.Failure\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.Failure</span></code></a>]) \u2013 An event to yield back to Dagster.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagstermill.yield_result\">\n<code class=\"sig-prename descclassname\">dagstermill.</code><code class=\"sig-name descname\">yield_result</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">value</em>, <em class=\"sig-param\">output_name='result'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagstermill.yield_result\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Yield a result directly from notebook code.</p>\n<p>When called interactively or in development, returns its input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The value to yield.</p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the result to yield (default: <code class=\"docutils literal notranslate\"><span class=\"pre\">'result'</span></code>).</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagstermill.DagstermillExecutionContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagstermill.</code><code class=\"sig-name descname\">DagstermillExecutionContext</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_context: dagster.core.execution.context.system.SystemPipelineExecutionContext, resource_keys_to_init: Set[str], solid_name: str, solid_config: Any = None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagstermill/context/#DagstermillExecutionContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Dagstermill-specific execution context.</p>\n<p>Do not initialize directly: use <a class=\"reference internal\" href=\"#dagstermill.get_context\" title=\"dagstermill.get_context\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dagstermill.get_context()</span></code></a>.</p>\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.environment_config\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">environment_config</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.environment_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The environment_config for the context</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.EnvironmentConfig</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.get_tag\">\n<code class=\"sig-name descname\">get_tag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">key: str</em><span class=\"sig-paren\">)</span> &#x2192; str<a class=\"reference internal\" href=\"../../../../_modules/dagstermill/context/#DagstermillExecutionContext.get_tag\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.get_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a logging tag defined on the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The key to get.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>str</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.has_tag\">\n<code class=\"sig-name descname\">has_tag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">key: str</em><span class=\"sig-paren\">)</span> &#x2192; bool<a class=\"reference internal\" href=\"../../../../_modules/dagstermill/context/#DagstermillExecutionContext.has_tag\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.has_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if a logging tag is defined on the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The key to check.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>bool</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.log\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">log</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager for the context.</p>\n<p>Call, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">log.info()</span></code> to log messages through the Dagster machinery.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../internals/#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.DagsterLogManager</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.logging_tags\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">logging_tags</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.logging_tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The logging tags for the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.pipeline_def\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">pipeline_def</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.pipeline_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline definition for the context.</p>\n<p>This will be a dagstermill-specific shim.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../pipeline/#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.PipelineDefinition</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.pipeline_run\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">pipeline_run</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline run for the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../internals/#dagster.PipelineRun\" title=\"dagster.PipelineRun\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.PipelineRun</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.resources\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">resources</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dynamically-created type whose properties allow access to\nresources.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>collections.namedtuple</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.run_config\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">run_config</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.run_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The run_config for the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.run_id\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">run_id</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The run_id for the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.solid\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">solid</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The solid for the context.</p>\n<p>In interactive contexts, this may be a dagstermill-specific shim, depending whether a\nsolid definition was passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">dagstermill.get_context</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.Solid</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.solid_config\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">solid_config</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.solid_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dynamically-created type whose properties allow access to\nsolid-specific config.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>collections.namedtuple</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.solid_def\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">solid_def</code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.solid_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The solid definition for the context.</p>\n<p>In interactive contexts, this may be a dagstermill-specific shim, depending whether a\nsolid definition was passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">dagstermill.get_context</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../solids/#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.SolidDefinition</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagstermill.DagstermillError\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagstermill.</code><code class=\"sig-name descname\">DagstermillError</code><a class=\"reference internal\" href=\"../../../../_modules/dagstermill/errors/#DagstermillError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagstermill.DagstermillError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for errors raised by dagstermill.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagstermill", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../lakehouse/", "title": "Lakehouse (experimental)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster_twilio/", "title": "Twilio (dagster_twilio)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/lakehouse", "Lakehouse (experimental)", "N", "next"], ["sections/api/apidocs/libraries/dagster_twilio", "Twilio (dagster_twilio)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagstermill.rst.txt", "title": "Dagstermill", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Dagstermill</a></li>\n</ul>\n"}, "lakehouse": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"lakehouse-experimental\">\n<h1>Lakehouse (experimental)<a class=\"headerlink\" href=\"#lakehouse-experimental\" title=\"Permalink to this headline\">\u00b6</a></h1>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/lakehouse", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": null, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagstermill/", "title": "Dagstermill"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagstermill", "Dagstermill", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/lakehouse.rst.txt", "title": "Lakehouse (experimental)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Lakehouse (experimental)</a></li>\n</ul>\n"}}, "loggers": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"loggers\">\n<h1>Loggers<a class=\"headerlink\" href=\"#loggers\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"function\">\n<dt id=\"dagster.logger\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">logger</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/logger#logger\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a logger.</p>\n<p>The decorated function should accept an <a class=\"reference internal\" href=\"#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitLoggerContext</span></code></a> and return an instance of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">logging.Logger</span></code></a>. This function will become the <code class=\"docutils literal notranslate\"><span class=\"pre\">logger_fn</span></code> of an underlying\n<a class=\"reference internal\" href=\"#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoggerDefinition</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the logger.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.LoggerDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">LoggerDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">logger_fn</em>, <em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/logger#LoggerDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.LoggerDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core class for defining loggers.</p>\n<p>Loggers are pipeline-scoped logging handlers, which will be automatically invoked whenever\nsolids in a pipeline log messages.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>logger_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><em>InitLoggerContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><em>logging.Logger</em></a><em>]</em>) \u2013 User-provided function to\ninstantiate the logger. This logger will be automatically invoked whenever the methods\non <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code> are called from within solid compute logic.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this logger.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.LoggerDefinition.configured\">\n<code class=\"sig-name descname\">configured</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_or_config_fn: Any</em>, <em class=\"sig-param\">config_schema: Optional[Dict[str</em>, <em class=\"sig-param\">Any]] = None</em>, <em class=\"sig-param\">description: Optional[str] = None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.LoggerDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.InitLoggerContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">InitLoggerContext</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/logger#InitLoggerContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.InitLoggerContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logger-specific initialization context.</p>\n<p>An instance of this class is made available as the first argument to the <code class=\"docutils literal notranslate\"><span class=\"pre\">logger_fn</span></code> decorated\nby <a class=\"reference internal\" href=\"#dagster.logger\" title=\"dagster.logger\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;logger</span></code></a> or set on a <a class=\"reference internal\" href=\"#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoggerDefinition</span></code></a>.</p>\n<p>Users should not instantiate this class.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.InitLoggerContext.logger_config\">\n<code class=\"sig-name descname\">logger_config</code><a class=\"headerlink\" href=\"#dagster.InitLoggerContext.logger_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The configuration data provided by the environment config. The\nschema for this data is defined by <code class=\"docutils literal notranslate\"><span class=\"pre\">config_schema</span></code> on the <a class=\"reference internal\" href=\"#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoggerDefinition</span></code></a></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitLoggerContext.pipeline_def\">\n<code class=\"sig-name descname\">pipeline_def</code><a class=\"headerlink\" href=\"#dagster.InitLoggerContext.pipeline_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline definition currently being executed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\">PipelineDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitLoggerContext.logger_def\">\n<code class=\"sig-name descname\">logger_def</code><a class=\"headerlink\" href=\"#dagster.InitLoggerContext.logger_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The logger definition for the logger being constructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\">LoggerDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitLoggerContext.run_id\">\n<code class=\"sig-name descname\">run_id</code><a class=\"headerlink\" href=\"#dagster.InitLoggerContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The ID for this run of the pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/loggers", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../modes-resources/", "title": "Modes &amp; Resources"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../internals/", "title": "Internals"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/modes-resources", "Modes &amp; Resources", "N", "next"], ["sections/api/apidocs/internals", "Internals", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/loggers.rst.txt", "title": "Loggers", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Loggers</a></li>\n</ul>\n"}, "modes-resources": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"modes-resources\">\n<h1>Modes &amp; Resources<a class=\"headerlink\" href=\"#modes-resources\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"modes\">\n<h2>Modes<a class=\"headerlink\" href=\"#modes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.ModeDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ModeDefinition</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/mode#ModeDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ModeDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a mode in which a pipeline can operate.</p>\n<p>A mode provides pipelines with a set of resource implementations, loggers, system storages,\nand executors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the mode. Must be unique within the\n<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a> to which the mode is attached. (default: \u201cdefault\u201d).</p></li>\n<li><p><strong>resource_defs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><em>ResourceDefinition</em></a><em>]</em><em>]</em>) \u2013 A dictionary of string resource\nkeys to their implementations. Individual solids may require resources to be present by\nthese keys.</p></li>\n<li><p><strong>logger_defs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"loggers#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><em>LoggerDefinition</em></a><em>]</em><em>]</em>) \u2013 A dictionary of string logger\nidentifiers to their implementations.</p></li>\n<li><p><strong>executor_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.ExecutorDefinition\" title=\"dagster.ExecutorDefinition\"><em>ExecutorDefinition</em></a><em>]</em><em>]</em>) \u2013 The set of executors available when\nexecuting in this mode. By default, this will be the \u2018in_process\u2019 and \u2018multiprocess\u2019\nexecutors (<a class=\"reference internal\" href=\"execution#dagster.default_executors\" title=\"dagster.default_executors\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">default_executors</span></code></a>).</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the mode.</p></li>\n<li><p><strong>intermediate_storage_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.IntermediateStorageDefinition\" title=\"dagster.IntermediateStorageDefinition\"><em>IntermediateStorageDefinition</em></a><em>]</em><em>]</em>) \u2013 The set of intermediate storage\noptions available when executing in this mode. By default, this will be the \u2018in_memory\u2019\nand \u2018filesystem\u2019 system storages.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"resources\">\n<h2>Resources<a class=\"headerlink\" href=\"#resources\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.resource\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">resource</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">version=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource#resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a resource.</p>\n<p>The decorated function should accept an <a class=\"reference internal\" href=\"#dagster.InitResourceContext\" title=\"dagster.InitResourceContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitResourceContext</span></code></a> and return an instance of\nthe resource. This function will become the <code class=\"docutils literal notranslate\"><span class=\"pre\">resource_fn</span></code> of an underlying\n<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a>.</p>\n<p>If the decorated function yields once rather than returning (in the manner of functions\ndecorable with <a class=\"reference external\" href=\"https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager\" title=\"(in Python v3.8)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;contextlib.contextmanager</span></code></a>) then\nthe body of the function after the yield will be run after execution resolves, allowing users\nto write their own teardown/cleanup logic.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.resource_config</cite>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the resource.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of a resource function. Two wrapped\nresource functions should only have the same version if they produce the same resource\ndefinition when provided with the same inputs.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by this resource.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.ResourceDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ResourceDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">resource_fn=None</em>, <em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">version=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource#ResourceDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ResourceDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core class for defining resources.</p>\n<p>Resources are scoped ways to make external resources (like database connections) available to\nsolids during pipeline execution and to clean up after execution resolves.</p>\n<p>If resource_fn yields once rather than returning (in the manner of functions decorable with\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager\" title=\"(in Python v3.8)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;contextlib.contextmanager</span></code></a>) then the body of the\nfunction after the yield will be run after execution resolves, allowing users to write their\nown teardown/cleanup logic.</p>\n<p>Depending on your executor, resources may be instantiated and cleaned up more than once in a\npipeline execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>resource_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InitResourceContext\" title=\"dagster.InitResourceContext\"><em>InitResourceContext</em></a><em>]</em><em>, </em><em>Any</em><em>]</em>) \u2013 User-provided function to instantiate\nthe resource, which will be made available to solid executions keyed on the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">context.resources</span></code> object.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data\navailable in <cite>init_context.resource_config</cite>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the resource.</p></li>\n<li><p><strong>required_resource_keys</strong> \u2013 (Optional[Set[str]]) Keys for the resources required by this\nresource. A DagsterInvariantViolationError will be raised during initialization if\ndependencies are cyclic.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of the resource\u2019s definition fn. Two\nwrapped resource functions should only have the same version if they produce the same\nresource definition when provided with the same inputs.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.ResourceDefinition.configured\">\n<code class=\"sig-name descname\">configured</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_or_config_fn: Any</em>, <em class=\"sig-param\">config_schema: Optional[Dict[str</em>, <em class=\"sig-param\">Any]] = None</em>, <em class=\"sig-param\">description: Optional[str] = None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.ResourceDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.ResourceDefinition.hardcoded_resource\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">hardcoded_resource</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">value</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource#ResourceDefinition.hardcoded_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ResourceDefinition.hardcoded_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A helper function that creates a <code class=\"docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code> with a hardcoded object.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 A hardcoded object which helps mock the resource.</p></li>\n<li><p><strong>description</strong> (<em>[</em><em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The description of the resource. Defaults to None.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A hardcoded resource.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>[<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\">ResourceDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.ResourceDefinition.mock_resource\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">mock_resource</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource#ResourceDefinition.mock_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ResourceDefinition.mock_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A helper function that creates a <code class=\"docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code> which wraps a <code class=\"docutils literal notranslate\"><span class=\"pre\">mock.MagicMock</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>description</strong> (<em>[</em><em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The description of the resource. Defaults to None.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>A resource that creates the magic methods automatically and helps</dt><dd><p>you mock existing resources.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>[<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\">ResourceDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.ResourceDefinition.none_resource\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">none_resource</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource#ResourceDefinition.none_resource\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ResourceDefinition.none_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A helper function that returns a none resource.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>description</strong> (<em>[</em><em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The description of the resource. Defaults to None.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A resource that does nothing.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>[<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\">ResourceDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.InitResourceContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">InitResourceContext</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/init#InitResourceContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.InitResourceContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resource-specific initialization context.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.InitResourceContext.resource_config\">\n<code class=\"sig-name descname\">resource_config</code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.resource_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The configuration data provided by the environment config. The schema\nfor this data is defined by the <code class=\"docutils literal notranslate\"><span class=\"pre\">config_field</span></code> argument to\n<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitResourceContext.resource_def\">\n<code class=\"sig-name descname\">resource_def</code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.resource_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the resource currently being\nconstructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\">ResourceDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitResourceContext.pipeline_run\">\n<code class=\"sig-name descname\">pipeline_run</code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline run in context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.PipelineRun\" title=\"dagster.PipelineRun\">PipelineRun</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitResourceContext.run_id\">\n<code class=\"sig-name descname\">run_id</code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id for this run of the pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitResourceContext.log_manager\">\n<code class=\"sig-name descname\">log_manager</code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.log_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager for this run of the pipeline</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.InitResourceContext.resources\">\n<code class=\"sig-name descname\">resources</code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The resources that are available to the resource that we are\ninitalizing.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>ScopedResources</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/modes-resources", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../partitions/", "title": "Partitions"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../loggers/", "title": "Loggers"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/partitions", "Partitions", "N", "next"], ["sections/api/apidocs/loggers", "Loggers", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/modes-resources.rst.txt", "title": "Modes &amp; Resources", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Modes &amp; Resources</a><ul>\n<li><a class=\"reference internal\" href=\"#modes\">Modes</a></li>\n<li><a class=\"reference internal\" href=\"#resources\">Resources</a></li>\n</ul>\n</li>\n</ul>\n"}, "partitions": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"partitions\">\n<h1>Partitions<a class=\"headerlink\" href=\"#partitions\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster.Partition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Partition</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#Partition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Partition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Partition is the representation of a logical slice across an axis of a pipeline\u2019s work</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The object for this partition</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name for this partition</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.PartitionSetDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">PartitionSetDefinition</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#PartitionSetDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PartitionSetDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a partition set, representing the set of slices making up an axis of a pipeline</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name for this partition set</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline definition</p></li>\n<li><p><strong>partition_fn</strong> (<em>Callable</em><em>[</em><em>void</em><em>, </em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><em>Partition</em></a><em>]</em><em>]</em>) \u2013 User-provided function to define the set of\nvalid partition objects.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with this partition. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this partition. (default: \u2018default\u2019)</p></li>\n<li><p><strong>run_config_fn_for_partition</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><em>Partition</em></a><em>]</em><em>, </em><em>[</em><em>Dict</em><em>]</em><em>]</em>) \u2013 A\nfunction that takes a <a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Partition</span></code></a> and returns the run\nconfiguration that parameterizes the execution for this partition, as a dict</p></li>\n<li><p><strong>tags_fn_for_partition</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><em>Partition</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A function that\ntakes a <a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Partition</span></code></a> and returns a list of key value pairs that will\nbe added to the generated run for this partition.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.date_partition_range\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">date_partition_range</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">start</em>, <em class=\"sig-param\">end=None</em>, <em class=\"sig-param\">delta_range='days'</em>, <em class=\"sig-param\">fmt=None</em>, <em class=\"sig-param\">inclusive=False</em>, <em class=\"sig-param\">timezone=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/partitions#date_partition_range\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.date_partition_range\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility function that returns a partition generating function to be used in creating a\n<cite>PartitionSet</cite> definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start</strong> (<em>datetime</em>) \u2013 Datetime capturing the start of the time range.</p></li>\n<li><p><strong>end</strong> (<em>Optional</em><em>(</em><em>datetime</em><em>)</em>) \u2013 Datetime capturing the end of the partition.  By default, the\ncurrent time is used.  The range is not inclusive of the end\nvalue.</p></li>\n<li><p><strong>delta_range</strong> (<em>Optional</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>)</em>) \u2013 string representing the time duration of each partition.\nMust be a valid argument to pendulum.period.range (\u201cdays\u201d, \u201chours\u201d, \u201cmonths\u201d, etc.).</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>)</em>) \u2013 Format string to represent each partition by its start time</p></li>\n<li><p><strong>inclusive</strong> (<em>Optional</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>)</em>) \u2013 By default, the partition set only contains date interval\npartitions for which the end time of the interval is less than current time. In other\nwords, the partition set contains date interval partitions that are completely in the\npast. If inclusive is set to True, then the partition set will include all date\ninterval partitions for which the start time of the interval is less than the\ncurrent time.</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>)</em>) \u2013 Timezone in which the partition values should be expressed.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Callable[[], List[Partition]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.identity_partition_selector\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">identity_partition_selector</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">context</em>, <em class=\"sig-param\">partition_set_def</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/partitions#identity_partition_selector\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.identity_partition_selector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility function for supplying a partition selector when creating a schedule from a\npartition set made of <a href=\"#id1\"><span class=\"problematic\" id=\"id2\">`</span></a>datetime`s that assumes the schedule always executes at the\npartition time.</p>\n<p>It\u2019s important that the cron string passed into <cite>create_schedule_definition</cite> match\nthe partition set times. For example, a schedule created from a partition set with partitions for each day at\nmidnight would create its partition selector as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">partition_set</span> <span class=\"o\">=</span> <span class=\"n\">PartitionSetDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;hello_world_partition_set&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pipeline_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;hello_world_pipeline&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_fn</span><span class=\"o\">=</span> <span class=\"n\">date_partition_range</span><span class=\"p\">(</span>\n        <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2021</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n        <span class=\"n\">delta_range</span><span class=\"o\">=</span><span class=\"s2\">&quot;days&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">timezone</span><span class=\"o\">=</span><span class=\"s2\">&quot;US/Central&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">run_config_fn_for_partition</span><span class=\"o\">=</span><span class=\"n\">my_run_config_fn</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">schedule_definition</span> <span class=\"o\">=</span> <span class=\"n\">partition_set</span><span class=\"o\">.</span><span class=\"n\">create_schedule_definition</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;hello_world_daily_schedule&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;0 0 * * *&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_selector</span><span class=\"o\">=</span><span class=\"n\">identity_partition_selector</span><span class=\"p\">,</span>\n    <span class=\"n\">execution_timezone</span><span class=\"o\">=</span><span class=\"s2\">&quot;US/Central&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.create_offset_partition_selector\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">create_offset_partition_selector</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">execution_time_to_partition_fn</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/partitions#create_offset_partition_selector\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.create_offset_partition_selector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility function for supplying a partition selector when creating a schedule from a\npartition set made of <a href=\"#id3\"><span class=\"problematic\" id=\"id4\">`</span></a>datetime`s that assumes a fixed time offset between the partition\ntime and the time at which the schedule executes.</p>\n<p>It\u2019s important to keep the cron string that\u2019s supplied to\n<cite>PartitionSetDefinition.create_schedule_definition</cite> in sync with the offset that\u2019s\nsupplied to this function. For example, a schedule created from a partition set with\npartitions for each day at midnight that fills in the partition for day N at day N+1 at\n10:00AM would create the partition selector as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">partition_set</span> <span class=\"o\">=</span> <span class=\"n\">PartitionSetDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;hello_world_partition_set&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pipeline_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;hello_world_pipeline&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_fn</span><span class=\"o\">=</span> <span class=\"n\">date_partition_range</span><span class=\"p\">(</span>\n        <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2021</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n        <span class=\"n\">delta_range</span><span class=\"o\">=</span><span class=\"s2\">&quot;days&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">timezone</span><span class=\"o\">=</span><span class=\"s2\">&quot;US/Central&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">run_config_fn_for_partition</span><span class=\"o\">=</span><span class=\"n\">my_run_config_fn</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">schedule_definition</span> <span class=\"o\">=</span> <span class=\"n\">partition_set</span><span class=\"o\">.</span><span class=\"n\">create_schedule_definition</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;daily_10am_schedule&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;0 10 * * *&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_selector</span><span class=\"o\">=</span><span class=\"n\">create_offset_partition_selector</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">execution_timezone</span><span class=\"o\">=</span><span class=\"s2\">&quot;US/Central&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>execution_time_to_partition_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em>) \u2013 A</p></li>\n<li><p><strong>that maps the execution time of the schedule to the partition time.</strong> (<em>function</em>) \u2013 </p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/partitions", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../pipeline/", "title": "Pipelines"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../modes-resources/", "title": "Modes &amp; Resources"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/pipeline", "Pipelines", "N", "next"], ["sections/api/apidocs/modes-resources", "Modes &amp; Resources", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/partitions.rst.txt", "title": "Partitions", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Partitions</a></li>\n</ul>\n"}, "pipeline": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"pipelines\">\n<h1>Pipelines<a class=\"headerlink\" href=\"#pipelines\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"pipeline-definitions\">\n<h2>Pipeline definitions<a class=\"headerlink\" href=\"#pipeline-definitions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.pipeline\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name: Union[Callable[[...], Any], str, None] = None, description: Optional[str] = None, mode_defs: Optional[List[dagster.core.definitions.mode.ModeDefinition]] = None, preset_defs: Optional[List[dagster.core.definitions.preset.PresetDefinition]] = None, tags: Optional[Dict[str, Any]] = None, hook_defs: Optional[Set[dagster.core.definitions.hook.HookDefinition]] = None, input_defs: Optional[List[dagster.core.definitions.input.InputDefinition]] = None, output_defs: Optional[List[dagster.core.definitions.output.OutputDefinition]] = None, config_schema: Optional[Dict[str, Any]] = None, config_fn: Optional[Callable[[Dict[str, Any]], Dict[str, Any]]] = None</em><span class=\"sig-paren\">)</span> &#x2192; Union[dagster.core.definitions.pipeline.PipelineDefinition, dagster.core.definitions.decorators.pipeline._Pipeline]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/pipeline#pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a pipeline with the specified parameters from the decorated composition function.</p>\n<p>Using this decorator allows you to build up the dependency graph of the pipeline by writing a\nfunction that invokes solids and passes the output to other solids.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline. Must be unique within any\n<a class=\"reference internal\" href=\"repositories#dagster.RepositoryDefinition\" title=\"dagster.RepositoryDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RepositoryDefinition</span></code></a> containing the pipeline.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the pipeline.</p></li>\n<li><p><strong>mode_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><em>ModeDefinition</em></a><em>]</em><em>]</em>) \u2013 The set of modes in which this pipeline can\noperate. Modes are used to attach resources, custom loggers, custom system storage\noptions, and custom executors to a pipeline. Modes can be used, e.g., to vary\navailable resource and logging implementations between local test and production runs.</p></li>\n<li><p><strong>preset_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"presets#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\"><em>PresetDefinition</em></a><em>]</em><em>]</em>) \u2013 A set of preset collections of configuration\noptions that may be used to execute a pipeline. A preset consists of an environment\ndict, an optional subset of solids to execute, and a mode selection. Presets can be used\nto ship common combinations of options to pipeline end users in Python code, and can\nbe selected by tools like Dagit.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for any execution run of the pipeline.\nValues that are not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.  These tag values may be overwritten by tag\nvalues provided at invocation time.</p></li>\n<li><p><strong>hook_defs</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><em>HookDefinition</em><em>]</em><em>]</em>) \u2013 A set of hook definitions applied to the\npipeline. When a hook is applied to a pipeline, it will be attached to all solid\ninstances within the pipeline.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"s2\">&quot;two&quot;</span><span class=\"p\">),</span> <span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"s2\">&quot;four&quot;</span><span class=\"p\">)])</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_two_four</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">&quot;two&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s2\">&quot;four&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n\n<span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">mult_two</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n\n\n<span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">math_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">two</span><span class=\"p\">,</span> <span class=\"n\">four</span> <span class=\"o\">=</span> <span class=\"n\">emit_two_four</span><span class=\"p\">()</span>\n    <span class=\"n\">add_one</span><span class=\"p\">(</span><span class=\"n\">two</span><span class=\"p\">)</span>\n    <span class=\"n\">mult_two</span><span class=\"p\">(</span><span class=\"n\">four</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.PipelineDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">PipelineDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid_defs</em>, <em class=\"sig-param\">name=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">dependencies=None</em>, <em class=\"sig-param\">mode_defs=None</em>, <em class=\"sig-param\">preset_defs=None</em>, <em class=\"sig-param\">tags=None</em>, <em class=\"sig-param\">hook_defs=None</em>, <em class=\"sig-param\">input_mappings=None</em>, <em class=\"sig-param\">output_mappings=None</em>, <em class=\"sig-param\">config_mapping=None</em>, <em class=\"sig-param\">positional_inputs=None</em>, <em class=\"sig-param\">_parent_pipeline_def=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/pipeline#PipelineDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PipelineDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a Dagster pipeline.</p>\n<p>A pipeline is made up of</p>\n<ul class=\"simple\">\n<li><p>Solids, each of which is a single functional unit of data computation.</p></li>\n<li><p>Dependencies, which determine how the values produced by solids as their outputs flow from\none solid to another. This tells Dagster how to arrange solids, and potentially multiple\naliased instances of solids, into a directed, acyclic graph (DAG) of compute.</p></li>\n<li><p>Modes, which can be used to attach resources, custom loggers, custom system storage\noptions, and custom executors to a pipeline, and to switch between them.</p></li>\n<li><p>Presets, which can be used to ship common combinations of pipeline config options in Python\ncode, and to switch between them.</p></li>\n</ul>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><em>SolidDefinition</em></a><em>]</em>) \u2013 The set of solids used in this pipeline.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline. Must be unique within any\n<a class=\"reference internal\" href=\"repositories#dagster.RepositoryDefinition\" title=\"dagster.RepositoryDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RepositoryDefinition</span></code></a> containing the pipeline.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the pipeline.</p></li>\n<li><p><strong>dependencies</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.SolidInvocation\" title=\"dagster.SolidInvocation\"><em>SolidInvocation</em></a><em>]</em><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><em>DependencyDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A structure that declares the dependencies of each solid\u2019s inputs on the outputs of\nother solids in the pipeline. Keys of the top level dict are either the string names of\nsolids in the pipeline or, in the case of aliased solids,\n<a class=\"reference internal\" href=\"#dagster.SolidInvocation\" title=\"dagster.SolidInvocation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SolidInvocations</span></code></a>. Values of the top level dict are\nthemselves dicts, which map input names belonging to the solid or aliased solid to\n<a class=\"reference internal\" href=\"#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DependencyDefinitions</span></code></a>.</p></li>\n<li><p><strong>mode_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"modes-resources#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><em>ModeDefinition</em></a><em>]</em><em>]</em>) \u2013 The set of modes in which this pipeline can\noperate. Modes are used to attach resources, custom loggers, custom system storage\noptions, and custom executors to a pipeline. Modes can be used, e.g., to vary available\nresource and logging implementations between local test and production runs.</p></li>\n<li><p><strong>preset_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"presets#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\"><em>PresetDefinition</em></a><em>]</em><em>]</em>) \u2013 A set of preset collections of configuration\noptions that may be used to execute a pipeline. A preset consists of an environment\ndict, an optional subset of solids to execute, and a mode selection. Presets can be used\nto ship common combinations of options to pipeline end users in Python code, and can\nbe selected by tools like Dagit.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for any execution run of the pipeline.\nValues that are not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.  These tag values may be overwritten by tag\nvalues provided at invocation time.</p></li>\n<li><p><strong>hook_defs</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><em>HookDefinition</em><em>]</em><em>]</em>) \u2013 A set of hook definitions applied to the\npipeline. When a hook is applied to a pipeline, it will be attached to all solid\ninstances within the pipeline.</p></li>\n<li><p><strong>_parent_pipeline_def</strong> (<em>INTERNAL ONLY</em>) \u2013 Used for tracking pipelines created using solid subsets.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">return_one</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">)],</span> <span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;op&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">apply_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@resource</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Int</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">adder_resource</span><span class=\"p\">(</span><span class=\"n\">init_context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">init_context</span><span class=\"o\">.</span><span class=\"n\">resource_config</span>\n\n\n<span class=\"n\">add_mode</span> <span class=\"o\">=</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;add_mode&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;op&#39;</span><span class=\"p\">:</span> <span class=\"n\">adder_resource</span><span class=\"p\">},</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Mode that adds things&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"n\">add_three_preset</span> <span class=\"o\">=</span> <span class=\"n\">PresetDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;add_three_preset&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}}},</span>\n    <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;add_mode&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"n\">pipeline_def</span> <span class=\"o\">=</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;basic&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">solid_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">return_one</span><span class=\"p\">,</span> <span class=\"n\">apply_op</span><span class=\"p\">],</span>\n    <span class=\"n\">dependencies</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;apply_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;return_one&#39;</span><span class=\"p\">)}},</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">add_mode</span><span class=\"p\">],</span>\n    <span class=\"n\">preset_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">add_three_preset</span><span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dependencies-and-aliases\">\n<h2>Dependencies and aliases<a class=\"headerlink\" href=\"#dependencies-and-aliases\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.DependencyDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DependencyDefinition</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/dependency#DependencyDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DependencyDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents an edge in the DAG of solid instances forming a pipeline.</p>\n<p>This object is used at the leaves of a dictionary structure that represents the complete\ndependency structure of a pipeline whose keys represent the dependent solid and dependent\ninput, so this object only contains information about the dependee.</p>\n<p>Concretely, if the input named \u2018input\u2019 of solid_b depends on the output named \u2018result\u2019 of\nsolid_a, this structure will look as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dependency_structure</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;solid_b&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;input&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;solid_a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;result&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>In general, users should prefer not to construct this class directly or use the\n<a class=\"reference internal\" href=\"#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a> API that requires instances of this class. Instead, use the\n<a class=\"reference internal\" href=\"#dagster.pipeline\" title=\"dagster.pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;pipeline</span></code></a> API:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">solid_b</span><span class=\"p\">(</span><span class=\"n\">solid_a</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid that is depended on, that is, from which the value\npassed between the two solids originates.</p></li>\n<li><p><strong>output</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output that is depended on. (default: \u201cresult\u201d)</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of this dependency.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.MultiDependencyDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">MultiDependencyDefinition</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/dependency#MultiDependencyDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.MultiDependencyDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a fan-in edge in the DAG of solid instances forming a pipeline.</p>\n<p>This object is used only when an input of type <code class=\"docutils literal notranslate\"><span class=\"pre\">List[T]</span></code> is assembled by fanning-in multiple\nupstream outputs of type <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span></code>.</p>\n<p>This object is used at the leaves of a dictionary structure that represents the complete\ndependency structure of a pipeline whose keys represent the dependent solid and dependent\ninput, so this object only contains information about the dependee.</p>\n<p>Concretely, if the input named \u2018input\u2019 of solid_c depends on the outputs named \u2018result\u2019 of\nsolid_a and solid_b, this structure will look as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dependency_structure</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;solid_c&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;input&#39;</span><span class=\"p\">:</span> <span class=\"n\">MultiDependencyDefinition</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;solid_a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;result&#39;</span><span class=\"p\">),</span>\n                <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;solid_b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;result&#39;</span><span class=\"p\">)</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>In general, users should prefer not to construct this class directly or use the\n<a class=\"reference internal\" href=\"#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a> API that requires instances of this class. Instead, use the\n<a class=\"reference internal\" href=\"#dagster.pipeline\" title=\"dagster.pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;pipeline</span></code></a> API:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">solid_c</span><span class=\"p\">(</span><span class=\"n\">solid_a</span><span class=\"p\">(),</span> <span class=\"n\">solid_b</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid that is depended on, that is, from which the value\npassed between the two solids originates.</p></li>\n<li><p><strong>output</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output that is depended on. (default: \u201cresult\u201d)</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of this dependency.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.SolidInvocation\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">SolidInvocation</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/dependency#SolidInvocation\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidInvocation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Identifies an instance of a solid in a pipeline dependency structure.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the solid of which this is an instance.</p></li>\n<li><p><strong>alias</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name specific to this instance of the solid. Necessary when there are\nmultiple instances of the same solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Optional tags values to extend or override those\nset on the solid definition.</p></li>\n<li><p><strong>hook_defs</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><em>HookDefinition</em><em>]</em><em>]</em>) \u2013 A set of hook definitions applied to the\nsolid instance.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pipeline</span> <span class=\"o\">=</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">solid_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">solid_1</span><span class=\"p\">,</span> <span class=\"n\">solid_2</span><span class=\"p\">]</span>\n    <span class=\"n\">dependencies</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"n\">SolidInvocation</span><span class=\"p\">(</span><span class=\"s1\">&#39;solid_1&#39;</span><span class=\"p\">,</span> <span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s1\">&#39;other_name&#39;</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;input_name&#39;</span> <span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;solid_1&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">&#39;solid_2&#39;</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;input_name&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;other_name&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>In general, users should prefer not to construct this class directly or use the\n<a class=\"reference internal\" href=\"#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a> API that requires instances of this class. Instead, use the\n<a class=\"reference internal\" href=\"#dagster.pipeline\" title=\"dagster.pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;pipeline</span></code></a> API:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">other_name</span> <span class=\"o\">=</span> <span class=\"n\">solid_1</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"s1\">&#39;other_name&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">solid_2</span><span class=\"p\">(</span><span class=\"n\">other_name</span><span class=\"p\">(</span><span class=\"n\">solid_1</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/pipeline", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../presets/", "title": "Presets"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../partitions/", "title": "Partitions"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/presets", "Presets", "N", "next"], ["sections/api/apidocs/partitions", "Partitions", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/pipeline.rst.txt", "title": "Pipelines", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Pipelines</a><ul>\n<li><a class=\"reference internal\" href=\"#pipeline-definitions\">Pipeline definitions</a></li>\n<li><a class=\"reference internal\" href=\"#dependencies-and-aliases\">Dependencies and aliases</a></li>\n</ul>\n</li>\n</ul>\n"}, "presets": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"presets\">\n<h1>Presets<a class=\"headerlink\" href=\"#presets\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster.PresetDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">PresetDefinition</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a preset configuration in which a pipeline can execute.</p>\n<p>Presets can be used in Dagit to load predefined configurations into the tool.</p>\n<p>Presets may also be used from the Python API (in a script, or in test) as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">execute_pipeline</span><span class=\"p\">(</span><span class=\"n\">pipeline_def</span><span class=\"p\">,</span> <span class=\"n\">preset</span><span class=\"o\">=</span><span class=\"s1\">&#39;example_preset&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Presets may also be used with the command line tools:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ dagster pipeline execute example_pipeline --preset example_preset\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this preset. Must be unique in the presets defined on a given\npipeline.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 A dict representing the config to set with the preset.\nThis is equivalent to the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> argument to <a class=\"reference internal\" href=\"execution#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a>.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with the preset. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this preset. (default: \u2018default\u2019)</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The tags to apply when executing this preset.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.PresetDefinition.from_files\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">from_files</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">config_files=None</em>, <em class=\"sig-param\">solid_selection=None</em>, <em class=\"sig-param\">mode=None</em>, <em class=\"sig-param\">tags=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.from_files\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.from_files\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for presets from YAML files.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this preset. Must be unique in the presets defined on a given\npipeline.</p></li>\n<li><p><strong>config_files</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 List of paths or glob patterns for yaml files\nto load and parse as the environment config for this preset.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with the preset. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this preset. (default:\n\u2018default\u2019)</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The tags to apply when executing this preset.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A PresetDefinition constructed from the provided YAML files.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\">PresetDefinition</a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"errors#dagster.DagsterInvariantViolationError\" title=\"dagster.DagsterInvariantViolationError\"><strong>DagsterInvariantViolationError</strong></a> \u2013 When one of the YAML files is invalid and has a parse\n    error.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.PresetDefinition.from_pkg_resources\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">from_pkg_resources</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">pkg_resource_defs=None</em>, <em class=\"sig-param\">solid_selection=None</em>, <em class=\"sig-param\">mode=None</em>, <em class=\"sig-param\">tags=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.from_pkg_resources\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.from_pkg_resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load a preset from a package resource, using <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">pkg_resources.resource_string()</span></code>.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">PresetDefinition</span><span class=\"o\">.</span><span class=\"n\">from_pkg_resources</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;local&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;local&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pkg_resource_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;dagster_examples.airline_demo.environments&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;local_base.yaml&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;dagster_examples.airline_demo.environments&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;local_warehouse.yaml&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this preset. Must be unique in the presets defined on a given\npipeline.</p></li>\n<li><p><strong>pkg_resource_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>)</em><em>]</em><em>]</em>) \u2013 List of pkg_resource modules/files to\nload as environment config for this preset.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with this partition. e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this preset. (default:\n\u2018default\u2019)</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The tags to apply when executing this preset.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A PresetDefinition constructed from the provided YAML strings</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\">PresetDefinition</a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"errors#dagster.DagsterInvariantViolationError\" title=\"dagster.DagsterInvariantViolationError\"><strong>DagsterInvariantViolationError</strong></a> \u2013 When one of the YAML documents is invalid and has a\n    parse error.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.PresetDefinition.from_yaml_strings\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">from_yaml_strings</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">yaml_strings=None</em>, <em class=\"sig-param\">solid_selection=None</em>, <em class=\"sig-param\">mode=None</em>, <em class=\"sig-param\">tags=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.from_yaml_strings\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.from_yaml_strings\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for presets from YAML strings.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this preset. Must be unique in the presets defined on a given\npipeline.</p></li>\n<li><p><strong>yaml_strings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 List of yaml strings to parse as the environment\nconfig for this preset.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with the preset. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this preset. (default:\n\u2018default\u2019)</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The tags to apply when executing this preset.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A PresetDefinition constructed from the provided YAML strings</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\">PresetDefinition</a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"errors#dagster.DagsterInvariantViolationError\" title=\"dagster.DagsterInvariantViolationError\"><strong>DagsterInvariantViolationError</strong></a> \u2013 When one of the YAML documents is invalid and has a\n    parse error.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.PresetDefinition.get_environment_yaml\">\n<code class=\"sig-name descname\">get_environment_yaml</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.get_environment_yaml\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.get_environment_yaml\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the environment dict set on a preset as YAML.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>The environment dict as YAML.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.PresetDefinition.with_additional_config\">\n<code class=\"sig-name descname\">with_additional_config</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">run_config</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.with_additional_config\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.with_additional_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a new PresetDefinition with additional config merged in to the existing config.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/presets", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../repositories/", "title": "Repositories"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../pipeline/", "title": "Pipelines"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/repositories", "Repositories", "N", "next"], ["sections/api/apidocs/pipeline", "Pipelines", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/presets.rst.txt", "title": "Presets", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Presets</a></li>\n</ul>\n"}, "repositories": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"repositories\">\n<h1>Repositories<a class=\"headerlink\" href=\"#repositories\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"data\">\n<dt id=\"dagster.repository\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">repository</code><em class=\"property\"> RepositoryDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/repository#repository\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.repository\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a repository from the decorated function.</p>\n<p>The decorated function should take no arguments and its return value should one of:</p>\n<ol class=\"arabic simple\">\n<li><dl class=\"simple\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">List[Union[PipelineDefinition,</span> <span class=\"pre\">PartitionSetDefinition,</span> <span class=\"pre\">ScheduleDefinition,</span> <span class=\"pre\">SensorDefinition]]</span></code>.</dt><dd><p>Use this form when you have no need to lazy load pipelines or other definitions. This is the\ntypical use case.</p>\n</dd>\n</dl>\n</li>\n<li><p>A dict of the form:</p></li>\n</ol>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s1\">&#39;pipelines&#39;</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">]],</span>\n    <span class=\"s1\">&#39;partition_sets&#39;</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">PartitionSetDefinition</span><span class=\"p\">]],</span>\n    <span class=\"s1\">&#39;schedules&#39;</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">ScheduleDefinition</span><span class=\"p\">]]</span>\n    <span class=\"s1\">&#39;sensors&#39;</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">SensorDefinition</span><span class=\"p\">]]</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>This form is intended to allow definitions to be created lazily when accessed by name,\nwhich can be helpful for performance when there are many definitions in a repository, or\nwhen constructing the definitions is costly.</p>\n<ol class=\"arabic simple\" start=\"3\">\n<li><dl class=\"simple\">\n<dt>An object of type <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RepositoryData</span></code>. Return this object if you need fine-grained</dt><dd><p>control over the construction and indexing of definitions within the repository, e.g., to\ncreate definitions dynamically from .yaml files in a directory.</p>\n</dd>\n</dl>\n</li>\n</ol>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the repository. Defaults to the name of the decorated\nfunction.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A string description of the repository.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">######################################################################</span>\n<span class=\"c1\"># A simple repository using the first form of the decorated function</span>\n<span class=\"c1\">######################################################################</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">)})</span>\n<span class=\"k\">def</span> <span class=\"nf\">return_n</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;n&#39;</span><span class=\"p\">]</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;simple_pipeline&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">simple_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">return_n</span><span class=\"p\">()</span>\n\n<span class=\"n\">simple_partition_set</span> <span class=\"o\">=</span> <span class=\"n\">PartitionSetDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;simple_partition_set&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pipeline_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;simple_pipeline&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_fn</span><span class=\"o\">=</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span>\n    <span class=\"n\">run_config_fn_for_partition</span><span class=\"o\">=</span><span class=\"p\">(</span>\n        <span class=\"k\">lambda</span> <span class=\"n\">partition</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;solids&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;return_n&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;n&#39;</span><span class=\"p\">:</span> <span class=\"n\">partition</span><span class=\"p\">}}}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">simple_schedule</span> <span class=\"o\">=</span> <span class=\"n\">simple_partition_set</span><span class=\"o\">.</span><span class=\"n\">create_schedule_definition</span><span class=\"p\">(</span>\n    <span class=\"n\">schedule_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;simple_daily_10_pm_schedule&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">cron_schedule</span><span class=\"o\">=</span><span class=\"s1\">&#39;0 22 * * *&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">simple_repository</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">simple_pipeline</span><span class=\"p\">,</span> <span class=\"n\">simple_partition_set</span><span class=\"p\">,</span> <span class=\"n\">simple_schedule</span><span class=\"p\">]</span>\n\n\n<span class=\"c1\">######################################################################</span>\n<span class=\"c1\"># A lazy-loaded repository</span>\n<span class=\"c1\">######################################################################</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">make_expensive_pipeline</span><span class=\"p\">():</span>\n    <span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;expensive_pipeline&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">expensive_pipeline</span><span class=\"p\">():</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">):</span>\n            <span class=\"n\">return_n</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"s1\">&#39;return_n_</span><span class=\"si\">{i}</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">))()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">expensive_pipeline</span>\n\n<span class=\"n\">expensive_partition_set</span> <span class=\"o\">=</span> <span class=\"n\">PartitionSetDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;expensive_partition_set&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pipeline_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;expensive_pipeline&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_fn</span><span class=\"o\">=</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span>\n    <span class=\"n\">run_config_fn_for_partition</span><span class=\"o\">=</span><span class=\"p\">(</span>\n        <span class=\"k\">lambda</span> <span class=\"n\">partition</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;solids&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;return_n_</span><span class=\"si\">{i}</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">):</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;n&#39;</span><span class=\"p\">:</span> <span class=\"n\">partition</span><span class=\"p\">}}</span>\n                <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">make_expensive_schedule</span><span class=\"p\">():</span>\n    <span class=\"n\">expensive_partition_set</span><span class=\"o\">.</span><span class=\"n\">create_schedule_definition</span><span class=\"p\">(</span>\n        <span class=\"n\">schedule_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;expensive_schedule&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">cron_schedule</span><span class=\"o\">=</span><span class=\"s1\">&#39;0 22 * * *&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">lazy_loaded_repository</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;pipelines&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;expensive_pipeline&#39;</span><span class=\"p\">:</span> <span class=\"n\">make_expensive_pipeline</span><span class=\"p\">},</span>\n        <span class=\"s1\">&#39;partition_sets&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;expensive_partition_set&#39;</span><span class=\"p\">:</span> <span class=\"n\">expensive_partition_set</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">&#39;schedules&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;expensive_schedule: make_expensive_schedule}</span>\n    <span class=\"p\">}</span>\n\n\n<span class=\"c1\">######################################################################</span>\n<span class=\"c1\"># A complex repository that lazily construct pipelines from a directory</span>\n<span class=\"c1\"># of files in a bespoke YAML format</span>\n<span class=\"c1\">######################################################################</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ComplexRepositoryData</span><span class=\"p\">(</span><span class=\"n\">RepositoryData</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">yaml_directory</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaml_directory</span> <span class=\"o\">=</span> <span class=\"n\">yaml_directory</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_pipeline</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pipeline_name</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_construct_pipeline_def_from_yaml_file</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaml_file_for_pipeline_name</span><span class=\"p\">(</span><span class=\"n\">pipeline_name</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">complex_repository</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">ComplexRepositoryData</span><span class=\"p\">(</span><span class=\"s1\">&#39;some_directory&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.RepositoryDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">RepositoryDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">repository_data</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository#RepositoryDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a repository that contains a collection of definitions.</p>\n<p>Users should typically not create objects of this class directly. Instead, use the\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;repository()</span></code> decorator.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the repository.</p></li>\n<li><p><strong>repository_data</strong> (<em>RepositoryData</em>) \u2013 Contains the definitions making up the repository.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A string description of the repository.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.RepositoryDefinition.get_all_pipelines\">\n<code class=\"sig-name descname\">get_all_pipelines</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository#RepositoryDefinition.get_all_pipelines\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.get_all_pipelines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return all pipelines in the repository as a list.</p>\n<p>Note that this will construct any pipeline in the lazily evaluated <code class=\"docutils literal notranslate\"><span class=\"pre\">pipeline_dict</span></code> that\nhas not yet been constructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>All pipelines in the repository.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>List[<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\">PipelineDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.RepositoryDefinition.get_all_solid_defs\">\n<code class=\"sig-name descname\">get_all_solid_defs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository#RepositoryDefinition.get_all_solid_defs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.get_all_solid_defs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get all the solid definitions in a repository.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>All solid definitions in the repository.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>List[<a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.RepositoryDefinition.get_pipeline\">\n<code class=\"sig-name descname\">get_pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository#RepositoryDefinition.get_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.get_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a pipeline by name.</p>\n<p>If this pipeline is present in the lazily evaluated <code class=\"docutils literal notranslate\"><span class=\"pre\">pipeline_dict</span></code> passed to the\nconstructor, but has not yet been constructed, only this pipeline is constructed, and will\nbe cached for future calls.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the pipeline to retrieve.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The pipeline definition corresponding to the given name.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\">PipelineDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.RepositoryDefinition.has_pipeline\">\n<code class=\"sig-name descname\">has_pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository#RepositoryDefinition.has_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.has_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if a pipeline with a given name is present in the repository.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>bool</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.RepositoryDefinition.pipeline_names\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">pipeline_names</code><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.pipeline_names\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Names of all pipelines in the repository</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.RepositoryDefinition.solid_def_named\">\n<code class=\"sig-name descname\">solid_def_named</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository#RepositoryDefinition.solid_def_named\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.solid_def_named\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the solid with the given name in the repository.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid for which to retrieve the solid definition.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The solid with the given name.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/repositories", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../solids/", "title": "Solids"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../presets/", "title": "Presets"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/solids", "Solids", "N", "next"], ["sections/api/apidocs/presets", "Presets", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/repositories.rst.txt", "title": "Repositories", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Repositories</a></li>\n</ul>\n"}, "schedules-sensors": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"run-requests\">\n<h1>Run Requests<a class=\"headerlink\" href=\"#run-requests\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"dagster.RunRequest\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">RunRequest</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/job#RunRequest\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RunRequest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents all the information required to launch a single run.  Must be returned by a\nSensorDefinition or ScheduleDefinition\u2019s evaluation function for a run to be launched.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.RunRequest.run_key\">\n<code class=\"sig-name descname\">run_key</code><a class=\"headerlink\" href=\"#dagster.RunRequest.run_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A string key to identify this launched run. For sensors, ensures that\nonly one run is created per run key across all sensor evaluations.  For schedules,\nensures that one run is created per tick, across failure recoveries. Passing in a <cite>None</cite>\nvalue means that a run will always be launched per evaluation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>str | None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.RunRequest.run_config\">\n<code class=\"sig-name descname\">run_config</code><a class=\"headerlink\" href=\"#dagster.RunRequest.run_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The environment config that parameterizes the run execution to\nbe launched, as a dict.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.RunRequest.tags\">\n<code class=\"sig-name descname\">tags</code><a class=\"headerlink\" href=\"#dagster.RunRequest.tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of tags (string key-value pairs) to attach\nto the launched run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.SkipReason\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">SkipReason</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/job#SkipReason\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SkipReason\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a skipped evaluation, where no runs are requested. May contain a message to indicate\nwhy no runs were requested.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.SkipReason.skip_message\">\n<code class=\"sig-name descname\">skip_message</code><a class=\"headerlink\" href=\"#dagster.SkipReason.skip_message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A message displayed in dagit for why this evaluation resulted\nin no requested runs.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"schedules\">\n<h1>Schedules<a class=\"headerlink\" href=\"#schedules\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"function\">\n<dt id=\"dagster.schedule\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">schedule</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">cron_schedule: str, pipeline_name: str, name: Optional[str] = None, tags: Optional[Dict[str, Any]] = None, tags_fn: Optional[Callable[[ScheduleExecutionContext], Optional[Dict[str, str]]]] = None, solid_selection: Optional[List[str]] = None, mode: Optional[str] = 'default', should_execute: Optional[Callable[[ScheduleExecutionContext], bool]] = None, environment_vars: Optional[Dict[str, str]] = None, execution_timezone: Optional[str] = None, description: Optional[str] = None</em><span class=\"sig-paren\">)</span> &#x2192; Callable[[Callable[[ScheduleExecutionContext], Dict[str, Any]]], dagster.core.definitions.schedule.ScheduleDefinition]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/schedule#schedule\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.schedule\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a schedule.</p>\n<p>The decorated function will be called as the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config_fn</span></code> of the underlying\n<a class=\"reference internal\" href=\"#dagster.ScheduleDefinition\" title=\"dagster.ScheduleDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleDefinition</span></code></a> and should take a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> as its only argument, returning the run config\nfor the scheduled execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>cron_schedule</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 A valid cron string specifying when the schedule will run, e.g.,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'45</span> <span class=\"pre\">23</span> <span class=\"pre\">*</span> <span class=\"pre\">*</span> <span class=\"pre\">6'</span></code> for a schedule that runs at 11:45 PM every Saturday.</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline to execute when the schedule runs.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the schedule to create.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A dictionary of tags (string key-value pairs) to attach\nto the scheduled runs.</p></li>\n<li><p><strong>tags_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em><em>]</em>) \u2013 A function\nthat generates tags to attach to the schedules runs. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> and returns a dictionary of tags (string\nkey-value pairs). You may set only one of <code class=\"docutils literal notranslate\"><span class=\"pre\">tags</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">tags_fn</span></code>.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute when the schedule runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The pipeline mode in which to execute this schedule.\n(Default: \u2018default\u2019)</p></li>\n<li><p><strong>should_execute</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em><em>]</em>) \u2013 A function that runs at\nschedule execution tie to determine whether a schedule should execute or skip. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> and returns a boolean (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the\nschedule should execute). Defaults to a function that always returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>environment_vars</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Any environment variables to set when executing\nthe schedule.</p></li>\n<li><p><strong>execution_timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Timezone in which the schedule should run. Only works\nwith DagsterDaemonScheduler, and must be set when using that scheduler.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the schedule.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.monthly_schedule\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">monthly_schedule</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_name: str, start_date: datetime.datetime, name: Optional[str] = None, execution_day_of_month: int = 1, execution_time: datetime.time = datetime.time(0, 0), tags_fn_for_date: Optional[Callable[[datetime.datetime], Optional[Dict[str, str]]]] = None, solid_selection: Optional[List[str]] = None, mode: Optional[str] = 'default', should_execute: Optional[Callable[[ScheduleExecutionContext], bool]] = None, environment_vars: Optional[Dict[str, str]] = None, end_date: Optional[datetime.datetime] = None, execution_timezone: Optional[str] = None, partition_months_offset: Optional[int] = 1, description: Optional[str] = None</em><span class=\"sig-paren\">)</span> &#x2192; Callable[[Callable[[...], Dict[str, Any]]], dagster.core.definitions.schedule.ScheduleDefinition]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/schedule#monthly_schedule\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.monthly_schedule\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a schedule that runs monthly.</p>\n<p>The decorated function will be called as the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config_fn</span></code> of the underlying\n<a class=\"reference internal\" href=\"#dagster.ScheduleDefinition\" title=\"dagster.ScheduleDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleDefinition</span></code></a> and should take a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> as its only argument, returning the environment\ndict for the scheduled execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline to execute when the schedule runs.</p></li>\n<li><p><strong>start_date</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a>) \u2013 The date from which to run the schedule.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the schedule to create.</p></li>\n<li><p><strong>execution_day_of_month</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The day of the month on which to run the schedule (must be\nbetween 0 and 31).</p></li>\n<li><p><strong>execution_time</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.time\" title=\"(in Python v3.8)\"><em>datetime.time</em></a>) \u2013 The time at which to execute the schedule.</p></li>\n<li><p><strong>tags_fn_for_date</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em><em>]</em>) \u2013 A\nfunction that generates tags to attach to the schedules runs. Takes the date of the\nschedule run and returns a dictionary of tags (string key-value pairs).</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute when the schedule runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The pipeline mode in which to execute this schedule.\n(Default: \u2018default\u2019)</p></li>\n<li><p><strong>should_execute</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em><em>]</em>) \u2013 A function that runs at\nschedule execution tie to determine whether a schedule should execute or skip. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> and returns a boolean (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the\nschedule should execute). Defaults to a function that always returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>environment_vars</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Any environment variables to set when executing\nthe schedule.</p></li>\n<li><p><strong>end_date</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em>) \u2013 The last time to run the schedule to, defaults to\ncurrent time.</p></li>\n<li><p><strong>execution_timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Timezone in which the schedule should run. Only works\nwith DagsterDaemonScheduler, and must be set when using that scheduler.</p></li>\n<li><p><strong>partition_months_offset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 How many months back to go when choosing the partition\nfor a given schedule execution. For example, when partition_months_offset=1, the schedule\nthat executes during month N will fill in the partition for month N-1.\n(Default: 1)</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the schedule.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.weekly_schedule\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">weekly_schedule</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_name: str, start_date: datetime.datetime, name: Optional[str] = None, execution_day_of_week: int = 0, execution_time: datetime.time = datetime.time(0, 0), tags_fn_for_date: Optional[Callable[[datetime.datetime], Optional[Dict[str, str]]]] = None, solid_selection: Optional[List[str]] = None, mode: Optional[str] = 'default', should_execute: Optional[Callable[[ScheduleExecutionContext], bool]] = None, environment_vars: Optional[Dict[str, str]] = None, end_date: Optional[datetime.datetime] = None, execution_timezone: Optional[str] = None, partition_weeks_offset: Optional[int] = 1, description: Optional[str] = None</em><span class=\"sig-paren\">)</span> &#x2192; Callable[[Callable[[...], Dict[str, Any]]], dagster.core.definitions.schedule.ScheduleDefinition]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/schedule#weekly_schedule\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.weekly_schedule\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a schedule that runs weekly.</p>\n<p>The decorated function will be called as the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config_fn</span></code> of the underlying\n<a class=\"reference internal\" href=\"#dagster.ScheduleDefinition\" title=\"dagster.ScheduleDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleDefinition</span></code></a> and should take a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> as its only argument, returning the run config\nfor the scheduled execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline to execute when the schedule runs.</p></li>\n<li><p><strong>start_date</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a>) \u2013 The date from which to run the schedule.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the schedule to create.</p></li>\n<li><p><strong>execution_day_of_week</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The day of the week on which to run the schedule. Must be\nbetween 0 (Sunday) and 6 (Saturday).</p></li>\n<li><p><strong>execution_time</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.time\" title=\"(in Python v3.8)\"><em>datetime.time</em></a>) \u2013 The time at which to execute the schedule.</p></li>\n<li><p><strong>tags_fn_for_date</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em><em>]</em>) \u2013 A\nfunction that generates tags to attach to the schedules runs. Takes the date of the\nschedule run and returns a dictionary of tags (string key-value pairs).</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute when the schedule runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The pipeline mode in which to execute this schedule.\n(Default: \u2018default\u2019)</p></li>\n<li><p><strong>should_execute</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em><em>]</em>) \u2013 A function that runs at\nschedule execution tie to determine whether a schedule should execute or skip. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> and returns a boolean (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the\nschedule should execute). Defaults to a function that always returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>environment_vars</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Any environment variables to set when executing\nthe schedule.</p></li>\n<li><p><strong>end_date</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em>) \u2013 The last time to run the schedule to, defaults to\ncurrent time.</p></li>\n<li><p><strong>execution_timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Timezone in which the schedule should run. Only works\nwith DagsterDaemonScheduler, and must be set when using that scheduler.</p></li>\n<li><p><strong>partition_weeks_offset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 How many weeks back to go when choosing the partition\nfor a given schedule execution. For example, when partition_weeks_offset=1, the schedule\nthat executes during week N will fill in the partition for week N-1.\n(Default: 1)</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the schedule.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.hourly_schedule\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">hourly_schedule</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_name: str, start_date: datetime.datetime, name: Optional[str] = None, execution_time: datetime.time = datetime.time(0, 0), tags_fn_for_date: Optional[Callable[[datetime.datetime], Optional[Dict[str, str]]]] = None, solid_selection: Optional[List[str]] = None, mode: Optional[str] = 'default', should_execute: Optional[Callable[[ScheduleExecutionContext], bool]] = None, environment_vars: Optional[Dict[str, str]] = None, end_date: Optional[str] = None, execution_timezone: Optional[str] = None, partition_hours_offset: Optional[int] = 1, description: Optional[str] = None</em><span class=\"sig-paren\">)</span> &#x2192; Callable[[Callable[[...], Dict[str, Any]]], dagster.core.definitions.schedule.ScheduleDefinition]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/schedule#hourly_schedule\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.hourly_schedule\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a schedule that runs hourly.</p>\n<p>The decorated function will be called as the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config_fn</span></code> of the underlying\n<a class=\"reference internal\" href=\"#dagster.ScheduleDefinition\" title=\"dagster.ScheduleDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleDefinition</span></code></a> and should take a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> as its only argument, returning the run config\nfor the scheduled execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline to execute when the schedule runs.</p></li>\n<li><p><strong>start_date</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a>) \u2013 The date from which to run the schedule.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the schedule to create. By default, this will be the name\nof the decorated function.</p></li>\n<li><p><strong>execution_time</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.time\" title=\"(in Python v3.8)\"><em>datetime.time</em></a>) \u2013 The time at which to execute the schedule. Only the minutes\ncomponent will be respected \u2013 the hour should be 0, and will be ignored if it is not 0.</p></li>\n<li><p><strong>tags_fn_for_date</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em><em>]</em>) \u2013 A\nfunction that generates tags to attach to the schedules runs. Takes the date of the\nschedule run and returns a dictionary of tags (string key-value pairs).</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute when the schedule runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The pipeline mode in which to execute this schedule.\n(Default: \u2018default\u2019)</p></li>\n<li><p><strong>should_execute</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em><em>]</em>) \u2013 A function that runs at\nschedule execution tie to determine whether a schedule should execute or skip. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> and returns a boolean (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the\nschedule should execute). Defaults to a function that always returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>environment_vars</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Any environment variables to set when executing\nthe schedule.</p></li>\n<li><p><strong>end_date</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em>) \u2013 The last time to run the schedule to, defaults to\ncurrent time.</p></li>\n<li><p><strong>execution_timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Timezone in which the schedule should run. Only works\nwith DagsterDaemonScheduler, and must be set when using that scheduler.</p></li>\n<li><p><strong>partition_hours_offset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 How many hours back to go when choosing the partition\nfor a given schedule execution. For example, when partition_hours_offset=1, the schedule\nthat executes during hour N will fill in the partition for hour N-1.\n(Default: 1)</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the schedule.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.daily_schedule\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">daily_schedule</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_name: str, start_date: datetime.datetime, name: Optional[str] = None, execution_time: datetime.time = datetime.time(0, 0), tags_fn_for_date: Optional[Callable[[datetime.datetime], Optional[Dict[str, str]]]] = None, solid_selection: Optional[List[str]] = None, mode: Optional[str] = 'default', should_execute: Optional[Callable[[ScheduleExecutionContext], bool]] = None, environment_vars: Optional[Dict[str, str]] = None, end_date: Optional[datetime.datetime] = None, execution_timezone: Optional[str] = None, partition_days_offset: Optional[int] = 1, description: Optional[str] = None</em><span class=\"sig-paren\">)</span> &#x2192; Callable[[Callable[[...], Dict[str, Any]]], dagster.core.definitions.schedule.ScheduleDefinition]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/schedule#daily_schedule\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.daily_schedule\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a schedule that runs daily.</p>\n<p>The decorated function will be called as the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config_fn</span></code> of the underlying\n<a class=\"reference internal\" href=\"#dagster.ScheduleDefinition\" title=\"dagster.ScheduleDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleDefinition</span></code></a> and should take a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> as its only argument, returning the run config\nfor the scheduled execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline to execute when the schedule runs.</p></li>\n<li><p><strong>start_date</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a>) \u2013 The date from which to run the schedule.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the schedule to create.</p></li>\n<li><p><strong>execution_time</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.time\" title=\"(in Python v3.8)\"><em>datetime.time</em></a>) \u2013 The time at which to execute the schedule.</p></li>\n<li><p><strong>tags_fn_for_date</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em><em>]</em>) \u2013 A\nfunction that generates tags to attach to the schedules runs. Takes the date of the\nschedule run and returns a dictionary of tags (string key-value pairs).</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute when the schedule runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The pipeline mode in which to execute this schedule.\n(Default: \u2018default\u2019)</p></li>\n<li><p><strong>should_execute</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em><em>]</em>) \u2013 A function that runs at\nschedule execution tie to determine whether a schedule should execute or skip. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> and returns a boolean (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the\nschedule should execute). Defaults to a function that always returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>environment_vars</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Any environment variables to set when executing\nthe schedule.</p></li>\n<li><p><strong>end_date</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em>) \u2013 The last time to run the schedule to, defaults to\ncurrent time.</p></li>\n<li><p><strong>execution_timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Timezone in which the schedule should run. Only works\nwith DagsterDaemonScheduler, and must be set when using that scheduler.</p></li>\n<li><p><strong>partition_days_offset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 How many days back to go when choosing the partition\nfor a given schedule execution. For example, when partition_days_offset=1, the schedule\nthat executes during day N will fill in the partition for day N-1.\n(Default: 1)</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the schedule.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.ScheduleDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ScheduleDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">cron_schedule</em>, <em class=\"sig-param\">pipeline_name</em>, <em class=\"sig-param\">run_config=None</em>, <em class=\"sig-param\">run_config_fn=None</em>, <em class=\"sig-param\">tags=None</em>, <em class=\"sig-param\">tags_fn=None</em>, <em class=\"sig-param\">solid_selection=None</em>, <em class=\"sig-param\">mode='default'</em>, <em class=\"sig-param\">should_execute=None</em>, <em class=\"sig-param\">environment_vars=None</em>, <em class=\"sig-param\">execution_timezone=None</em>, <em class=\"sig-param\">execution_fn=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/schedule#ScheduleDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ScheduleDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a schedule that targets a pipeline</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the schedule to create.</p></li>\n<li><p><strong>cron_schedule</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 A valid cron string specifying when the schedule will run, e.g.,\n\u201845 23 * * 6\u2019 for a schedule that runs at 11:45 PM every Saturday.</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline to execute when the schedule runs.</p></li>\n<li><p><strong>execution_fn</strong> (<em>Callable</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>]</em>) \u2013 <p>The core evaluation function for the\nschedule, which is run at an interval to determine whether a run should be launched or\nnot. Takes a <a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a>.</p>\n<p>This function must return a generator, which must yield either a single SkipReason\nor one or more RunRequest objects.</p>\n</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>]</em>) \u2013 The environment config that parameterizes this execution,\nas a dict.</p></li>\n<li><p><strong>run_config_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>]</em><em>, </em><em>[</em><em>Dict</em><em>]</em><em>]</em><em>]</em>) \u2013 A function that\ntakes a ScheduleExecutionContext object and returns the environment configuration that\nparameterizes this execution, as a dict. You may set only one of <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">run_config_fn</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">execution_fn</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A dictionary of tags (string key-value pairs) to attach\nto the scheduled runs.</p></li>\n<li><p><strong>tags_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em><em>]</em>) \u2013 A\nfunction that generates tags to attach to the schedules runs. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> and returns a dictionary of tags (string\nkey-value pairs). You may set only one of <code class=\"docutils literal notranslate\"><span class=\"pre\">tags</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tags_fn</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">execution_fn</span></code>.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute when the schedule runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this schedule. (default: \u2018default\u2019)</p></li>\n<li><p><strong>should_execute</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><em>ScheduleExecutionContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em><em>]</em>) \u2013 A function that runs\nat schedule execution time to determine whether a schedule should execute or skip. Takes\na <a class=\"reference internal\" href=\"#dagster.ScheduleExecutionContext\" title=\"dagster.ScheduleExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleExecutionContext</span></code></a> and returns a boolean (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the\nschedule should execute). Defaults to a function that always returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>environment_vars</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The environment variables to set for the\nschedule</p></li>\n<li><p><strong>execution_timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Timezone in which the schedule should run. Only works\nwith DagsterDaemonScheduler, and must be set when using that scheduler.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the schedule.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.ScheduleExecutionContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ScheduleExecutionContext</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">instance</em>, <em class=\"sig-param\">scheduled_execution_time</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/schedule#ScheduleExecutionContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ScheduleExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Schedule-specific execution context.</p>\n<p>An instance of this class is made available as the first argument to various ScheduleDefinition\nfunctions. It is passed as the first argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config_fn</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tags_fn</span></code>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">should_execute</span></code>.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.ScheduleExecutionContext.instance\">\n<code class=\"sig-name descname\">instance</code><a class=\"headerlink\" href=\"#dagster.ScheduleExecutionContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The instance configured to run the schedule</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\">DagsterInstance</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.ScheduleExecutionContext.scheduled_execution_time\">\n<code class=\"sig-name descname\">scheduled_execution_time</code><a class=\"headerlink\" href=\"#dagster.ScheduleExecutionContext.scheduled_execution_time\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The time in which the execution was scheduled to happen. May differ slightly\nfrom both the actual execution time and the time at which the run config is computed.\nNot available in all schedulers - currently only set in deployments using\nDagsterDaemonScheduler.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>datetime</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.core.scheduler.DagsterDaemonScheduler\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.core.scheduler.</code><code class=\"sig-name descname\">DagsterDaemonScheduler</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">max_catchup_runs=5</em>, <em class=\"sig-param\">inst_data=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/scheduler/scheduler#DagsterDaemonScheduler\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.core.scheduler.DagsterDaemonScheduler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Default scheduler implementation that submits runs from the <cite>dagster-daemon</cite>\nlong-lived process. Periodically checks each running schedule for execution times that don\u2019t\nhave runs yet and launches them.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>max_catchup_runs</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 <p>For partitioned schedules, controls the maximum number of past\npartitions for each schedule that will be considered when looking for missing\nruns (defaults to 5). Generally this parameter will only come into play if the scheduler\nfalls behind or launches after experiencing downtime. This parameter will not be checked for\nschedules without partition sets (for example, schedules created using the &#64;schedule\ndecorator) - only the most recent execution time will be considered for those schedules.</p>\n<p>Note that no matter what this value is, the scheduler will never launch a run from a time\nbefore the schedule was turned on (even if the start_date on the schedule is earlier) - if\nyou want to launch runs for earlier partitions, launch a backfill.</p>\n</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sensors\">\n<h1>Sensors<a class=\"headerlink\" href=\"#sensors\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"function\">\n<dt id=\"dagster.sensor\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">sensor</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_name: str</em>, <em class=\"sig-param\">name: Optional[str] = None</em>, <em class=\"sig-param\">solid_selection: Optional[List[str]] = None</em>, <em class=\"sig-param\">mode: Optional[str] = None</em>, <em class=\"sig-param\">minimum_interval_seconds: Optional[int] = None</em>, <em class=\"sig-param\">description: Optional[str] = None</em><span class=\"sig-paren\">)</span> &#x2192; Callable[[Callable[[SensorExecutionContext], Union[dagster.core.definitions.job.SkipReason, dagster.core.definitions.job.RunRequest]]], dagster.core.definitions.sensor.SensorDefinition]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/sensor#sensor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a sensor where the decorated function is used as the sensor\u2019s evaluation function.  The\ndecorated function may:</p>\n<ol class=\"arabic simple\">\n<li><p>Return a <cite>RunRequest</cite> object.</p></li>\n<li><p>Yield multiple of <cite>RunRequest</cite> objects.</p></li>\n<li><p>Return or yield a <cite>SkipReason</cite> object, providing a descriptive message of why no runs were\nrequested.</p></li>\n<li><p>Return or yield nothing (skipping without providing a reason)</p></li>\n</ol>\n<p>Takes a <a class=\"reference internal\" href=\"#dagster.SensorExecutionContext\" title=\"dagster.SensorExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SensorExecutionContext</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the target pipeline</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the sensor. Defaults to the name of the decorated\nfunction.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute for runs for this sensor e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing runs for this sensor.\n(default: \u2018default\u2019)</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.  Practically, the time elapsed between sensor evaluations\nwill be the shortest multiple of the sensor daemon evaluation interval (30 seconds) that\nis greater than or equal to this value.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.SensorDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">SensorDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">pipeline_name</em>, <em class=\"sig-param\">evaluation_fn</em>, <em class=\"sig-param\">solid_selection=None</em>, <em class=\"sig-param\">mode=None</em>, <em class=\"sig-param\">minimum_interval_seconds=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/sensor#SensorDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SensorDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a sensor that initiates a set of job runs</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the sensor to create.</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline to execute when the sensor fires.</p></li>\n<li><p><strong>evaluation_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.SensorExecutionContext\" title=\"dagster.SensorExecutionContext\"><em>SensorExecutionContext</em></a><em>]</em><em>]</em>) \u2013 <p>The core evaluation function for the\nsensor, which is run at an interval to determine whether a run should be launched or\nnot. Takes a <a class=\"reference internal\" href=\"#dagster.SensorExecutionContext\" title=\"dagster.SensorExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SensorExecutionContext</span></code></a>.</p>\n<p>This function must return a generator, which must yield either a single SkipReason\nor one or more RunRequest objects.</p>\n</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute when the sensor runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this sensor. (default: \u2018default\u2019)</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.  Practically, the time elapsed between sensor evaluations\nwill be the shortest multiple of the sensor daemon evaluation interval (set on the\ninstance in the \u201csensors_setting\u201d configuration map, 30 seconds by default) that is\ngreater than or equal to this value.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.SensorExecutionContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">SensorExecutionContext</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">instance</em>, <em class=\"sig-param\">last_completion_time</em>, <em class=\"sig-param\">last_run_key</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/sensor#SensorExecutionContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SensorExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sensor execution context.</p>\n<p>An instance of this class is made available as the first argument to the evaluation function\non SensorDefinition.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.SensorExecutionContext.instance\">\n<code class=\"sig-name descname\">instance</code><a class=\"headerlink\" href=\"#dagster.SensorExecutionContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The instance configured to run the schedule</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\">DagsterInstance</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.SensorExecutionContext.last_completion_time\">\n<code class=\"sig-name descname\">last_completion_time</code><a class=\"headerlink\" href=\"#dagster.SensorExecutionContext.last_completion_time\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The last time that the sensor was evaluated (UTC).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.SensorExecutionContext.last_run_key\">\n<code class=\"sig-name descname\">last_run_key</code><a class=\"headerlink\" href=\"#dagster.SensorExecutionContext.last_run_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The run key of the RunRequest most recently created by this sensor.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/schedules-sensors", "customsidebar": null, "display_toc": true, "meta": {}, "metatags": "", "next": null, "page_source_suffix": ".rst", "parents": [], "prev": null, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/schedules-sensors.rst.txt", "title": "Run Requests", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Run Requests</a></li>\n<li><a class=\"reference internal\" href=\"#schedules\">Schedules</a></li>\n<li><a class=\"reference internal\" href=\"#sensors\">Sensors</a></li>\n</ul>\n"}, "solids": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"solids\">\n<h1>Solids<a class=\"headerlink\" href=\"#solids\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The foundational unit of composition in Dagster.</p>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"defining-solids\">\n<h2>Defining solids<a class=\"headerlink\" href=\"#defining-solids\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.solid\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">input_defs=None</em>, <em class=\"sig-param\">output_defs=None</em>, <em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">tags=None</em>, <em class=\"sig-param\">version=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/solid#solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a solid with the specified parameters from the decorated function.</p>\n<p>This shortcut simplifies the core <a class=\"reference internal\" href=\"#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SolidDefinition</span></code></a> API by exploding arguments into\nkwargs of the decorated compute function and omitting additional parameters when they are not\nneeded.</p>\n<p>Input and output definitions will be inferred from the type signature of the decorated function\nif not explicitly provided.</p>\n<p>The decorated function will be used as the solid\u2019s compute function. The signature of the\ndecorated function is more flexible than that of the <code class=\"docutils literal notranslate\"><span class=\"pre\">compute_fn</span></code> in the core API; it may:</p>\n<ol class=\"arabic simple\">\n<li><p>Return a value. This value will be wrapped in an <a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> and yielded by the compute function.</p></li>\n<li><p>Return an <a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a>. This output will be yielded by the compute function.</p></li>\n<li><p>Yield <a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> or other <a class=\"reference internal\" href=\"#events\"><span class=\"std std-ref\">event objects</span></a>. Same as default compute behavior.</p></li>\n</ol>\n<p>Note that options 1) and 2) are incompatible with yielding other events \u2013 if you would like\nto decorate a function that yields events, it must also wrap its eventual output in an\n<a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> and yield it.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of solid. Must be unique within any <a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a>\nusing the solid.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of this solid.</p></li>\n<li><p><strong>input_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>]</em>) \u2013 List of input definitions. Inferred from typehints if not provided.</p></li>\n<li><p><strong>output_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em><em>]</em>) \u2013 List of output definitions. Inferred from typehints if not provided.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data\navailable as context.solid_config.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resource handles required by this solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the solid. Frameworks may\nexpect and require certain metadata to be attached to a solid. Users should generally\nnot set metadata directly. Values that are not strings will be json encoded and must meet\nthe criteria that <cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of the solid\u2019s compute_fn. Two solids should have\nthe same version if and only if they deterministically produce the same outputs when\nprovided the same inputs.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;hello&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">}</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"c1\"># explicitly type and name inputs and outputs</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"c1\"># same as above inferred from signature</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">&#39;log something&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;str_value&#39;</span> <span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)}</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"c1\"># context.solid_config is a dictionary with &#39;str_value&#39; key</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span> <span class=\"o\">+</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;str_value&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.SolidDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">SolidDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">input_defs</em>, <em class=\"sig-param\">compute_fn</em>, <em class=\"sig-param\">output_defs</em>, <em class=\"sig-param\">config_schema=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">tags=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">positional_inputs=None</em>, <em class=\"sig-param\">version=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/solid#SolidDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of a Solid that performs a user-defined computation.</p>\n<p>For more details on what a solid is, refer to the\n<a class=\"reference external\" href=\"../../overview/solids-pipelines/solids\">Solid Overview</a> .</p>\n<p>End users should prefer the <a class=\"reference internal\" href=\"#dagster.solid\" title=\"dagster.solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;solid</span></code></a> and <a class=\"reference internal\" href=\"#dagster.lambda_solid\" title=\"dagster.lambda_solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;lambda_solid</span></code></a>\ndecorators. SolidDefinition is generally intended to be used by framework authors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the solid. Must be unique within any <a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a>\nusing the solid.</p></li>\n<li><p><strong>input_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em>) \u2013 Inputs of the solid.</p></li>\n<li><p><strong>compute_fn</strong> (<em>Callable</em>) \u2013 <p>The core of the solid, the function that does the actual\ncomputation. The signature of this function is determined by <code class=\"docutils literal notranslate\"><span class=\"pre\">input_defs</span></code>, with\nan additional injected first argument, <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code>, a collection of information provided\nby the system.</p>\n<p>This function must return a generator, which must yield one <a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> for each\nof the solid\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">output_defs</span></code>, and additionally may yield other types of Dagster\nevents, including <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Materialization</span></code> and <a class=\"reference internal\" href=\"#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExpectationResult</span></code></a>.</p>\n</p></li>\n<li><p><strong>output_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em>) \u2013 Outputs of the solid.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema for the config. Configuration data\navailable in <cite>init_context.solid_config</cite>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the solid. Frameworks may\nexpect and require certain metadata to be attached to a solid. Users should generally\nnot set metadata directly. Values that are not strings will be json encoded and must meet\nthe criteria that <cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resources handles required by this\nsolid.</p></li>\n<li><p><strong>positional_inputs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The positional order of the input names if it\ndiffers from the order of the input definitions.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of the solid\u2019s compute_fn. Two solids should have\nthe same version if and only if they deterministically produce the same outputs when\nprovided the same inputs.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">_add_one</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">[</span><span class=\"s2\">&quot;num&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">SolidDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;add_one&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s2\">&quot;num&quot;</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">)],</span> <span class=\"c1\"># default name (&quot;result&quot;)</span>\n    <span class=\"n\">compute_fn</span><span class=\"o\">=</span><span class=\"n\">_add_one</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"dagster.SolidDefinition.configured\">\n<code class=\"sig-name descname\">configured</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_or_config_fn: Any</em>, <em class=\"sig-param\">name: str</em>, <em class=\"sig-param\">config_schema: Optional[Dict[str</em>, <em class=\"sig-param\">Any]] = None</em>, <em class=\"sig-param\">description: Optional[str] = None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.SolidDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the new definition. This is a required argument, as this definition\ntype has a name uniqueness constraint.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.lambda_solid\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">lambda_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name: Union[str, None, Callable[[...], Any]] = None, description: Optional[str] = None, input_defs: Optional[List[dagster.core.definitions.input.InputDefinition]] = None, output_def: Optional[dagster.core.definitions.output.OutputDefinition] = None</em><span class=\"sig-paren\">)</span> &#x2192; Union[dagster.core.definitions.decorators.lambda_solid._LambdaSolid, dagster.core.definitions.solid.SolidDefinition]<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/lambda_solid#lambda_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.lambda_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a simple solid from the decorated function.</p>\n<p>This shortcut allows the creation of simple solids that do not require\nconfiguration and whose implementations do not require a\n<a class=\"reference internal\" href=\"execution#dagster.SystemComputeExecutionContext\" title=\"dagster.SystemComputeExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">context</span></code></a>.</p>\n<p>Lambda solids take any number of inputs and produce a single output.</p>\n<p>Inputs can be defined using <a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InputDefinition</span></code></a> and passed to the <code class=\"docutils literal notranslate\"><span class=\"pre\">input_defs</span></code> argument\nof this decorator, or inferred from the type signature of the decorated function.</p>\n<p>The single output can be defined using <a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputDefinition</span></code></a> and passed as the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">output_def</span></code> argument of this decorator, or its type can be inferred from the type signature\nof the decorated function.</p>\n<p>The body of the decorated function should return a single value, which will be yielded as the\nsolid\u2019s output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of solid.</p></li>\n<li><p><strong>description</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Solid description.</p></li>\n<li><p><strong>input_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em>) \u2013 List of input_defs.</p></li>\n<li><p><strong>output_def</strong> (<a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a>) \u2013 The output of the solid. Defaults to\n<a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputDefinition()</span></code></a>.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;hello&#39;</span>\n\n<span class=\"nd\">@lambda_solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_def</span><span class=\"o\">=</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"c1\"># explicitly type and name inputs and outputs</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n\n<span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"c1\"># same as above inferred from signature</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"inputs-outputs\">\n<h2>Inputs &amp; outputs<a class=\"headerlink\" href=\"#inputs-outputs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.InputDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">InputDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">dagster_type=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">default_value=&lt;class 'dagster.core.definitions.input._NoValueSentinel'&gt;</em>, <em class=\"sig-param\">root_manager_key=None</em>, <em class=\"sig-param\">metadata=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/input#InputDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.InputDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an argument to a solid\u2019s compute function.</p>\n<p>Inputs may flow from previous solids\u2019 outputs, or be stubbed using config. They may optionally\nbe typed using the Dagster type system.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the input.</p></li>\n<li><p><strong>dagster_type</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The type of this input. Users should provide one of the\n<a class=\"reference internal\" href=\"types#builtin\"><span class=\"std std-ref\">built-in types</span></a>, a dagster type explicitly constructed with\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">as_dagster_type()</span></code>, <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;usable_as_dagster_type</span> <span class=\"pre\">&lt;dagster_type()</span></code>, or\n<a class=\"reference internal\" href=\"types#dagster.PythonObjectDagsterType\" title=\"dagster.PythonObjectDagsterType\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">PythonObjectDagsterType()</span></code></a>, or a Python type. Defaults to <a class=\"reference internal\" href=\"types#dagster.Any\" title=\"dagster.Any\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Any</span></code></a>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the input.</p></li>\n<li><p><strong>default_value</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The default value to use if no input is provided.</p></li>\n<li><p><strong>root_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The resource key for the\n<a class=\"reference internal\" href=\"io-managers#dagster.RootInputManager\" title=\"dagster.RootInputManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RootInputManager</span></code></a> used for loading this input when it is not connected to an\nupstream output.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 (Experimental) A dict of metadata for the input.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.InputDefinition.mapping_to\">\n<code class=\"sig-name descname\">mapping_to</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid_name</em>, <em class=\"sig-param\">input_name</em>, <em class=\"sig-param\">fan_in_index=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/input#InputDefinition.mapping_to\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.InputDefinition.mapping_to\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an input mapping to an input of a child solid.</p>\n<p>In a CompositeSolidDefinition, you can use this helper function to construct\nan <a class=\"reference internal\" href=\"#dagster.InputMapping\" title=\"dagster.InputMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InputMapping</span></code></a> to the input of a child solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid to which to map this input.</p></li>\n<li><p><strong>input_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid\u2019 input to which to map this input.</p></li>\n<li><p><strong>fan_in_index</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The index in to a fanned in input, else None</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">input_mapping</span> <span class=\"o\">=</span> <span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;composite_input&#39;</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mapping_to</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;child_solid&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;int_input&#39;</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.OutputDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">OutputDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">dagster_type=None</em>, <em class=\"sig-param\">name=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">is_required=None</em>, <em class=\"sig-param\">io_manager_key=None</em>, <em class=\"sig-param\">metadata=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/output#OutputDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.OutputDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an output from a solid\u2019s compute function.</p>\n<p>Solids can have multiple outputs, in which case outputs cannot be anonymous.</p>\n<p>Many solids have only one output, in which case the user can provide a single output definition\nthat will be given the default name, \u201cresult\u201d.</p>\n<p>Output definitions may be typed using the Dagster type system.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dagster_type</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The type of this output. Users should provide one of the\n<a class=\"reference internal\" href=\"types#builtin\"><span class=\"std std-ref\">built-in types</span></a>, a dagster type explicitly constructed with\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">as_dagster_type()</span></code>, <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;usable_as_dagster_type</span> <span class=\"pre\">&lt;dagster_type()</span></code>, or\n<a class=\"reference internal\" href=\"types#dagster.PythonObjectDagsterType\" title=\"dagster.PythonObjectDagsterType\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">PythonObjectDagsterType()</span></code></a>, or a Python type. Defaults to <a class=\"reference internal\" href=\"types#dagster.Any\" title=\"dagster.Any\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Any</span></code></a>.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the output. (default: \u201cresult\u201d)</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the output.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether the presence of this field is required. (default: True)</p></li>\n<li><p><strong>io_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The resource key of the output manager used for this output.\n(default: \u201cio_manager\u201d).</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 (Experimental) A dict of the metadata for the output.\nFor example, users can provide a file path if the data object will be stored in a\nfilesystem, or provide information of a database table when it is going to load the data\ninto the table.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.OutputDefinition.mapping_from\">\n<code class=\"sig-name descname\">mapping_from</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid_name</em>, <em class=\"sig-param\">output_name=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/output#OutputDefinition.mapping_from\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.OutputDefinition.mapping_from\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an output mapping from an output of a child solid.</p>\n<p>In a CompositeSolidDefinition, you can use this helper function to construct\nan <a class=\"reference internal\" href=\"#dagster.OutputMapping\" title=\"dagster.OutputMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputMapping</span></code></a> from the output of a child solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid from which to map this output.</p></li>\n<li><p><strong>input_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid\u2019s output from which to map this output.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">output_mapping</span> <span class=\"o\">=</span> <span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mapping_from</span><span class=\"p\">(</span><span class=\"s1\">&#39;child_solid&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"composing-solids\">\n<h2>Composing solids<a class=\"headerlink\" href=\"#composing-solids\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.composite_solid\">\n<code class=\"sig-prename descclassname\">&#64;</code><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">composite_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name: Union[str, None, Callable[[...], Any]] = None, input_defs: Optional[List[dagster.core.definitions.input.InputDefinition]] = None, output_defs: Optional[List[dagster.core.definitions.output.OutputDefinition]] = None, description: Optional[str] = None, config_schema: Optional[Dict[str, Any]] = None, config_fn: Optional[Callable[[dict], dict]] = None</em><span class=\"sig-paren\">)</span> &#x2192; dagster.core.definitions.decorators.composite_solid._CompositeSolid<a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/composite_solid#composite_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.composite_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a composite solid with the specified parameters from the decorated composition\nfunction.</p>\n<p>Using this decorator allows you to build up the dependency graph of the composite by writing a\nfunction that invokes solids and passes the output to other solids. This is similar to the use\nof the <a class=\"reference internal\" href=\"pipeline#dagster.pipeline\" title=\"dagster.pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;pipeline</span></code></a> decorator, with the additional ability to remap inputs,\noutputs, and config across the composite boundary.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name for the new composite solid. Must be unique within any\n<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a> using the solid.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the new composite solid.</p></li>\n<li><p><strong>input_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>]</em>) \u2013 <p>Input definitions for the composite solid.\nIf not provided explicitly, these will be inferred from typehints.</p>\n<p>Uses of these inputs in the body of the decorated composition function will be used to\ninfer the appropriate set of <a class=\"reference internal\" href=\"#dagster.InputMapping\" title=\"dagster.InputMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InputMappings</span></code></a> passed to the\nunderlying <a class=\"reference internal\" href=\"#dagster.CompositeSolidDefinition\" title=\"dagster.CompositeSolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CompositeSolidDefinition</span></code></a>.</p>\n</p></li>\n<li><p><strong>output_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em><em>]</em>) \u2013 <p>Output definitions for the composite solid.\nIf not provided explicitly, these will be inferred from typehints.</p>\n<p>Uses of these outputs in the body of the decorated composition function, as well as the\nreturn value of the decorated function, will be used to infer the appropriate set of\n<a class=\"reference internal\" href=\"#dagster.OutputMapping\" title=\"dagster.OutputMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputMappings</span></code></a> for the underlying\n<a class=\"reference internal\" href=\"#dagster.CompositeSolidDefinition\" title=\"dagster.CompositeSolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CompositeSolidDefinition</span></code></a>.</p>\n<p>To map multiple outputs, return a dictionary from the composition function.</p>\n</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Must be combined with the\n<cite>config_fn</cite> argument in order to transform this config into the config for the contained\nsolids.</p></li>\n<li><p><strong>config_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 <p>By specifying a config mapping\nfunction, you can override the configuration for the child solids contained within this\ncomposite solid.</p>\n<p>Config mappings require the configuration field to be specified as <code class=\"docutils literal notranslate\"><span class=\"pre\">config_schema</span></code>, which\nwill be exposed as the configuration field for the composite solid, as well as a\nconfiguration mapping function, <code class=\"docutils literal notranslate\"><span class=\"pre\">config_fn</span></code>, which maps the config provided to the\ncomposite solid to the config that will be provided to the child solids.</p>\n</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"nd\">@composite_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_two</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"n\">adder_1</span> <span class=\"o\">=</span> <span class=\"n\">add_one</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_1&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">adder_2</span> <span class=\"o\">=</span> <span class=\"n\">add_one</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_2&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">adder_2</span><span class=\"p\">(</span><span class=\"n\">adder_1</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.CompositeSolidDefinition\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">CompositeSolidDefinition</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">solid_defs</em>, <em class=\"sig-param\">input_mappings=None</em>, <em class=\"sig-param\">output_mappings=None</em>, <em class=\"sig-param\">config_mapping=None</em>, <em class=\"sig-param\">dependencies=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">tags=None</em>, <em class=\"sig-param\">positional_inputs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/solid#CompositeSolidDefinition\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.CompositeSolidDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The core unit of composition and abstraction, composite solids allow you to\ndefine a solid from a graph of solids.</p>\n<p>In the same way you would refactor a block of code in to a function to deduplicate, organize,\nor manage complexity - you can refactor solids in a pipeline in to a composite solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this composite solid. Must be unique within any\n<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a> using the solid.</p></li>\n<li><p><strong>solid_defs</strong> (<em>List</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><em>SolidDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.CompositeSolidDefinition\" title=\"dagster.CompositeSolidDefinition\"><em>CompositeSolidDefinition</em></a><em>]</em><em>]</em>) \u2013 The set of solid\ndefinitions used in this composite solid. Composites may be arbitrarily nested.</p></li>\n<li><p><strong>input_mappings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InputMapping\" title=\"dagster.InputMapping\"><em>InputMapping</em></a><em>]</em><em>]</em>) \u2013 Define the inputs to the composite solid,\nand how they map to the inputs of its constituent solids.</p></li>\n<li><p><strong>output_mappings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.OutputMapping\" title=\"dagster.OutputMapping\"><em>OutputMapping</em></a><em>]</em><em>]</em>) \u2013 Define the outputs of the composite solid,\nand how they map from the outputs of its constituent solids.</p></li>\n<li><p><strong>config_mapping</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ConfigMapping\" title=\"dagster.ConfigMapping\"><em>ConfigMapping</em></a><em>]</em>) \u2013 By specifying a config mapping, you can override\nthe configuration for the child solids contained within this composite solid. Config\nmappings require both a configuration field to be specified, which is exposed as the\nconfiguration for the composite solid, and a configuration mapping function, which\nis called to map the configuration of the composite solid into the configuration that\nis applied to any child solids.</p></li>\n<li><p><strong>dependencies</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"pipeline#dagster.SolidInvocation\" title=\"dagster.SolidInvocation\"><em>SolidInvocation</em></a><em>]</em><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"pipeline#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><em>DependencyDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A structure that declares where each solid gets its inputs. The keys at the top\nlevel dict are either string names of solids or SolidInvocations. The values\nare dicts that map input names to DependencyDefinitions.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human readable description of this composite solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the solid. Frameworks may\nexpect and require certain metadata to be attached to a solid. Users should generally\nnot set metadata directly. Values that are not strings will be json encoded and must meet\nthe criteria that <cite>json.loads(json.dumps(value)) == value</cite>.\nmay expect and require certain metadata to be attached to a solid.</p></li>\n<li><p><strong>positional_inputs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The positional order of the inputs if it\ndiffers from the order of the input mappings</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">add_two</span> <span class=\"o\">=</span> <span class=\"n\">CompositeSolidDefinition</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;add_two&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">solid_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">add_one</span><span class=\"p\">],</span>\n    <span class=\"n\">dependencies</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"n\">SolidInvocation</span><span class=\"p\">(</span><span class=\"s1\">&#39;add_one&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;adder_1&#39;</span><span class=\"p\">):</span> <span class=\"p\">{},</span>\n        <span class=\"n\">SolidInvocation</span><span class=\"p\">(</span><span class=\"s1\">&#39;add_one&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;adder_2&#39;</span><span class=\"p\">):</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_1&#39;</span><span class=\"p\">)},</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">input_mappings</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mapping_to</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num&#39;</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_mappings</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mapping_from</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_2&#39;</span><span class=\"p\">)],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"dagster.CompositeSolidDefinition.configured\">\n<code class=\"sig-name descname\">configured</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_or_config_fn: Any</em>, <em class=\"sig-param\">name: str</em>, <em class=\"sig-param\">config_schema: Optional[Dict[str</em>, <em class=\"sig-param\">Any]] = None</em>, <em class=\"sig-param\">description: Optional[str] = None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.CompositeSolidDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the new definition. This is a required argument, as this definition\ntype has a name uniqueness constraint.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.InputMapping\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">InputMapping</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/input#InputMapping\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.InputMapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an input mapping for a composite solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>definition</strong> (<a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a>) \u2013 Defines the input to the composite solid.</p></li>\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid onto which to map the input.</p></li>\n<li><p><strong>input_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the input to the child solid onto which to map the input.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.OutputMapping\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">OutputMapping</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/output#OutputMapping\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.OutputMapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an output mapping for a composite solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>definition</strong> (<a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a>) \u2013 Defines the output of the composite solid.</p></li>\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid from which to map the output.</p></li>\n<li><p><strong>output_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid\u2019s output from which to map the output.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.ConfigMapping\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ConfigMapping</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/config#ConfigMapping\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ConfigMapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a config mapping for a composite solid.</p>\n<p>By specifying a config mapping function, you can override the configuration for the child\nsolids contained within a composite solid.</p>\n<p>Config mappings require the configuration schema to be specified as <code class=\"docutils literal notranslate\"><span class=\"pre\">config_schema</span></code>, which will\nbe exposed as the configuration schema for the composite solid, as well as a configuration mapping\nfunction, <code class=\"docutils literal notranslate\"><span class=\"pre\">config_fn</span></code>, which maps the config provided to the composite solid to the config\nthat will be provided to the child solids.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The function that will be called\nto map the composite config to a config appropriate for the child solids.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema of the composite config.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"events\">\n<span id=\"id1\"></span><h2>Events<a class=\"headerlink\" href=\"#events\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The objects that can be yielded by the body of solids\u2019 compute functions to communicate with the\nDagster framework.</p>\n<p>(Note that <a class=\"reference internal\" href=\"#dagster.Failure\" title=\"dagster.Failure\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Failure</span></code></a> and <a class=\"reference internal\" href=\"#dagster.RetryRequested\" title=\"dagster.RetryRequested\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RetryRequested</span></code></a> are intended to be raised from solids rather than yielded.)</p>\n<div class=\"section\" id=\"event-types\">\n<h3>Event types<a class=\"headerlink\" href=\"#event-types\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dagster.Output\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Output</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#Output\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event corresponding to one of a solid\u2019s outputs.</p>\n<p>Solid compute functions must explicitly yield events of this type when they have more than\none output, or when they also yield events of other types, or when defining a solid using the\n<a class=\"reference internal\" href=\"#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SolidDefinition</span></code></a> API directly.</p>\n<p>Outputs are values produced by solids that will be consumed by downstream solids in a pipeline.\nThey are type-checked at solid boundaries when their corresponding <a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputDefinition</span></code></a>\nor the downstream <a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InputDefinition</span></code></a> is typed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The value returned by the compute function.</p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the corresponding output definition. (default:\n\u201cresult\u201d)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.AssetMaterialization\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">AssetMaterialization</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetMaterialization\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.AssetMaterialization\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event indicating that a solid has materialized an asset.</p>\n<p>Solid compute functions may yield events of this type whenever they wish to indicate to the\nDagster framework (and the end user) that they have produced a materialized value as a\nside effect of computation. Unlike outputs, asset materializations can not be passed to other\nsolids, and their persistence is controlled by solid logic, rather than by the Dagster\nframework.</p>\n<p>Solid authors should use these events to organize metadata about the side effects of their\ncomputations, enabling tooling like the Assets dashboard in Dagit.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>asset_key</strong> (<em>str|List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>|AssetKey</em>) \u2013 A key to identify the materialized asset across pipeline\nruns</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A longer human-readable description of the materialized value.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.EventMetadataEntry\" title=\"dagster.EventMetadataEntry\"><em>EventMetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\nmaterialized value.</p></li>\n<li><p><strong>partition</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the partition that was materialized.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.AssetMaterialization.file\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">file</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">path</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">asset_key=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetMaterialization.file\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.AssetMaterialization.file\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for standard materializations corresponding to files on disk.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The path to the file.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the materialization.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.ExpectationResult\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ExpectationResult</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#ExpectationResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ExpectationResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event corresponding to a data quality test.</p>\n<p>Solid compute functions may yield events of this type whenever they wish to indicate to the\nDagster framework (and the end user) that a data quality test has produced a (positive or\nnegative) result.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>success</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether the expectation passed or not.</p></li>\n<li><p><strong>label</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Short display name for expectation. Defaults to \u201cresult\u201d.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A longer human-readable description of the expectation.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.EventMetadataEntry\" title=\"dagster.EventMetadataEntry\"><em>EventMetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\nexpectation.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.TypeCheck\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">TypeCheck</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#TypeCheck\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.TypeCheck\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event corresponding to a successful typecheck.</p>\n<p>Events of this type should be returned by user-defined type checks when they need to encapsulate\nadditional metadata about a type check\u2019s success or failure. (i.e., when using\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">as_dagster_type()</span></code>, <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;usable_as_dagster_type</span></code>, or the underlying\n<a class=\"reference internal\" href=\"types#dagster.PythonObjectDagsterType\" title=\"dagster.PythonObjectDagsterType\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">PythonObjectDagsterType()</span></code></a> API.)</p>\n<p>Solid compute functions should generally avoid yielding events of this type to avoid confusion.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>success</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the type check succeeded, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> otherwise.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the type check.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.EventMetadataEntry\" title=\"dagster.EventMetadataEntry\"><em>EventMetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\ntype check.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.Failure\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Failure</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">metadata_entries=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#Failure\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.Failure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event indicating solid failure.</p>\n<p>Raise events of this type from within solid compute functions or custom type checks in order to\nindicate an unrecoverable failure in user code to the Dagster machinery and return\nstructured metadata about the failure.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the failure.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.EventMetadataEntry\" title=\"dagster.EventMetadataEntry\"><em>EventMetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\nfailure.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.RetryRequested\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">RetryRequested</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">max_retries=1</em>, <em class=\"sig-param\">seconds_to_wait=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#RetryRequested\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RetryRequested\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An exception to raise from a solid to indicate that it should be retried.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>max_retries</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The max number of retries this step should attempt before failing</p></li>\n<li><p><strong>seconds_to_wait</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 Seconds to wait before restarting the step after putting the step in\nto the up_for_retry state</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">flakes</span><span class=\"p\">():</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">flakey_operation</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">RetryRequested</span><span class=\"p\">(</span><span class=\"n\">max_retries</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"metadata-entries\">\n<h3>Metadata entries<a class=\"headerlink\" href=\"#metadata-entries\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Dagster uses lists of metadata entries to communicate arbitrary user-specified metadata about\nstructured events.</p>\n<dl class=\"class\">\n<dt id=\"dagster.EventMetadataEntry\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">EventMetadataEntry</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#EventMetadataEntry\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EventMetadataEntry\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The standard structure for describing metadata for Dagster events.</p>\n<p>Lists of objects of this type can be passed as arguments to Dagster events and will be displayed\nin Dagit and other tooling.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n<li><p><strong>entry_data</strong> (<em>Union</em><em>[</em><em>(</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.TextMetadataEntryData\" title=\"dagster.TextMetadataEntryData\"><em>TextMetadataEntryData</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.UrlMetadataEntryData\" title=\"dagster.UrlMetadataEntryData\"><em>UrlMetadataEntryData</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.PathMetadataEntryData\" title=\"dagster.PathMetadataEntryData\"><em>PathMetadataEntryData</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.JsonMetadataEntryData\" title=\"dagster.JsonMetadataEntryData\"><em>JsonMetadataEntryData</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.MarkdownMetadataEntryData\" title=\"dagster.MarkdownMetadataEntryData\"><em>MarkdownMetadataEntryData</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.FloatMetadataEntryData\" title=\"dagster.FloatMetadataEntryData\"><em>FloatMetadataEntryData</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.IntMetadataEntryData\" title=\"dagster.IntMetadataEntryData\"><em>IntMetadataEntryData</em></a><em>]</em>) \u2013 Typed metadata entry data. The different types allow for customized display in tools\nlike dagit.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.EventMetadataEntry.float\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">float</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">value</em>, <em class=\"sig-param\">label</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#EventMetadataEntry.float\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EventMetadataEntry.float\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing float as\n<a class=\"reference internal\" href=\"#dagster.FloatMetadataEntryData\" title=\"dagster.FloatMetadataEntryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FloatMetadataEntryData</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">calculate_bytes</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">),</span> <span class=\"s2\">&quot;size (bytes)&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em>) \u2013 The float value contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.EventMetadataEntry.fspath\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">fspath</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">path</em>, <em class=\"sig-param\">label=None</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#EventMetadataEntry.fspath\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EventMetadataEntry.fspath\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing a filesystem path as\n<a class=\"reference internal\" href=\"#dagster.PathMetadataEntryData\" title=\"dagster.PathMetadataEntryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PathMetadataEntryData</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">fspath</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/file&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The path contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry. Defaults to the\nbase name of the path.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.EventMetadataEntry.int\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">int</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">value</em>, <em class=\"sig-param\">label</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#EventMetadataEntry.int\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EventMetadataEntry.int\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing int as\n<a class=\"reference internal\" href=\"#dagster.IntMetadataEntryData\" title=\"dagster.IntMetadataEntryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntMetadataEntryData</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">),</span> <span class=\"s2\">&quot;number of rows&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The int value contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.EventMetadataEntry.json\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">json</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">data</em>, <em class=\"sig-param\">label</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#EventMetadataEntry.json\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EventMetadataEntry.json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing JSON data as\n<a class=\"reference internal\" href=\"#dagster.JsonMetadataEntryData\" title=\"dagster.JsonMetadataEntryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JsonMetadataEntryData</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">ExpectationResult</span><span class=\"p\">(</span>\n        <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">missing_things</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;is_present&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">(</span>\n                <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;metadata&quot;</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;missing_columns&quot;</span><span class=\"p\">:</span> <span class=\"n\">missing_things</span><span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The JSON data contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.EventMetadataEntry.md\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">md</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">md_str</em>, <em class=\"sig-param\">label</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#EventMetadataEntry.md\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EventMetadataEntry.md\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing markdown data as\n<a class=\"reference internal\" href=\"#dagster.MarkdownMetadataEntryData\" title=\"dagster.MarkdownMetadataEntryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MarkdownMetadataEntryData</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">md_str</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;info&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">md</span><span class=\"p\">(</span><span class=\"n\">md_str</span><span class=\"o\">=</span><span class=\"n\">md_str</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>md_str</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The markdown contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.EventMetadataEntry.path\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">path</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">path</em>, <em class=\"sig-param\">label</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#EventMetadataEntry.path\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EventMetadataEntry.path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing a path as\n<a class=\"reference internal\" href=\"#dagster.PathMetadataEntryData\" title=\"dagster.PathMetadataEntryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PathMetadataEntryData</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/file&quot;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;filepath&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The path contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.EventMetadataEntry.text\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">text</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">text</em>, <em class=\"sig-param\">label</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#EventMetadataEntry.text\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EventMetadataEntry.text\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing text as\n<a class=\"reference internal\" href=\"#dagster.TextMetadataEntryData\" title=\"dagster.TextMetadataEntryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextMetadataEntryData</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>text</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The text of this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.EventMetadataEntry.url\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">url</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">url</em>, <em class=\"sig-param\">label</em>, <em class=\"sig-param\">description=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#EventMetadataEntry.url\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.EventMetadataEntry.url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing a URL as\n<a class=\"reference internal\" href=\"#dagster.UrlMetadataEntryData\" title=\"dagster.UrlMetadataEntryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UrlMetadataEntryData</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dashboard&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;http://mycoolsite.com/my_dashboard&quot;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;dashboard_url&quot;</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>url</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The URL contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.JsonMetadataEntryData\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">JsonMetadataEntryData</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#JsonMetadataEntryData\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.JsonMetadataEntryData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for JSON metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>data</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The JSON data.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.MarkdownMetadataEntryData\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">MarkdownMetadataEntryData</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#MarkdownMetadataEntryData\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.MarkdownMetadataEntryData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for markdown metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>md_str</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The markdown as a string.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.PathMetadataEntryData\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">PathMetadataEntryData</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#PathMetadataEntryData\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PathMetadataEntryData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for path metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The path as a string.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.TextMetadataEntryData\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">TextMetadataEntryData</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#TextMetadataEntryData\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.TextMetadataEntryData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for text metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>text</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The text data.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.UrlMetadataEntryData\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">UrlMetadataEntryData</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#UrlMetadataEntryData\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.UrlMetadataEntryData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for URL metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>url</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The URL as a string.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.FloatMetadataEntryData\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">FloatMetadataEntryData</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#FloatMetadataEntryData\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.FloatMetadataEntryData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for float metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em>) \u2013 The float value.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.IntMetadataEntryData\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">IntMetadataEntryData</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#IntMetadataEntryData\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.IntMetadataEntryData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for int metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The int value.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"asset-key\">\n<h3>Asset Key<a class=\"headerlink\" href=\"#asset-key\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Dagster uses <a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetKey</span></code></a> to build an index on <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Materialization</span></code> events.\nAssets materialized with an <a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetKey</span></code></a> are highlighted in <cite>dagit</cite> on the <cite>Assets</cite>\ndashboard.</p>\n<dl class=\"class\">\n<dt id=\"dagster.AssetKey\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">AssetKey</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetKey\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.AssetKey\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Object representing the structure of an asset key.  Takes in a sanitized string, list of\nstrings, or tuple of strings.</p>\n<p>Example usage:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s1\">&#39;flat_asset_key&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">structured_asset_key_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">([</span><span class=\"s1\">&#39;parent&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;child&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;grandchild&#39;</span><span class=\"p\">]),</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">structured_asset_key_solid_2</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">((</span><span class=\"s1\">&#39;parent&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;child&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;grandchild&#39;</span><span class=\"p\">)),</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">EventMetadataEntry</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>path</strong> (<em>str|str</em><em>[</em><em>]</em><em>|str</em><em>(</em><em>)</em>) \u2013 String, list of strings, or tuple of strings.  A list of strings\nrepresent the hierarchical structure of the asset_key.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/solids", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dynamic/", "title": "Dynamic Graphs (Experimental)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../repositories/", "title": "Repositories"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/dynamic", "Dynamic Graphs (Experimental)", "N", "next"], ["sections/api/apidocs/repositories", "Repositories", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/solids.rst.txt", "title": "Solids", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Solids</a><ul>\n<li><a class=\"reference internal\" href=\"#defining-solids\">Defining solids</a></li>\n<li><a class=\"reference internal\" href=\"#inputs-outputs\">Inputs &amp; outputs</a></li>\n<li><a class=\"reference internal\" href=\"#composing-solids\">Composing solids</a></li>\n<li><a class=\"reference internal\" href=\"#events\">Events</a><ul>\n<li><a class=\"reference internal\" href=\"#event-types\">Event types</a></li>\n<li><a class=\"reference internal\" href=\"#metadata-entries\">Metadata entries</a></li>\n<li><a class=\"reference internal\" href=\"#asset-key\">Asset Key</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "types": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"types\">\n<h1>Types<a class=\"headerlink\" href=\"#types\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Dagster includes facilities for typing the input and output values of solids (\u201cruntime\u201d types).</p>\n<div class=\"section\" id=\"built-in-primitive-types\">\n<span id=\"builtin\"></span><h2>Built-in primitive types<a class=\"headerlink\" href=\"#built-in-primitive-types\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"attribute\">\n<dt id=\"dagster.Any\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Any</code><a class=\"headerlink\" href=\"#dagster.Any\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type for any input, output, or config field whose type is unconstrained</p>\n<p>All values are considered to be instances of <code class=\"docutils literal notranslate\"><span class=\"pre\">Any</span></code>.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">identity</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Any</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span>\n\n<span class=\"c1\"># Untyped inputs and outputs are implicitly typed Any</span>\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">identity_imp</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span>\n\n<span class=\"c1\"># Explicitly typed</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Any</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Any</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">identity</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Any</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">any_config</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.Bool\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Bool</code><a class=\"headerlink\" href=\"#dagster.Bool\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type for any boolean input, output, or config_field. At runtime, this will perform an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">isinstance(value,</span> <span class=\"pre\">bool)</span></code> check. You may also use the ordinary <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>\ntype as an alias.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">boolean</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Bool</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">String</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;true&#39;</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"k\">else</span> <span class=\"s1\">&#39;false&#39;</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">empty_string</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">String</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n\n<span class=\"c1\"># Explicit</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Bool</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">String</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">boolean</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;true&#39;</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"k\">else</span> <span class=\"s1\">&#39;false&#39;</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">String</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">empty_string</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Bool</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">bool_config</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;true&#39;</span> <span class=\"k\">if</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span> <span class=\"k\">else</span> <span class=\"s1\">&#39;false&#39;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.Int\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Int</code><a class=\"headerlink\" href=\"#dagster.Int\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type for any integer input or output. At runtime, this will perform an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">isinstance(value,</span> <span class=\"pre\">int)</span></code> check. You may also use the ordinary <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>\ntype as an alias.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_3</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">3</span>\n\n<span class=\"c1\"># Explicit</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Int</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Int</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_3</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">3</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.Float\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Float</code><a class=\"headerlink\" href=\"#dagster.Float\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type for any float input, output, or config value. At runtime, this will perform an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">isinstance(value,</span> <span class=\"pre\">float)</span></code> check. You may also use the ordinary <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>\ntype as an alias.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">div_2</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n\n<span class=\"c1\"># Explicit</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Float</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">div_2</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Float</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">div_y</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">/</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.String\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">String</code><a class=\"headerlink\" href=\"#dagster.String\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type for any string input, output, or config value. At runtime, this will perform an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">isinstance(value,</span> <span class=\"pre\">str)</span></code> check. You may also use the ordinary <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a> type\nas an alias.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">concat</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n<span class=\"c1\"># Explicit</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">String</span><span class=\"p\">),</span>\n        <span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;y&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">concat</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;Hello, </span><span class=\"si\">{friend}</span><span class=\"s1\">!&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">friend</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.Nothing\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Nothing</code><a class=\"headerlink\" href=\"#dagster.Nothing\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type only for inputs and outputs, in order to establish an execution dependency without\ncommunicating a value. Inputs of this type will not be pased to the solid compute function, so\nit is necessary to use the explicit <a class=\"reference internal\" href=\"solids#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InputDefinition</span></code></a> API to define them rather than\nthe Python 3 type hint syntax.</p>\n<p>All values are considered to be instances of <code class=\"docutils literal notranslate\"><span class=\"pre\">Nothing</span></code>.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">wait</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Nothing</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;ready&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Nothing</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">done</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;done&#39;</span>\n\n<span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">nothing_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">done</span><span class=\"p\">(</span><span class=\"n\">wait</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Any value will pass the type check for Nothing</span>\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">wait_int</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Int</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">nothing_int_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">done</span><span class=\"p\">(</span><span class=\"n\">wait_int</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.Optional\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Optional</code><a class=\"headerlink\" href=\"#dagster.Optional\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type only for inputs and outputs, if the value can also be <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">nullable_concat</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">String</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"ow\">or</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Explicit</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">String</span><span class=\"p\">),</span>\n        <span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;y&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">])</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">String</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">nullable_concat</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"ow\">or</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.List\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">List</code><a class=\"headerlink\" href=\"#dagster.List\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type for inputs, or outputs.</p>\n<p>Lists are also the appropriate input types when fanning in multiple outputs using a\n<a class=\"reference internal\" href=\"pipeline#dagster.MultiDependencyDefinition\" title=\"dagster.MultiDependencyDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MultiDependencyDefinition</span></code></a> or the equivalent composition function syntax.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">concat_list</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">String</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Explicit</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;xs&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">])],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">String</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">concat_list</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">String</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fanning in multiple outputs</span>\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_1</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_2</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"mi\">2</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_3</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"mi\">3</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">sum_solid</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">sum_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">sum_solid</span><span class=\"p\">([</span><span class=\"n\">emit_1</span><span class=\"p\">(),</span> <span class=\"n\">emit_2</span><span class=\"p\">(),</span> <span class=\"n\">emit_3</span><span class=\"p\">()])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.Dict\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Dict</code><a class=\"headerlink\" href=\"#dagster.Dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type for inputs, or outputs that are dicts.</p>\n<p>For inputs and outputs, you may optionally specify the key and value types using the square\nbrackets syntax for Python typing.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">repeat</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">spec</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">spec</span><span class=\"p\">[</span><span class=\"s1\">&#39;word&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">spec</span><span class=\"p\">[</span><span class=\"s1\">&#39;times&#39;</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Explicit</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;spec&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Dict</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">repeat</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">spec</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">spec</span><span class=\"p\">[</span><span class=\"s1\">&#39;word&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">spec</span><span class=\"p\">[</span><span class=\"s1\">&#39;times&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.Set\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Set</code><a class=\"headerlink\" href=\"#dagster.Set\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type for inputs, or outputs that are sets. Alias for\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Set\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">typing.Set</span></code></a>.</p>\n<p>You may optionally specify the inner type using the square brackets syntax for Python typing.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_solid</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">set_input</span><span class=\"p\">:</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">]:</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">set_input</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Explicit</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;set_input&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">])],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">])],</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_solid</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">set_input</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">set_input</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.Tuple\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">Tuple</code><a class=\"headerlink\" href=\"#dagster.Tuple\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type for inputs or outputs that are tuples. Alias for\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">typing.Tuple</span></code></a>.</p>\n<p>You may optionally specify the inner types using the square brackets syntax for Python typing.</p>\n<p>Config values should be passed as a list (in YAML or the Python config dict).</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">tuple_solid</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">tuple_input</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">Float</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">tuple_input</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Explicit</span>\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;tuple_input&#39;</span><span class=\"p\">,</span> <span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">Float</span><span class=\"p\">])],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">List</span><span class=\"p\">)],</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">tuple_solid</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">tuple_input</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">tuple_input</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.FileHandle\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">FileHandle</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileHandle\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.FileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file as manipulated by a FileManager</p>\n<p>Subclasses may handle files that are resident on the local file system, in an object store, or\nin any arbitrary place where a file can be stored.</p>\n<p>This exists to handle the very common case where you wish to write a computation that reads,\ntransforms, and writes files, but where you also want the same code to work in local development\nas well as on a cluster where the files will be stored in a globally available object store\nsuch as S3.</p>\n<dl class=\"method\">\n<dt id=\"dagster.FileHandle.path_desc\">\n<em class=\"property\">abstract property </em><code class=\"sig-name descname\">path_desc</code><a class=\"headerlink\" href=\"#dagster.FileHandle.path_desc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A representation of the file path for display purposes only.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.LocalFileHandle\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">LocalFileHandle</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">path: str</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#LocalFileHandle\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.LocalFileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file on a local filesystem.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"making-new-types\">\n<h2>Making New Types<a class=\"headerlink\" href=\"#making-new-types\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.DagsterType\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterType</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">type_check_fn</em>, <em class=\"sig-param\">key=None</em>, <em class=\"sig-param\">name=None</em>, <em class=\"sig-param\">is_builtin=False</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">loader=None</em>, <em class=\"sig-param\">materializer=None</em>, <em class=\"sig-param\">serialization_strategy=None</em>, <em class=\"sig-param\">auto_plugins=None</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">kind=&lt;DagsterTypeKind.REGULAR: 'REGULAR'&gt;</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/dagster_type#DagsterType\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterType\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a type in dagster. These can be used in the inputs and outputs of solids.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>type_check_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"execution#dagster.TypeCheckContext\" title=\"dagster.TypeCheckContext\"><em>TypeCheckContext</em></a><em>, </em><em>Any</em><em>]</em><em>, </em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><a class=\"reference internal\" href=\"solids#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><em>TypeCheck</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The function that defines the type check. It takes the value flowing\nthrough the input or output of the solid. If it passes, return either\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or a <a class=\"reference internal\" href=\"solids#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. If it fails,\nreturn either <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> or a <a class=\"reference internal\" href=\"solids#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.\nThe first argument must be named <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> (or, if unused, <code class=\"docutils literal notranslate\"><span class=\"pre\">_</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">_context</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">context_</span></code>).\nUse <code class=\"docutils literal notranslate\"><span class=\"pre\">required_resource_keys</span></code> for access to resources.</p></li>\n<li><p><strong>key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 <p>The unique key to identify types programatically.\nThe key property always has a value. If you omit key to the argument\nto the init function, it instead receives the value of <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>. If\nneither <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> nor <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> is provided, a <code class=\"docutils literal notranslate\"><span class=\"pre\">CheckError</span></code> is thrown.</p>\n<p>In the case of a generic type such as <code class=\"docutils literal notranslate\"><span class=\"pre\">List</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">Optional</span></code>, this is\ngenerated programatically based on the type parameters.</p>\n<p>For most use cases, name should be set and the key argument should\nnot be specified.</p>\n</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A unique name given by a user. If <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code>\nbecomes this value. Name is not given in a case where the user does\nnot specify a unique name for this type, such as a generic class.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A markdown-formatted string, displayed in tooling.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><em>DagsterTypeLoader</em><em>]</em>) \u2013 An instance of a class that\ninherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code> and can map config data to a value of\nthis type. Specify this argument if you will need to shim values of this type using the\nconfig machinery. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_loader\" title=\"dagster.dagster_type_loader\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_loader</span></code></a> decorator to construct\nthese arguments.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><em>DagsterTypeMaterializer</em><em>]</em>) \u2013 An instance of a class\nthat inherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code> and can persist values of\nthis type. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_materializer\" title=\"dagster.dagster_type_materializer\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_materializer</span></code></a>\ndecorator to construct these arguments.</p></li>\n<li><p><strong>serialization_strategy</strong> (<em>Optional</em><em>[</em><em>SerializationStrategy</em><em>]</em>) \u2013 An instance of a class that\ninherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SerializationStrategy</span></code>. The default strategy for serializing\nthis value when automatically persisting it between execution steps. You should set\nthis value if the ordinary serialization machinery (e.g., pickle) will not be adequate\nfor this type.</p></li>\n<li><p><strong>auto_plugins</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Type</em><em>[</em><em>TypeStoragePlugin</em><em>]</em><em>]</em><em>]</em>) \u2013 If types must be serialized differently\ndepending on the storage being used for intermediates, they should specify this\nargument. In these cases the serialization_strategy argument is not sufficient because\nserialization requires specialized API calls, e.g. to call an S3 API directly instead\nof using a generic file object. See <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster_pyspark.DataFrame</span></code> for an example.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Resource keys required by the <code class=\"docutils literal notranslate\"><span class=\"pre\">type_check_fn</span></code>.</p></li>\n<li><p><strong>is_builtin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Defaults to False. This is used by tools to display or\nfilter built-in types (such as <a class=\"reference internal\" href=\"#dagster.String\" title=\"dagster.String\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">String</span></code></a>, <a class=\"reference internal\" href=\"#dagster.Int\" title=\"dagster.Int\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Int</span></code></a>) to visually distinguish\nthem from user-defined types. Meant for internal use.</p></li>\n<li><p><strong>kind</strong> (<em>DagsterTypeKind</em>) \u2013 Defaults to None. This is used to determine the kind of runtime type\nfor InputDefinition and OutputDefinition type checking.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.PythonObjectDagsterType\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">PythonObjectDagsterType</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">python_type</em>, <em class=\"sig-param\">key=None</em>, <em class=\"sig-param\">name=None</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/dagster_type#PythonObjectDagsterType\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PythonObjectDagsterType\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a type in dagster whose typecheck is an isinstance check.</p>\n<p>Specifically, the type can either be a single python type (e.g. int),\nor a tuple of types (e.g. (int, float)) which is treated as a union.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ntype</span> <span class=\"o\">=</span> <span class=\"n\">PythonObjectDagsterType</span><span class=\"p\">(</span><span class=\"n\">python_type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">ntype</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;int&#39;</span>\n<span class=\"n\">assert_success</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">assert_failure</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ntype</span> <span class=\"o\">=</span> <span class=\"n\">PythonObjectDagsterType</span><span class=\"p\">(</span><span class=\"n\">python_type</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">))</span>\n<span class=\"k\">assert</span> <span class=\"n\">ntype</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Union[int, float]&#39;</span>\n<span class=\"n\">assert_success</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">assert_success</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">)</span>\n<span class=\"n\">assert_failure</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>python_type</strong> (<em>Union</em><em>[</em><em>Type</em><em>, </em><em>Tuple</em><em>[</em><em>Type</em><em>, </em><em>..</em><em>]</em>) \u2013 The dagster typecheck function calls instanceof on\nthis type.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name the type. Defaults to the name of <code class=\"docutils literal notranslate\"><span class=\"pre\">python_type</span></code>.</p></li>\n<li><p><strong>key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Key of the type. Defaults to name.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A markdown-formatted string, displayed in tooling.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><em>DagsterTypeLoader</em><em>]</em>) \u2013 An instance of a class that\ninherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code> and can map config data to a value of\nthis type. Specify this argument if you will need to shim values of this type using the\nconfig machinery. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_loader\" title=\"dagster.dagster_type_loader\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_loader</span></code></a> decorator to construct\nthese arguments.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><em>DagsterTypeMaterializer</em><em>]</em>) \u2013 An instance of a class\nthat inherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code> and can persist values of\nthis type. As a rule, you should use the\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_mate</span></code>\ndecorator to construct these arguments.</p></li>\n<li><p><strong>serialization_strategy</strong> (<em>Optional</em><em>[</em><em>SerializationStrategy</em><em>]</em>) \u2013 An instance of a class that\ninherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SerializationStrategy</span></code>. The default strategy for serializing\nthis value when automatically persisting it between execution steps. You should set\nthis value if the ordinary serialization machinery (e.g., pickle) will not be adequate\nfor this type.</p></li>\n<li><p><strong>auto_plugins</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Type</em><em>[</em><em>TypeStoragePlugin</em><em>]</em><em>]</em><em>]</em>) \u2013 If types must be serialized differently\ndepending on the storage being used for intermediates, they should specify this\nargument. In these cases the serialization_strategy argument is not sufficient because\nserialization requires specialized API calls, e.g. to call an S3 API directly instead\nof using a generic file object. See <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster_pyspark.DataFrame</span></code> for an example.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.dagster_type_loader\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">dagster_type_loader</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_schema</em>, <em class=\"sig-param\">required_resource_keys=None</em>, <em class=\"sig-param\">loader_version=None</em>, <em class=\"sig-param\">external_version_fn=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/config_schema#dagster_type_loader\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.dagster_type_loader\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an dagster type loader that maps config data to a runtime value.</p>\n<p>The decorated function should take the execution context and parsed config value and return the\nappropriate runtime value.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema for the config that\u2019s passed to the decorated\nfunction.</p></li>\n<li><p><strong>loader_version</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 (Experimental) The version of the decorated compute function. Two\nloading functions should have the same version if and only if they deterministically\nproduce the same outputs when provided the same inputs.</p></li>\n<li><p><strong>external_version_fn</strong> (<em>Callable</em>) \u2013 (Experimental) A function that takes in the same parameters as the loader\nfunction (config_value) and returns a representation of the version of the external\nasset (str). Two external assets with identical versions are treated as identical to one\nanother.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@dagster_type_loader</span><span class=\"p\">(</span><span class=\"n\">Permissive</span><span class=\"p\">())</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_dict</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">value</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.dagster_type_materializer\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">dagster_type_materializer</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">config_schema</em>, <em class=\"sig-param\">required_resource_keys=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/config_schema#dagster_type_materializer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.dagster_type_materializer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an output materialization hydration config that configurably materializes a runtime\nvalue.</p>\n<p>The decorated function should take the execution context, the parsed config value, and the\nruntime value and the parsed config data, should materialize the runtime value, and should\nreturn an appropriate <a class=\"reference internal\" href=\"solids#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetMaterialization</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>config_schema</strong> (<em>Any</em>) \u2013 The type of the config data expected by the decorated function.</p>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Takes a list of dicts such as might be read in using csv.DictReader, as well as a config</span>\n<span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"ow\">and</span> <span class=\"n\">writes</span>\n<span class=\"nd\">@dagster_type_materializer</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">materialize_df</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">:</span>\n        <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">DictWriter</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span> <span class=\"n\">fieldnames</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n        <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">writeheader</span><span class=\"p\">()</span>\n        <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">writerows</span><span class=\"p\">(</span><span class=\"n\">rowdicts</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">AssetMaterialization</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.usable_as_dagster_type\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">usable_as_dagster_type</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name=None</em>, <em class=\"sig-param\">description=None</em>, <em class=\"sig-param\">loader=None</em>, <em class=\"sig-param\">materializer=None</em>, <em class=\"sig-param\">serialization_strategy=None</em>, <em class=\"sig-param\">auto_plugins=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/decorator#usable_as_dagster_type\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.usable_as_dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorate a Python class to make it usable as a Dagster Type.</p>\n<p>This is intended to make it straightforward to annotate existing business logic classes to\nmake them dagster types whose typecheck is an isinstance check against that python class.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>python_type</strong> (<em>cls</em>) \u2013 The python type to make usable as python type.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the new Dagster type. If <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, the name (<code class=\"docutils literal notranslate\"><span class=\"pre\">__name__</span></code>) of\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">python_type</span></code> will be used.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A user-readable description of the type.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><em>DagsterTypeLoader</em><em>]</em>) \u2013 An instance of a class that\ninherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code> and can map config data to a value of\nthis type. Specify this argument if you will need to shim values of this type using the\nconfig machinery. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_loader\" title=\"dagster.dagster_type_loader\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_loader</span></code></a> decorator to construct\nthese arguments.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><em>DagsterTypeMaterializer</em><em>]</em>) \u2013 An instance of a class\nthat inherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code> and can persist values of\nthis type. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_materializer\" title=\"dagster.dagster_type_materializer\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_materializer</span></code></a>\ndecorator to construct these arguments.</p></li>\n<li><p><strong>serialization_strategy</strong> (<em>Optional</em><em>[</em><em>SerializationStrategy</em><em>]</em>) \u2013 An instance of a class that\ninherits from <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SerializationStrategy</span></code>. The default strategy for serializing\nthis value when automatically persisting it between execution steps. You should set\nthis value if the ordinary serialization machinery (e.g., pickle) will not be adequate\nfor this type.</p></li>\n<li><p><strong>auto_plugins</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>TypeStoragePlugin</em><em>]</em><em>]</em>) \u2013 If types must be serialized differently\ndepending on the storage being used for intermediates, they should specify this\nargument. In these cases the serialization_strategy argument is not sufficient because\nserialization requires specialized API calls, e.g. to call an S3 API directly instead\nof using a generic file object. See <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster_pyspark.DataFrame</span></code> for an example.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># dagster_aws.s3.file_manager.S3FileHandle</span>\n<span class=\"nd\">@usable_as_dagster_type</span>\n<span class=\"k\">class</span> <span class=\"nc\">S3FileHandle</span><span class=\"p\">(</span><span class=\"n\">FileHandle</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">s3_bucket</span><span class=\"p\">,</span> <span class=\"n\">s3_key</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_bucket</span> <span class=\"o\">=</span> <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">str_param</span><span class=\"p\">(</span><span class=\"n\">s3_bucket</span><span class=\"p\">,</span> <span class=\"s1\">&#39;s3_bucket&#39;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_key</span> <span class=\"o\">=</span> <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">str_param</span><span class=\"p\">(</span><span class=\"n\">s3_key</span><span class=\"p\">,</span> <span class=\"s1\">&#39;s3_key&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">s3_bucket</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_bucket</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">s3_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_key</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">path_desc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">s3_path</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">s3_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;s3://</span><span class=\"si\">{bucket}</span><span class=\"s1\">/</span><span class=\"si\">{key}</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">s3_bucket</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">s3_key</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.make_python_type_usable_as_dagster_type\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">make_python_type_usable_as_dagster_type</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">python_type</em>, <em class=\"sig-param\">dagster_type</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/dagster_type#make_python_type_usable_as_dagster_type\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.make_python_type_usable_as_dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Take any existing python type and map it to a dagster type (generally created with\n<a class=\"reference internal\" href=\"#dagster.DagsterType\" title=\"dagster.DagsterType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterType</span></code></a>) This can only be called once\non a given python type.</p>\n</dd></dl>\n\n<div class=\"section\" id=\"testing-types\">\n<h3>Testing Types<a class=\"headerlink\" href=\"#testing-types\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dagster.check_dagster_type\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">check_dagster_type</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">dagster_type</em>, <em class=\"sig-param\">value</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test#check_dagster_type\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.check_dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Test a custom Dagster type.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dagster_type</strong> (<em>Any</em>) \u2013 The Dagster type to test. Should be one of the\n<a class=\"reference internal\" href=\"#builtin\"><span class=\"std std-ref\">built-in types</span></a>, a dagster type explicitly constructed with\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">as_dagster_type()</span></code>, <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;usable_as_dagster_type</span></code>, or\n<a class=\"reference internal\" href=\"#dagster.PythonObjectDagsterType\" title=\"dagster.PythonObjectDagsterType\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">PythonObjectDagsterType()</span></code></a>, or a Python type.</p></li>\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The runtime value to test.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the type check.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"solids#dagster.TypeCheck\" title=\"dagster.TypeCheck\">TypeCheck</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">assert</span> <span class=\"n\">check_dagster_type</span><span class=\"p\">(</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"p\">{</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">success</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/types", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../utilities/", "title": "Utilities"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dynamic/", "title": "Dynamic Graphs (Experimental)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/utilities", "Utilities", "N", "next"], ["sections/api/apidocs/dynamic", "Dynamic Graphs (Experimental)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/types.rst.txt", "title": "Types", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Types</a><ul>\n<li><a class=\"reference internal\" href=\"#built-in-primitive-types\">Built-in primitive types</a></li>\n<li><a class=\"reference internal\" href=\"#making-new-types\">Making New Types</a><ul>\n<li><a class=\"reference internal\" href=\"#testing-types\">Testing Types</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "utilities": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"utilities\">\n<h1>Utilities<a class=\"headerlink\" href=\"#utilities\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"function\">\n<dt id=\"dagster.file_relative_path\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">file_relative_path</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">dunderfile</em>, <em class=\"sig-param\">relative_path</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils#file_relative_path\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.file_relative_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is useful when one needs to load a file that is\nrelative to the position of the current file. (Such as when\nyou encode a configuration file path in source file and want\nin runnable in any current working directory)</p>\n<p>It is meant to be used like the following:</p>\n<p>file_relative_path(__file__, \u2018path/relative/to/file\u2019)</p>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.ExperimentalWarning\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">ExperimentalWarning</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/backcompat#ExperimentalWarning\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.ExperimentalWarning\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/utilities", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../libraries/dagster_airflow/", "title": "Airflow (dagster_airflow)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../types/", "title": "Types"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster_airflow", "Airflow (dagster_airflow)", "N", "next"], ["sections/api/apidocs/types", "Types", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/utilities.rst.txt", "title": "Utilities", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Utilities</a></li>\n</ul>\n"}}}}
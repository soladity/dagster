[tox]
envlist = py{38,37,36,27}-{unix,windows}-{in_memory_instance_hosted_user_process_env,in_memory_instance_out_of_process_env,in_memory_instance_multi_location,sqlite_instance_hosted_user_process_env,sqlite_instance_out_of_process_env,sqlite_instance_multi_location,in_memory_instance_grpc_env,sqlite_instance_grpc_env,sqlite_instance_external_grpc_server_env},pylint


[testenv]
passenv = CI_* COVERALLS_REPO_TOKEN BUILDKITE
deps =
  -r ../dagster/dev-requirements.txt
  -e ../dagster
usedevelop = true
whitelist_externals =
  /bin/bash
  echo
commands =
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster -e dagit'
  coverage erase
  echo -e "--- \033[0;32m:pytest: Running tox tests\033[0m"
  in_memory_instance_hosted_user_process_env: pytest -m "graphql_context_test_suite and in_memory_instance and hosted_user_process_env" -vv --junitxml=dagster_graphql_test_results.xml --cov=dagster_graphql --cov-append --cov-report=
  in_memory_instance_out_of_process_env: pytest -m "graphql_context_test_suite and in_memory_instance and out_of_process_env" -vv --junitxml=dagster_graphql_test_results.xml --cov=dagster_graphql --cov-append --cov-report=
  in_memory_instance_multi_location: pytest -m "graphql_context_test_suite and in_memory_instance and out_of_process_env" -vv --junitxml=dagster_graphql_test_results.xml --cov=dagster_graphql --cov-append --cov-report=
  in_memory_instance_grpc_env: pytest -m "graphql_context_test_suite and in_memory_instance and grpc_env" -vv --junitxml=dagster_graphql_test_results.xml --cov=dagster_graphql --cov-append --cov-report=
  sqlite_instance_hosted_user_process_env: pytest -m "graphql_context_test_suite and sqlite_instance and hosted_user_process_env" -vv --junitxml=dagster_graphql_test_results.xml --cov=dagster_graphql --cov-append --cov-report=
  sqlite_instance_out_of_process_env: pytest -m "graphql_context_test_suite and sqlite_instance and out_of_process_env" -vv --junitxml=dagster_graphql_test_results.xml --cov=dagster_graphql --cov-append --cov-report=
  sqlite_instance_multi_location: pytest -m "graphql_context_test_suite and in_memory_instance and multi_location" -vv --junitxml=dagster_graphql_test_results.xml --cov=dagster_graphql --cov-append --cov-report=
  sqlite_instance_grpc_env: pytest -m "graphql_context_test_suite and sqlite_instance and grpc_env" -vv --junitxml=dagster_graphql_test_results.xml --cov=dagster_graphql --cov-append --cov-report=
  sqlite_instance_external_grpc_server_env: pytest -m "graphql_context_test_suite and sqlite_instance and external_grpc_server_env" -vv --junitxml=dagster_graphql_test_results.xml --cov=dagster_graphql --cov-append --cov-report=
  coverage report --omit='.tox/*,**/test_*.py' --skip-covered
  coverage html --omit='.tox/*,**/test_*.py'
  coverage xml --omit='.tox/*,**/test_*.py'

[testenv:pylint]
whitelist_externals =
  pylint
basepython =
  python3.7
commands =
  pylint -j 0 --rcfile=../../.pylintrc dagster_graphql dagster_graphql_tests

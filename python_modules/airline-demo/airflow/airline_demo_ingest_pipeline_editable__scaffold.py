'''Editable scaffolding autogenerated by dagster-airflow from pipeline airline_demo_ingest_pipeline
with config:

    context:
      local:
        resources:
          db_info:
            config: {postgres_db_name: test, postgres_hostname: localhost, postgres_password: test,
              postgres_username: test}
          download_manager:
            config: {bucket: dagster-airline-demo-source-data, key: test, skip_if_present: true,
              target_folder: source_data}
    solids:
      download_april_on_time_data:
        config: {target_file: On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2018_4.zip}
      download_june_on_time_data:
        config: {target_file: On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2018_6.zip}
      download_master_cord_data:
        config: {target_file: 954834304_T_MASTER_CORD.zip}
      download_may_on_time_data:
        config: {target_file: On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2018_5.zip}
      download_q2_coupon_data:
        config: {target_file: Origin_and_Destination_Survey_DB1BCoupon_2018_2.zip}
      download_q2_market_data:
        config: {target_file: Origin_and_Destination_Survey_DB1BMarket_2018_2.zip}
      download_q2_sfo_weather:
        config: {target_file: sfo_q2_weather.txt}
      download_q2_ticket_data:
        config: {target_file: Origin_and_Destination_Survey_DB1BTicket_2018_2.zip}
      join_q2_on_time_data_to_dest_cord_data:
        config: {how: left_outer, on_left: DestAirportSeqID, on_right: DEST_AIRPORT_SEQ_ID}
      join_q2_on_time_data_to_origin_cord_data:
        config: {how: left_outer, on_left: OriginAirportSeqID, on_right: ORIGIN_AIRPORT_SEQ_ID}
      load_q2_coupon_data:
        config: {table_name: q2_coupon_data}
      load_q2_market_data:
        config: {table_name: q2_market_data}
      load_q2_on_time_data:
        config: {table_name: q2_on_time_data}
      load_q2_sfo_weather:
        config: {table_name: q2_sfo_weather}
      load_q2_ticket_data:
        config: {table_name: q2_ticket_data}
      prefix_dest_cord_data: {config: DEST_}
      prefix_origin_cord_data: {config: ORIGIN_}
      subsample_q2_coupon_data:
        config: {subsample_pct: 100}
      subsample_q2_market_data:
        config: {subsample_pct: 100}
      subsample_q2_on_time_data:
        config: {subsample_pct: 100}
      subsample_q2_ticket_data:
        config: {subsample_pct: 100}
      unzip_april_on_time_data:
        inputs:
          archive_member: {value: On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2018_4.csv}
      unzip_june_on_time_data:
        inputs:
          archive_member: {value: On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2018_6.csv}
      unzip_master_cord_data:
        inputs:
          archive_member: {value: 954834304_T_MASTER_CORD.csv}
      unzip_may_on_time_data:
        inputs:
          archive_member: {value: On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2018_5.csv}
      unzip_q2_coupon_data:
        inputs:
          archive_member: {value: Origin_and_Destination_Survey_DB1BCoupon_2018_2.csv}
      unzip_q2_market_data:
        inputs:
          archive_member: {value: Origin_and_Destination_Survey_DB1BMarket_2018_2.csv}
      unzip_q2_ticket_data:
        inputs:
          archive_member: {value: Origin_and_Destination_Survey_DB1BTicket_2018_2.csv}
    storage:
      s3: {s3_bucket: dagster-airflow-scratch}
    

By convention, users should attempt to isolate post-codegen changes and customizations to this
"editable" file, rather than changing the definitions in the "static"
airline_demo_ingest_pipeline_static__scaffold.py file. Please let us know if you are encountering
use cases where it is necessary to make changes to the static file.
'''

import datetime

from airline_demo_ingest_pipeline_static__scaffold import make_dag

# Arguments to be passed to the ``default_args`` parameter of the ``airflow.DAG`` constructor.You
# can override these with values of your choice.
DEFAULT_ARGS = {
    'depends_on_past': False,
    'email': ['airflow@example.com'],
    'email_on_failure': False,
    'email_on_retry': False,
    'owner': 'airflow',
    'retries': 1,
    'retry_delay': datetime.timedelta(0, 300),
    'start_date': datetime.datetime(2019, 4, 2, 0, 24, 30, 712630),
}

# Any additional keyword arguments to be passed to the ``airflow.DAG`` constructor. You can override
# these with values of your choice.
DAG_KWARGS = {
    'schedule_interval': '0 0 * * *',
}

# The name of the autogenerated DAG. By default, this is just the name of the Dagster pipeline from
# which the Airflow DAG was generated (airline_demo_ingest_pipeline). You may want to override this
# if, for instance, you want to schedule multiple DAGs corresponding to different configurations of
# the same Dagster pipeline.
DAG_ID = 'airline_demo_ingest_pipeline'

# The description of the autogenerated DAG. By default, this is the description of the Dagster
# pipeline from which the Airflow DAG was generated. You may want to override this, as with the
# DAG_ID parameter.
DAG_DESCRIPTION = '''***Autogenerated by dagster-airflow***'''

# Additional arguments, if any, to pass through to the underlying
# ``dagster_airflow.dagster_plugin.ModifiedDockerOperator`` constructor. Set these if, for instance,
# you need to set special TLS parameters.
OPERATOR_KWARGS = {}

# The 'unusual_prefix' ensures that the following code will be executed only when
# Airflow imports this file. See: https://bcb.github.io/airflow/hide-globals-in-dag-definition-file
if __name__.startswith('unusual_prefix'):
    dag, tasks = make_dag(
        dag_id=DAG_ID,
        dag_description=DAG_DESCRIPTION,
        dag_kwargs=dict(default_args=DEFAULT_ARGS, **DAG_KWARGS),
        operator_kwargs=OPERATOR_KWARGS,
    )

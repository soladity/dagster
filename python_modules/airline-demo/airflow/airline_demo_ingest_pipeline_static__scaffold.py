'''Static scaffolding autogenerated by dagster-airflow from pipeline airline_demo_ingest_pipeline
with config:

    context:
      local:
        resources:
          db_info:
            config: {postgres_db_name: test, postgres_hostname: localhost, postgres_password: test,
              postgres_username: test}
          download_manager:
            config: {bucket: dagster-airline-demo-source-data, key: test, skip_if_present: true,
              target_folder: source_data}
    solids:
      download_april_on_time_data:
        config: {target_file: On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2018_4.zip}
      download_june_on_time_data:
        config: {target_file: On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2018_6.zip}
      download_master_cord_data:
        config: {target_file: 954834304_T_MASTER_CORD.zip}
      download_may_on_time_data:
        config: {target_file: On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2018_5.zip}
      download_q2_coupon_data:
        config: {target_file: Origin_and_Destination_Survey_DB1BCoupon_2018_2.zip}
      download_q2_market_data:
        config: {target_file: Origin_and_Destination_Survey_DB1BMarket_2018_2.zip}
      download_q2_sfo_weather:
        config: {target_file: sfo_q2_weather.txt}
      download_q2_ticket_data:
        config: {target_file: Origin_and_Destination_Survey_DB1BTicket_2018_2.zip}
      join_q2_on_time_data_to_dest_cord_data:
        config: {how: left_outer, on_left: DestAirportSeqID, on_right: DEST_AIRPORT_SEQ_ID}
      join_q2_on_time_data_to_origin_cord_data:
        config: {how: left_outer, on_left: OriginAirportSeqID, on_right: ORIGIN_AIRPORT_SEQ_ID}
      load_q2_coupon_data:
        config: {table_name: q2_coupon_data}
      load_q2_market_data:
        config: {table_name: q2_market_data}
      load_q2_on_time_data:
        config: {table_name: q2_on_time_data}
      load_q2_sfo_weather:
        config: {table_name: q2_sfo_weather}
      load_q2_ticket_data:
        config: {table_name: q2_ticket_data}
      prefix_dest_cord_data: {config: DEST_}
      prefix_origin_cord_data: {config: ORIGIN_}
      subsample_q2_coupon_data:
        config: {subsample_pct: 100}
      subsample_q2_market_data:
        config: {subsample_pct: 100}
      subsample_q2_on_time_data:
        config: {subsample_pct: 100}
      subsample_q2_ticket_data:
        config: {subsample_pct: 100}
      unzip_april_on_time_data:
        inputs:
          archive_member: {value: On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2018_4.csv}
      unzip_june_on_time_data:
        inputs:
          archive_member: {value: On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2018_6.csv}
      unzip_master_cord_data:
        inputs:
          archive_member: {value: 954834304_T_MASTER_CORD.csv}
      unzip_may_on_time_data:
        inputs:
          archive_member: {value: On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2018_5.csv}
      unzip_q2_coupon_data:
        inputs:
          archive_member: {value: Origin_and_Destination_Survey_DB1BCoupon_2018_2.csv}
      unzip_q2_market_data:
        inputs:
          archive_member: {value: Origin_and_Destination_Survey_DB1BMarket_2018_2.csv}
      unzip_q2_ticket_data:
        inputs:
          archive_member: {value: Origin_and_Destination_Survey_DB1BTicket_2018_2.csv}
    storage:
      s3: {s3_bucket: dagster-airflow-scratch}
    

By convention, users should attempt to isolate post-codegen changes and customizations to the
"editable" airline_demo_ingest_pipeline_editable__scaffold.py file, rather than changing the
definitions in this "static" file. Please let us know if you are encountering use cases where it is
necessary to make changes to the static file.
'''

from airflow import DAG
try:
    from airflow.operators.dagster_plugin import DagsterOperator
except (ModuleNotFoundError, ImportError):
    from dagster_airflow import DagsterOperator


CONFIG = '''
    {
      context: {
        local: {
          resources: {
            db_info: {
              config: {
                postgres_username: "test",
                postgres_password: "test",
                postgres_hostname: "localhost",
                postgres_db_name: "test"
              }
            },
            download_manager: {
              config: {
                bucket: "dagster-airline-demo-source-data",
                key: "test",
                skip_if_present: true,
                target_folder: "source_data"
              }
            }
          }
        }
      },
      storage: {
        s3: {
          s3_bucket: "dagster-airflow-scratch"
        }
      },
      solids: {
        download_april_on_time_data: {
          config: {
            target_file: "On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2018_4.zip"
          }
        },
        download_may_on_time_data: {
          config: {
            target_file: "On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2018_5.zip"
          }
        },
        download_june_on_time_data: {
          config: {
            target_file: "On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2018_6.zip"
          }
        },
        download_master_cord_data: {
          config: {
            target_file: "954834304_T_MASTER_CORD.zip"
          }
        },
        download_q2_coupon_data: {
          config: {
            target_file: "Origin_and_Destination_Survey_DB1BCoupon_2018_2.zip"
          }
        },
        download_q2_market_data: {
          config: {
            target_file: "Origin_and_Destination_Survey_DB1BMarket_2018_2.zip"
          }
        },
        download_q2_ticket_data: {
          config: {
            target_file: "Origin_and_Destination_Survey_DB1BTicket_2018_2.zip"
          }
        },
        download_q2_sfo_weather: {
          config: {
            target_file: "sfo_q2_weather.txt"
          }
        },
        join_q2_on_time_data_to_dest_cord_data: {
          config: {
            how: "left_outer",
            on_left: "DestAirportSeqID",
            on_right: "DEST_AIRPORT_SEQ_ID"
          }
        },
        join_q2_on_time_data_to_origin_cord_data: {
          config: {
            how: "left_outer",
            on_left: "OriginAirportSeqID",
            on_right: "ORIGIN_AIRPORT_SEQ_ID"
          }
        },
        load_q2_coupon_data: {
          config: {
            table_name: "q2_coupon_data"
          }
        },
        load_q2_market_data: {
          config: {
            table_name: "q2_market_data"
          }
        },
        load_q2_on_time_data: {
          config: {
            table_name: "q2_on_time_data"
          }
        },
        load_q2_sfo_weather: {
          config: {
            table_name: "q2_sfo_weather"
          }
        },
        load_q2_ticket_data: {
          config: {
            table_name: "q2_ticket_data"
          }
        },
        prefix_dest_cord_data: {
          config: "DEST_"
        },
        prefix_origin_cord_data: {
          config: "ORIGIN_"
        },
        subsample_q2_coupon_data: {
          config: {
            subsample_pct: 100
          }
        },
        subsample_q2_market_data: {
          config: {
            subsample_pct: 100
          }
        },
        subsample_q2_on_time_data: {
          config: {
            subsample_pct: 100
          }
        },
        subsample_q2_ticket_data: {
          config: {
            subsample_pct: 100
          }
        },
        unzip_april_on_time_data: {
          inputs: {
            archive_member: {
              value: "On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2018_4.csv"
            }
          }
        },
        unzip_may_on_time_data: {
          inputs: {
            archive_member: {
              value: "On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2018_5.csv"
            }
          }
        },
        unzip_june_on_time_data: {
          inputs: {
            archive_member: {
              value: "On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2018_6.csv"
            }
          }
        },
        unzip_master_cord_data: {
          inputs: {
            archive_member: {
              value: "954834304_T_MASTER_CORD.csv"
            }
          }
        },
        unzip_q2_coupon_data: {
          inputs: {
            archive_member: {
              value: "Origin_and_Destination_Survey_DB1BCoupon_2018_2.csv"
            }
          }
        },
        unzip_q2_market_data: {
          inputs: {
            archive_member: {
              value: "Origin_and_Destination_Survey_DB1BMarket_2018_2.csv"
            }
          }
        },
        unzip_q2_ticket_data: {
          inputs: {
            archive_member: {
              value: "Origin_and_Destination_Survey_DB1BTicket_2018_2.csv"
            }
          }
        }
      }
    }
'''.strip('\n').strip(' ')

PIPELINE_NAME = 'airline_demo_ingest_pipeline'

STEPS_FOR_DOWNLOAD_APRIL_ON_TIME_DATA = [
    'download_april_on_time_data.transform',
]
STEPS_FOR_DOWNLOAD_JUNE_ON_TIME_DATA = [
    'download_june_on_time_data.transform',
]
STEPS_FOR_DOWNLOAD_MASTER_CORD_DATA = [
    'download_master_cord_data.transform',
]
STEPS_FOR_DOWNLOAD_MAY_ON_TIME_DATA = [
    'download_may_on_time_data.transform',
]
STEPS_FOR_DOWNLOAD_Q2_COUPON_DATA = [
    'download_q2_coupon_data.transform',
]
STEPS_FOR_DOWNLOAD_Q2_MARKET_DATA = [
    'download_q2_market_data.transform',
]
STEPS_FOR_DOWNLOAD_Q2_SFO_WEATHER = [
    'download_q2_sfo_weather.transform',
]
STEPS_FOR_DOWNLOAD_Q2_TICKET_DATA = [
    'download_q2_ticket_data.transform',
]
STEPS_FOR_INGEST_Q2_SFO_WEATHER = [
    'ingest_q2_sfo_weather.transform',
]
STEPS_FOR_UNZIP_APRIL_ON_TIME_DATA = [
    'unzip_april_on_time_data.archive_member.input_thunk',
    'unzip_april_on_time_data.transform',
]
STEPS_FOR_UNZIP_JUNE_ON_TIME_DATA = [
    'unzip_june_on_time_data.archive_member.input_thunk',
    'unzip_june_on_time_data.transform',
]
STEPS_FOR_UNZIP_MASTER_CORD_DATA = [
    'unzip_master_cord_data.archive_member.input_thunk',
    'unzip_master_cord_data.transform',
]
STEPS_FOR_UNZIP_MAY_ON_TIME_DATA = [
    'unzip_may_on_time_data.archive_member.input_thunk',
    'unzip_may_on_time_data.transform',
]
STEPS_FOR_UNZIP_Q2_COUPON_DATA = [
    'unzip_q2_coupon_data.archive_member.input_thunk',
    'unzip_q2_coupon_data.transform',
]
STEPS_FOR_UNZIP_Q2_MARKET_DATA = [
    'unzip_q2_market_data.archive_member.input_thunk',
    'unzip_q2_market_data.transform',
]
STEPS_FOR_UNZIP_Q2_TICKET_DATA = [
    'unzip_q2_ticket_data.archive_member.input_thunk',
    'unzip_q2_ticket_data.transform',
]
STEPS_FOR_INGEST_APRIL_ON_TIME_DATA = [
    'ingest_april_on_time_data.transform',
]
STEPS_FOR_INGEST_JUNE_ON_TIME_DATA = [
    'ingest_june_on_time_data.transform',
]
STEPS_FOR_INGEST_MASTER_CORD_DATA = [
    'ingest_master_cord_data.transform',
]
STEPS_FOR_INGEST_MAY_ON_TIME_DATA = [
    'ingest_may_on_time_data.transform',
]
STEPS_FOR_INGEST_Q2_COUPON_DATA = [
    'ingest_q2_coupon_data.transform',
]
STEPS_FOR_INGEST_Q2_MARKET_DATA = [
    'ingest_q2_market_data.transform',
]
STEPS_FOR_INGEST_Q2_TICKET_DATA = [
    'ingest_q2_ticket_data.transform',
]
STEPS_FOR_NORMALIZE_Q2_WEATHER_NA_VALUES = [
    'normalize_q2_weather_na_values.transform',
]
STEPS_FOR_CANONICALIZE_Q2_SFO_WEATHER = [
    'canonicalize_q2_sfo_weather.transform',
]
STEPS_FOR_COMBINE_APRIL_MAY_ON_TIME_DATA = [
    'combine_april_may_on_time_data.transform',
]
STEPS_FOR_PREFIX_DEST_CORD_DATA = [
    'prefix_dest_cord_data.transform',
]
STEPS_FOR_PREFIX_ORIGIN_CORD_DATA = [
    'prefix_origin_cord_data.transform',
]
STEPS_FOR_SUBSAMPLE_Q2_COUPON_DATA = [
    'subsample_q2_coupon_data.transform',
]
STEPS_FOR_SUBSAMPLE_Q2_MARKET_DATA = [
    'subsample_q2_market_data.transform',
]
STEPS_FOR_SUBSAMPLE_Q2_TICKET_DATA = [
    'subsample_q2_ticket_data.transform',
]
STEPS_FOR_CANONICALIZE_Q2_COUPON_DATA = [
    'canonicalize_q2_coupon_data.transform',
]
STEPS_FOR_CANONICALIZE_Q2_MARKET_DATA = [
    'canonicalize_q2_market_data.transform',
]
STEPS_FOR_CANONICALIZE_Q2_TICKET_DATA = [
    'canonicalize_q2_ticket_data.transform',
]
STEPS_FOR_COMBINE_Q2_ON_TIME_DATA = [
    'combine_q2_on_time_data.transform',
]
STEPS_FOR_LOAD_Q2_SFO_WEATHER = [
    'load_q2_sfo_weather.transform',
]
STEPS_FOR_LOAD_Q2_COUPON_DATA = [
    'load_q2_coupon_data.transform',
]
STEPS_FOR_LOAD_Q2_MARKET_DATA = [
    'load_q2_market_data.transform',
]
STEPS_FOR_LOAD_Q2_TICKET_DATA = [
    'load_q2_ticket_data.transform',
]
STEPS_FOR_SUBSAMPLE_Q2_ON_TIME_DATA = [
    'subsample_q2_on_time_data.transform',
]
STEPS_FOR_JOIN_Q2_ON_TIME_DATA_TO_DEST_CORD_DATA = [
    'join_q2_on_time_data_to_dest_cord_data.transform',
]
STEPS_FOR_JOIN_Q2_ON_TIME_DATA_TO_ORIGIN_CORD_DATA = [
    'join_q2_on_time_data_to_origin_cord_data.transform',
]
STEPS_FOR_CANONICALIZE_Q2_ON_TIME_DATA = [
    'canonicalize_q2_on_time_data.transform',
]
STEPS_FOR_LOAD_Q2_ON_TIME_DATA = [
    'load_q2_on_time_data.transform',
]

def make_dag(
    dag_id,
    dag_description,
    dag_kwargs,
    operator_kwargs,
):
    dag = DAG(
        dag_id=dag_id,
        description=dag_description,
        **dag_kwargs
    )

    tasks = []

    download_april_on_time_data_task = DagsterOperator(
        step='download_april_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='download_april_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_DOWNLOAD_APRIL_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(download_april_on_time_data_task)

    download_june_on_time_data_task = DagsterOperator(
        step='download_june_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='download_june_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_DOWNLOAD_JUNE_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(download_june_on_time_data_task)

    download_master_cord_data_task = DagsterOperator(
        step='download_master_cord_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='download_master_cord_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_DOWNLOAD_MASTER_CORD_DATA,
        **operator_kwargs
    )
    tasks.append(download_master_cord_data_task)

    download_may_on_time_data_task = DagsterOperator(
        step='download_may_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='download_may_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_DOWNLOAD_MAY_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(download_may_on_time_data_task)

    download_q2_coupon_data_task = DagsterOperator(
        step='download_q2_coupon_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='download_q2_coupon_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_DOWNLOAD_Q2_COUPON_DATA,
        **operator_kwargs
    )
    tasks.append(download_q2_coupon_data_task)

    download_q2_market_data_task = DagsterOperator(
        step='download_q2_market_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='download_q2_market_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_DOWNLOAD_Q2_MARKET_DATA,
        **operator_kwargs
    )
    tasks.append(download_q2_market_data_task)

    download_q2_sfo_weather_task = DagsterOperator(
        step='download_q2_sfo_weather',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='download_q2_sfo_weather',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_DOWNLOAD_Q2_SFO_WEATHER,
        **operator_kwargs
    )
    tasks.append(download_q2_sfo_weather_task)

    download_q2_ticket_data_task = DagsterOperator(
        step='download_q2_ticket_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='download_q2_ticket_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_DOWNLOAD_Q2_TICKET_DATA,
        **operator_kwargs
    )
    tasks.append(download_q2_ticket_data_task)

    ingest_q2_sfo_weather_task = DagsterOperator(
        step='ingest_q2_sfo_weather',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='ingest_q2_sfo_weather',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_INGEST_Q2_SFO_WEATHER,
        **operator_kwargs
    )
    tasks.append(ingest_q2_sfo_weather_task)

    unzip_april_on_time_data_task = DagsterOperator(
        step='unzip_april_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='unzip_april_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_UNZIP_APRIL_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(unzip_april_on_time_data_task)

    unzip_june_on_time_data_task = DagsterOperator(
        step='unzip_june_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='unzip_june_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_UNZIP_JUNE_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(unzip_june_on_time_data_task)

    unzip_master_cord_data_task = DagsterOperator(
        step='unzip_master_cord_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='unzip_master_cord_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_UNZIP_MASTER_CORD_DATA,
        **operator_kwargs
    )
    tasks.append(unzip_master_cord_data_task)

    unzip_may_on_time_data_task = DagsterOperator(
        step='unzip_may_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='unzip_may_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_UNZIP_MAY_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(unzip_may_on_time_data_task)

    unzip_q2_coupon_data_task = DagsterOperator(
        step='unzip_q2_coupon_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='unzip_q2_coupon_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_UNZIP_Q2_COUPON_DATA,
        **operator_kwargs
    )
    tasks.append(unzip_q2_coupon_data_task)

    unzip_q2_market_data_task = DagsterOperator(
        step='unzip_q2_market_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='unzip_q2_market_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_UNZIP_Q2_MARKET_DATA,
        **operator_kwargs
    )
    tasks.append(unzip_q2_market_data_task)

    unzip_q2_ticket_data_task = DagsterOperator(
        step='unzip_q2_ticket_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='unzip_q2_ticket_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_UNZIP_Q2_TICKET_DATA,
        **operator_kwargs
    )
    tasks.append(unzip_q2_ticket_data_task)

    ingest_april_on_time_data_task = DagsterOperator(
        step='ingest_april_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='ingest_april_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_INGEST_APRIL_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(ingest_april_on_time_data_task)

    ingest_june_on_time_data_task = DagsterOperator(
        step='ingest_june_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='ingest_june_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_INGEST_JUNE_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(ingest_june_on_time_data_task)

    ingest_master_cord_data_task = DagsterOperator(
        step='ingest_master_cord_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='ingest_master_cord_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_INGEST_MASTER_CORD_DATA,
        **operator_kwargs
    )
    tasks.append(ingest_master_cord_data_task)

    ingest_may_on_time_data_task = DagsterOperator(
        step='ingest_may_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='ingest_may_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_INGEST_MAY_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(ingest_may_on_time_data_task)

    ingest_q2_coupon_data_task = DagsterOperator(
        step='ingest_q2_coupon_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='ingest_q2_coupon_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_INGEST_Q2_COUPON_DATA,
        **operator_kwargs
    )
    tasks.append(ingest_q2_coupon_data_task)

    ingest_q2_market_data_task = DagsterOperator(
        step='ingest_q2_market_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='ingest_q2_market_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_INGEST_Q2_MARKET_DATA,
        **operator_kwargs
    )
    tasks.append(ingest_q2_market_data_task)

    ingest_q2_ticket_data_task = DagsterOperator(
        step='ingest_q2_ticket_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='ingest_q2_ticket_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_INGEST_Q2_TICKET_DATA,
        **operator_kwargs
    )
    tasks.append(ingest_q2_ticket_data_task)

    normalize_q2_weather_na_values_task = DagsterOperator(
        step='normalize_q2_weather_na_values',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='normalize_q2_weather_na_values',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_NORMALIZE_Q2_WEATHER_NA_VALUES,
        **operator_kwargs
    )
    tasks.append(normalize_q2_weather_na_values_task)

    canonicalize_q2_sfo_weather_task = DagsterOperator(
        step='canonicalize_q2_sfo_weather',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='canonicalize_q2_sfo_weather',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_CANONICALIZE_Q2_SFO_WEATHER,
        **operator_kwargs
    )
    tasks.append(canonicalize_q2_sfo_weather_task)

    combine_april_may_on_time_data_task = DagsterOperator(
        step='combine_april_may_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='combine_april_may_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_COMBINE_APRIL_MAY_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(combine_april_may_on_time_data_task)

    prefix_dest_cord_data_task = DagsterOperator(
        step='prefix_dest_cord_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='prefix_dest_cord_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_PREFIX_DEST_CORD_DATA,
        **operator_kwargs
    )
    tasks.append(prefix_dest_cord_data_task)

    prefix_origin_cord_data_task = DagsterOperator(
        step='prefix_origin_cord_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='prefix_origin_cord_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_PREFIX_ORIGIN_CORD_DATA,
        **operator_kwargs
    )
    tasks.append(prefix_origin_cord_data_task)

    subsample_q2_coupon_data_task = DagsterOperator(
        step='subsample_q2_coupon_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='subsample_q2_coupon_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_SUBSAMPLE_Q2_COUPON_DATA,
        **operator_kwargs
    )
    tasks.append(subsample_q2_coupon_data_task)

    subsample_q2_market_data_task = DagsterOperator(
        step='subsample_q2_market_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='subsample_q2_market_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_SUBSAMPLE_Q2_MARKET_DATA,
        **operator_kwargs
    )
    tasks.append(subsample_q2_market_data_task)

    subsample_q2_ticket_data_task = DagsterOperator(
        step='subsample_q2_ticket_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='subsample_q2_ticket_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_SUBSAMPLE_Q2_TICKET_DATA,
        **operator_kwargs
    )
    tasks.append(subsample_q2_ticket_data_task)

    canonicalize_q2_coupon_data_task = DagsterOperator(
        step='canonicalize_q2_coupon_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='canonicalize_q2_coupon_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_CANONICALIZE_Q2_COUPON_DATA,
        **operator_kwargs
    )
    tasks.append(canonicalize_q2_coupon_data_task)

    canonicalize_q2_market_data_task = DagsterOperator(
        step='canonicalize_q2_market_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='canonicalize_q2_market_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_CANONICALIZE_Q2_MARKET_DATA,
        **operator_kwargs
    )
    tasks.append(canonicalize_q2_market_data_task)

    canonicalize_q2_ticket_data_task = DagsterOperator(
        step='canonicalize_q2_ticket_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='canonicalize_q2_ticket_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_CANONICALIZE_Q2_TICKET_DATA,
        **operator_kwargs
    )
    tasks.append(canonicalize_q2_ticket_data_task)

    combine_q2_on_time_data_task = DagsterOperator(
        step='combine_q2_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='combine_q2_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_COMBINE_Q2_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(combine_q2_on_time_data_task)

    load_q2_sfo_weather_task = DagsterOperator(
        step='load_q2_sfo_weather',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='load_q2_sfo_weather',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_LOAD_Q2_SFO_WEATHER,
        **operator_kwargs
    )
    tasks.append(load_q2_sfo_weather_task)

    load_q2_coupon_data_task = DagsterOperator(
        step='load_q2_coupon_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='load_q2_coupon_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_LOAD_Q2_COUPON_DATA,
        **operator_kwargs
    )
    tasks.append(load_q2_coupon_data_task)

    load_q2_market_data_task = DagsterOperator(
        step='load_q2_market_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='load_q2_market_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_LOAD_Q2_MARKET_DATA,
        **operator_kwargs
    )
    tasks.append(load_q2_market_data_task)

    load_q2_ticket_data_task = DagsterOperator(
        step='load_q2_ticket_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='load_q2_ticket_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_LOAD_Q2_TICKET_DATA,
        **operator_kwargs
    )
    tasks.append(load_q2_ticket_data_task)

    subsample_q2_on_time_data_task = DagsterOperator(
        step='subsample_q2_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='subsample_q2_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_SUBSAMPLE_Q2_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(subsample_q2_on_time_data_task)

    join_q2_on_time_data_to_dest_cord_data_task = DagsterOperator(
        step='join_q2_on_time_data_to_dest_cord_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='join_q2_on_time_data_to_dest_cord_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_JOIN_Q2_ON_TIME_DATA_TO_DEST_CORD_DATA,
        **operator_kwargs
    )
    tasks.append(join_q2_on_time_data_to_dest_cord_data_task)

    join_q2_on_time_data_to_origin_cord_data_task = DagsterOperator(
        step='join_q2_on_time_data_to_origin_cord_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='join_q2_on_time_data_to_origin_cord_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_JOIN_Q2_ON_TIME_DATA_TO_ORIGIN_CORD_DATA,
        **operator_kwargs
    )
    tasks.append(join_q2_on_time_data_to_origin_cord_data_task)

    canonicalize_q2_on_time_data_task = DagsterOperator(
        step='canonicalize_q2_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='canonicalize_q2_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_CANONICALIZE_Q2_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(canonicalize_q2_on_time_data_task)

    load_q2_on_time_data_task = DagsterOperator(
        step='load_q2_on_time_data',
        config=CONFIG,
        dag=dag,
        tmp_dir='/tmp/results',
        image='airline-demo-airflow',
        task_id='load_q2_on_time_data',
        pipeline_name=PIPELINE_NAME,
        step_keys=STEPS_FOR_LOAD_Q2_ON_TIME_DATA,
        **operator_kwargs
    )
    tasks.append(load_q2_on_time_data_task)

    download_q2_sfo_weather_task.set_downstream(ingest_q2_sfo_weather_task)
    download_april_on_time_data_task.set_downstream(unzip_april_on_time_data_task)
    download_june_on_time_data_task.set_downstream(unzip_june_on_time_data_task)
    download_master_cord_data_task.set_downstream(unzip_master_cord_data_task)
    download_may_on_time_data_task.set_downstream(unzip_may_on_time_data_task)
    download_q2_coupon_data_task.set_downstream(unzip_q2_coupon_data_task)
    download_q2_market_data_task.set_downstream(unzip_q2_market_data_task)
    download_q2_ticket_data_task.set_downstream(unzip_q2_ticket_data_task)
    unzip_april_on_time_data_task.set_downstream(ingest_april_on_time_data_task)
    unzip_june_on_time_data_task.set_downstream(ingest_june_on_time_data_task)
    unzip_master_cord_data_task.set_downstream(ingest_master_cord_data_task)
    unzip_may_on_time_data_task.set_downstream(ingest_may_on_time_data_task)
    unzip_q2_coupon_data_task.set_downstream(ingest_q2_coupon_data_task)
    unzip_q2_market_data_task.set_downstream(ingest_q2_market_data_task)
    unzip_q2_ticket_data_task.set_downstream(ingest_q2_ticket_data_task)
    ingest_q2_sfo_weather_task.set_downstream(normalize_q2_weather_na_values_task)
    normalize_q2_weather_na_values_task.set_downstream(canonicalize_q2_sfo_weather_task)
    ingest_april_on_time_data_task.set_downstream(combine_april_may_on_time_data_task)
    ingest_may_on_time_data_task.set_downstream(combine_april_may_on_time_data_task)
    ingest_master_cord_data_task.set_downstream(prefix_dest_cord_data_task)
    ingest_master_cord_data_task.set_downstream(prefix_origin_cord_data_task)
    ingest_q2_coupon_data_task.set_downstream(subsample_q2_coupon_data_task)
    ingest_q2_market_data_task.set_downstream(subsample_q2_market_data_task)
    ingest_q2_ticket_data_task.set_downstream(subsample_q2_ticket_data_task)
    subsample_q2_coupon_data_task.set_downstream(canonicalize_q2_coupon_data_task)
    subsample_q2_market_data_task.set_downstream(canonicalize_q2_market_data_task)
    subsample_q2_ticket_data_task.set_downstream(canonicalize_q2_ticket_data_task)
    combine_april_may_on_time_data_task.set_downstream(combine_q2_on_time_data_task)
    ingest_june_on_time_data_task.set_downstream(combine_q2_on_time_data_task)
    canonicalize_q2_sfo_weather_task.set_downstream(load_q2_sfo_weather_task)
    canonicalize_q2_coupon_data_task.set_downstream(load_q2_coupon_data_task)
    canonicalize_q2_market_data_task.set_downstream(load_q2_market_data_task)
    canonicalize_q2_ticket_data_task.set_downstream(load_q2_ticket_data_task)
    combine_q2_on_time_data_task.set_downstream(subsample_q2_on_time_data_task)
    subsample_q2_on_time_data_task.set_downstream(join_q2_on_time_data_to_dest_cord_data_task)
    prefix_dest_cord_data_task.set_downstream(join_q2_on_time_data_to_dest_cord_data_task)
    join_q2_on_time_data_to_dest_cord_data_task.set_downstream(join_q2_on_time_data_to_origin_cord_data_task)
    prefix_origin_cord_data_task.set_downstream(join_q2_on_time_data_to_origin_cord_data_task)
    join_q2_on_time_data_to_origin_cord_data_task.set_downstream(canonicalize_q2_on_time_data_task)
    canonicalize_q2_on_time_data_task.set_downstream(load_q2_on_time_data_task)

    return (dag, tasks)

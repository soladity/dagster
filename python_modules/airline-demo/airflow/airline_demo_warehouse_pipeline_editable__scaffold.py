'''Editable scaffolding autogenerated by dagster-airflow from pipeline
airline_demo_warehouse_pipeline with config:

    context:
      local:
        resources:
          db_info:
            config: {postgres_db_name: test, postgres_hostname: localhost, postgres_password: test,
              postgres_username: test}
          download_manager:
            config: {bucket: dagster-airline-demo-source-data, key: test, skip_if_present: true,
              target_folder: source_data}
    solids:
      upload_delays_by_geography_pdf_plots:
        config: {bucket: dagster-airline-demo-sink, key: delays_by_geography.pdf}
      upload_delays_vs_fares_pdf_plots:
        config: {bucket: dagster-airline-demo-sink, key: delays_vs_fares.pdf}
      upload_outbound_avg_delay_pdf_plots:
        config: {bucket: dagster-airline-demo-sink, key: sfo_outbound_avg_delay_plots.pdf}
    storage:
      s3: {s3_bucket: dagster-airflow-scratch}
    

By convention, users should attempt to isolate post-codegen changes and customizations to this
"editable" file, rather than changing the definitions in the "static"
airline_demo_warehouse_pipeline_static__scaffold.py file. Please let us know if you are encountering
use cases where it is necessary to make changes to the static file.
'''

import datetime

from airline_demo_warehouse_pipeline_static__scaffold import make_dag

# Arguments to be passed to the ``default_args`` parameter of the ``airflow.DAG`` constructor.You
# can override these with values of your choice.
DEFAULT_ARGS = {
    'depends_on_past': False,
    'email': ['airflow@example.com'],
    'email_on_failure': False,
    'email_on_retry': False,
    'owner': 'airflow',
    'retries': 1,
    'retry_delay': datetime.timedelta(0, 300),
    'start_date': datetime.datetime(2019, 4, 2, 0, 29, 20, 398360),
}

# Any additional keyword arguments to be passed to the ``airflow.DAG`` constructor. You can override
# these with values of your choice.
DAG_KWARGS = {
    'schedule_interval': '0 0 * * *',
}

# The name of the autogenerated DAG. By default, this is just the name of the Dagster pipeline from
# which the Airflow DAG was generated (airline_demo_warehouse_pipeline). You may want to override
# this if, for instance, you want to schedule multiple DAGs corresponding to different
# configurations of the same Dagster pipeline.
DAG_ID = 'airline_demo_warehouse_pipeline'

# The description of the autogenerated DAG. By default, this is the description of the Dagster
# pipeline from which the Airflow DAG was generated. You may want to override this, as with the
# DAG_ID parameter.
DAG_DESCRIPTION = '''***Autogenerated by dagster-airflow***'''

# Additional arguments, if any, to pass through to the underlying
# ``dagster_airflow.dagster_plugin.ModifiedDockerOperator`` constructor. Set these if, for instance,
# you need to set special TLS parameters.
OPERATOR_KWARGS = {}

# The 'unusual_prefix' ensures that the following code will be executed only when
# Airflow imports this file. See: https://bcb.github.io/airflow/hide-globals-in-dag-definition-file
if __name__.startswith('unusual_prefix'):
    dag, tasks = make_dag(
        dag_id=DAG_ID,
        dag_description=DAG_DESCRIPTION,
        dag_kwargs=dict(default_args=DEFAULT_ARGS, **DAG_KWARGS),
        operator_kwargs=OPERATOR_KWARGS,
    )

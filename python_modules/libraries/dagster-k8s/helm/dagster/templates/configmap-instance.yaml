apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "dagster.fullname" . }}-instance
  labels:
    app: {{ template "dagster.name" . }}
    chart: {{ template "dagster.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  dagster.yaml: |
    scheduler:
      {{- if .Values.scheduler.k8sEnabled }}
      module: dagster_k8s.scheduler
      class: K8sScheduler
      config:
        load_incluster_config: {{ .Values.scheduler.loadInclusterConfig }}
        scheduler_namespace: {{ .Values.scheduler.schedulerNamespace }}
        kubeconfig_file: {{ .Values.scheduler.kubeconfigFile }}
        {{- with $.Values.imagePullSecrets }}
        image_pull_secrets:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        service_account_name: {{ include "dagster.serviceAccountName" . }}
        job_image:
          env: DAGSTER_K8S_PIPELINE_RUN_IMAGE
        dagster_home:
          env: DAGSTER_HOME
        postgres_password_secret:
          env: DAGSTER_K8S_PG_PASSWORD_SECRET
        image_pull_policy:
          env: DAGSTER_K8S_PIPELINE_RUN_IMAGE_PULL_POLICY
        instance_config_map:
          env: DAGSTER_K8S_INSTANCE_CONFIG_MAP
        env_config_maps:
          - env: DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP
        env_secrets:
          {{- if $.Values.scheduler.env_secrets -}}
          {{- range $name := $.Values.scheduler.env_secrets }}
          {{- if $name }}
          - {{ $name }}
          {{- end }}
          {{- end }}
          {{- end }}
    {{- else }}
      module: dagster_cron.cron_scheduler
      class: SystemCronScheduler
    {{- end }}

    schedule_storage:
      module: dagster_postgres.schedule_storage
      class: PostgresScheduleStorage
      config:
        postgres_db:
          username: {{ .Values.postgresql.postgresqlUsername }}
          password:
            env: DAGSTER_PG_PASSWORD
          hostname: {{ include "dagster.postgresql.host" . }}
          db_name:  {{ .Values.postgresql.postgresqlDatabase	}}
          port: {{ .Values.postgresql.service.port }}

    run_launcher:
      module: dagster_celery_k8s
      class: CeleryK8sRunLauncher
      config:
        dagster_home:
          env: DAGSTER_HOME
        instance_config_map:
          env: DAGSTER_K8S_INSTANCE_CONFIG_MAP
        postgres_password_secret:
          env: DAGSTER_K8S_PG_PASSWORD_SECRET
        broker:  "{{ template "dagster.celery.broker_url" . }}"
        backend: "{{ template "dagster.celery.backend_url" . }}"
        config_source:
          {{- if .Values.celery.configSource }}
          {{ toYaml .Values.celery.configSource | indent 10 }}
          {{- end }}

    run_storage:
      module: dagster_postgres.run_storage
      class: PostgresRunStorage
      config:
        postgres_db:
          username: {{ .Values.postgresql.postgresqlUsername }}
          password:
            env: DAGSTER_PG_PASSWORD
          hostname: {{ include "dagster.postgresql.host" . }}
          db_name:  {{ .Values.postgresql.postgresqlDatabase	}}
          port: {{ .Values.postgresql.service.port }}

    event_log_storage:
      module: dagster_postgres.event_log
      class: PostgresEventLogStorage
      config:
        postgres_db:
          username: {{ .Values.postgresql.postgresqlUsername }}
          password:
            env: DAGSTER_PG_PASSWORD
          hostname: {{ include "dagster.postgresql.host" . }}
          db_name:  {{ .Values.postgresql.postgresqlDatabase	}}
          port: {{ .Values.postgresql.service.port }}

[tox]
envlist = py{38,37,36}-{unix,windows}-{default,requiresairflowdb},pylint

[testenv]
passenv = HOME AIRFLOW_HOME AWS_* BUILDKITE CI_* COVERALLS_REPO_TOKEN DAGSTER_* DOCKER_* GOOGLE_* KUBECONFIG, POSTGRES_TEST_DB_HOST
setenv =
  SLUGIFY_USES_TEXT_UNIDECODE = yes
  VIRTUALENV_NO_DOWNLOAD = yes
deps =
  -e ../../dagster[test]
  -e ../../dagster-graphql
  -e ../../dagster-test
  -e ../dagster-aws
  -e ../dagster-pandas
  -e ../dagster-gcp
  -e ../dagster-cron
  -e ../dagster-postgres
  -e ../../dagster-test
  -e .[test]

usedevelop = true
whitelist_externals =
  /bin/bash
  echo
commands =
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster -e dagit'
  requiresairflowdb: airflow initdb
  echo -e "--- \033[0;32m:pytest: Running tox tests\033[0m"
  !requiresairflowdb: pytest -m "not requires_airflow_db" -vv --junitxml=test_results.xml --cov=dagster_airflow --cov-append --cov-report= {posargs}
  requiresairflowdb: pytest -m requires_airflow_db -vv --junitxml=test_results.xml --cov=dagster_airflow --cov-append --cov-report= {posargs}
  coverage report --omit='.tox/*,**/test_*.py' --skip-covered
  coverage html --omit='.tox/*,**/test_*.py'
  coverage xml --omit='.tox/*,**/test_*.py'

[testenv:pylint]
whitelist_externals =
  pylint
basepython =
  python3.7
commands =
  pylint -j 0 --rcfile=../../../.pylintrc dagster_airflow dagster_airflow_tests

[tox]
envlist = py{38,37,36}-{unix,windows}-{default,markusercodedeployment,markdaemon},pylint
skipsdist = True

[testenv]
passenv = HOME AIRFLOW_HOME AWS_* BUILDKITE* CI_* COVERALLS_REPO_TOKEN DAGSTER_* DOCKER_* GOOGLE_* KUBECONFIG
deps =
  -e ../../../python_modules/dagster[test]
  -e ../../../python_modules/dagster-graphql
  -e ../../../python_modules/dagster-test
  -e ../../../python_modules/libraries/dagster-pandas
  -e ../../../python_modules/libraries/dagster-k8s
  -e ../../../python_modules/libraries/dagster-celery
  -e ../../../python_modules/libraries/dagster-celery-k8s
  -e ../../../python_modules/libraries/dagster-celery-docker
  -e ../../../python_modules/libraries/dagster-postgres
  -e ../../../python_modules/libraries/dagster-airflow
  -e ../../../python_modules/libraries/dagster-aws
  -e ../../../python_modules/libraries/dagster-gcp
  -e ../../python_modules/dagster-k8s-test-infra
whitelist_externals =
  /bin/bash
  echo
commands =
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster -e dagit'
  coverage erase
  echo -e "--- \033[0;32m:pytest: Running tox tests\033[0m"
  default: pytest -m "not mark_user_code_deployment and not mark_user_code_deployment_subchart and not mark_daemon" -s -vv --junitxml=test_results.xml --cov=../../../python_modules/libraries/dagster-celery-k8s --cov-append --cov-report= {posargs}
  markusercodedeployment: pytest -m mark_user_code_deployment -s -vv --junitxml=test_results.xml --cov=../../../python_modules/libraries/dagster-celery-k8s --cov-append --cov-report= {posargs}
  markusercodedeploymentsubchart: pytest -m mark_user_code_deployment_subchart -s -vv --junitxml=test_results.xml --cov=../../../python_modules/libraries/dagster-celery-k8s --cov-append --cov-report= {posargs}
  markdaemon: pytest -m mark_daemon -s -vv --junitxml=test_results.xml --cov=../../../python_modules/libraries/dagster-celery-k8s --cov-append --cov-report= {posargs}
  coverage report --omit='.tox/*,**/test_*.py' --skip-covered
  coverage html --omit='.tox/*,**/test_*.py'
  coverage xml --omit='.tox/*,**/test_*.py'

[testenv:pylint]
whitelist_externals =
  pylint
basepython = python
commands =
  pylint: /bin/bash -c 'cd .. && pylint -j 0 --ignore=.tox --rcfile=../../.pylintrc celery-k8s-integration-test-suite/'
